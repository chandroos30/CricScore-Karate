<?xml version="1.0" encoding="UTF-8"?>
<testsuite xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="https://maven.apache.org/surefire/maven-surefire-plugin/xsd/surefire-test-report-3.0.xsd" version="3.0" name="Runners.TestRunner" time="7.94" tests="1" errors="0" skipped="0" failures="0">
  <properties>
    <property name="sun.desktop" value="windows"/>
    <property name="awt.toolkit" value="sun.awt.windows.WToolkit"/>
    <property name="java.specification.version" value="11"/>
    <property name="sun.cpu.isalist" value="amd64"/>
    <property name="sun.jnu.encoding" value="Cp1252"/>
    <property name="java.class.path" value="C:\Users\chand\SDET\Scorecraze(Karate)\target\test-classes;C:\Users\chand\SDET\Scorecraze(Karate)\target\classes;C:\Users\chand\.m2\repository\com\intuit\karate\karate-core\1.4.1\karate-core-1.4.1.jar;C:\Users\chand\.m2\repository\org\graalvm\js\js-scriptengine\22.3.3\js-scriptengine-22.3.3.jar;C:\Users\chand\.m2\repository\org\graalvm\sdk\graal-sdk\22.3.3\graal-sdk-22.3.3.jar;C:\Users\chand\.m2\repository\org\graalvm\js\js\22.3.3\js-22.3.3.jar;C:\Users\chand\.m2\repository\org\graalvm\regex\regex\22.3.3\regex-22.3.3.jar;C:\Users\chand\.m2\repository\org\graalvm\truffle\truffle-api\22.3.3\truffle-api-22.3.3.jar;C:\Users\chand\.m2\repository\com\ibm\icu\icu4j\71.1\icu4j-71.1.jar;C:\Users\chand\.m2\repository\org\thymeleaf\thymeleaf\3.1.2.RELEASE\thymeleaf-3.1.2.RELEASE.jar;C:\Users\chand\.m2\repository\ognl\ognl\3.3.4\ognl-3.3.4.jar;C:\Users\chand\.m2\repository\org\javassist\javassist\3.29.0-GA\javassist-3.29.0-GA.jar;C:\Users\chand\.m2\repository\org\attoparser\attoparser\2.0.7.RELEASE\attoparser-2.0.7.RELEASE.jar;C:\Users\chand\.m2\repository\org\unbescape\unbescape\1.1.6.RELEASE\unbescape-1.1.6.RELEASE.jar;C:\Users\chand\.m2\repository\org\slf4j\slf4j-api\2.0.7\slf4j-api-2.0.7.jar;C:\Users\chand\.m2\repository\com\linecorp\armeria\armeria\1.25.2\armeria-1.25.2.jar;C:\Users\chand\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.15.2\jackson-core-2.15.2.jar;C:\Users\chand\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.15.2\jackson-annotations-2.15.2.jar;C:\Users\chand\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.15.2\jackson-databind-2.15.2.jar;C:\Users\chand\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jdk8\2.15.2\jackson-datatype-jdk8-2.15.2.jar;C:\Users\chand\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jsr310\2.15.2\jackson-datatype-jsr310-2.15.2.jar;C:\Users\chand\.m2\repository\io\micrometer\micrometer-core\1.11.3\micrometer-core-1.11.3.jar;C:\Users\chand\.m2\repository\io\micrometer\micrometer-commons\1.11.3\micrometer-commons-1.11.3.jar;C:\Users\chand\.m2\repository\io\micrometer\micrometer-observation\1.11.3\micrometer-observation-1.11.3.jar;C:\Users\chand\.m2\repository\org\hdrhistogram\HdrHistogram\2.1.12\HdrHistogram-2.1.12.jar;C:\Users\chand\.m2\repository\org\latencyutils\LatencyUtils\2.0.3\LatencyUtils-2.0.3.jar;C:\Users\chand\.m2\repository\io\netty\netty-transport\4.1.96.Final\netty-transport-4.1.96.Final.jar;C:\Users\chand\.m2\repository\io\netty\netty-common\4.1.96.Final\netty-common-4.1.96.Final.jar;C:\Users\chand\.m2\repository\io\netty\netty-buffer\4.1.96.Final\netty-buffer-4.1.96.Final.jar;C:\Users\chand\.m2\repository\io\netty\netty-resolver\4.1.96.Final\netty-resolver-4.1.96.Final.jar;C:\Users\chand\.m2\repository\io\netty\netty-codec-haproxy\4.1.96.Final\netty-codec-haproxy-4.1.96.Final.jar;C:\Users\chand\.m2\repository\io\netty\netty-codec\4.1.96.Final\netty-codec-4.1.96.Final.jar;C:\Users\chand\.m2\repository\io\netty\netty-codec-http2\4.1.96.Final\netty-codec-http2-4.1.96.Final.jar;C:\Users\chand\.m2\repository\io\netty\netty-handler\4.1.96.Final\netty-handler-4.1.96.Final.jar;C:\Users\chand\.m2\repository\io\netty\netty-codec-http\4.1.96.Final\netty-codec-http-4.1.96.Final.jar;C:\Users\chand\.m2\repository\io\netty\netty-resolver-dns\4.1.96.Final\netty-resolver-dns-4.1.96.Final.jar;C:\Users\chand\.m2\repository\io\netty\netty-codec-dns\4.1.96.Final\netty-codec-dns-4.1.96.Final.jar;C:\Users\chand\.m2\repository\org\reactivestreams\reactive-streams\1.0.4\reactive-streams-1.0.4.jar;C:\Users\chand\.m2\repository\com\google\code\findbugs\jsr305\3.0.2\jsr305-3.0.2.jar;C:\Users\chand\.m2\repository\io\netty\netty-handler-proxy\4.1.96.Final\netty-handler-proxy-4.1.96.Final.jar;C:\Users\chand\.m2\repository\io\netty\netty-codec-socks\4.1.96.Final\netty-codec-socks-4.1.96.Final.jar;C:\Users\chand\.m2\repository\io\netty\netty-transport-native-unix-common\4.1.96.Final\netty-transport-native-unix-common-4.1.96.Final-linux-x86_64.jar;C:\Users\chand\.m2\repository\io\netty\netty-transport-native-epoll\4.1.96.Final\netty-transport-native-epoll-4.1.96.Final-linux-x86_64.jar;C:\Users\chand\.m2\repository\io\netty\netty-transport-native-unix-common\4.1.96.Final\netty-transport-native-unix-common-4.1.96.Final.jar;C:\Users\chand\.m2\repository\io\netty\netty-transport-classes-epoll\4.1.96.Final\netty-transport-classes-epoll-4.1.96.Final.jar;C:\Users\chand\.m2\repository\io\netty\netty-transport-native-unix-common\4.1.96.Final\netty-transport-native-unix-common-4.1.96.Final-linux-aarch_64.jar;C:\Users\chand\.m2\repository\io\netty\netty-transport-native-epoll\4.1.96.Final\netty-transport-native-epoll-4.1.96.Final-linux-aarch_64.jar;C:\Users\chand\.m2\repository\io\netty\netty-transport-native-unix-common\4.1.96.Final\netty-transport-native-unix-common-4.1.96.Final-osx-x86_64.jar;C:\Users\chand\.m2\repository\io\netty\netty-transport-native-kqueue\4.1.96.Final\netty-transport-native-kqueue-4.1.96.Final-osx-x86_64.jar;C:\Users\chand\.m2\repository\io\netty\netty-transport-classes-kqueue\4.1.96.Final\netty-transport-classes-kqueue-4.1.96.Final.jar;C:\Users\chand\.m2\repository\io\netty\netty-resolver-dns-native-macos\4.1.96.Final\netty-resolver-dns-native-macos-4.1.96.Final-osx-x86_64.jar;C:\Users\chand\.m2\repository\io\netty\netty-resolver-dns-classes-macos\4.1.96.Final\netty-resolver-dns-classes-macos-4.1.96.Final.jar;C:\Users\chand\.m2\repository\io\netty\netty-transport-native-unix-common\4.1.96.Final\netty-transport-native-unix-common-4.1.96.Final-osx-aarch_64.jar;C:\Users\chand\.m2\repository\io\netty\netty-transport-native-kqueue\4.1.96.Final\netty-transport-native-kqueue-4.1.96.Final-osx-aarch_64.jar;C:\Users\chand\.m2\repository\io\netty\netty-resolver-dns-native-macos\4.1.96.Final\netty-resolver-dns-native-macos-4.1.96.Final-osx-aarch_64.jar;C:\Users\chand\.m2\repository\io\netty\netty-tcnative-boringssl-static\2.0.61.Final\netty-tcnative-boringssl-static-2.0.61.Final-linux-x86_64.jar;C:\Users\chand\.m2\repository\io\netty\netty-tcnative-classes\2.0.61.Final\netty-tcnative-classes-2.0.61.Final.jar;C:\Users\chand\.m2\repository\io\netty\netty-tcnative-boringssl-static\2.0.61.Final\netty-tcnative-boringssl-static-2.0.61.Final-linux-aarch_64.jar;C:\Users\chand\.m2\repository\io\netty\netty-tcnative-boringssl-static\2.0.61.Final\netty-tcnative-boringssl-static-2.0.61.Final-osx-x86_64.jar;C:\Users\chand\.m2\repository\io\netty\netty-tcnative-boringssl-static\2.0.61.Final\netty-tcnative-boringssl-static-2.0.61.Final-osx-aarch_64.jar;C:\Users\chand\.m2\repository\io\netty\netty-tcnative-boringssl-static\2.0.61.Final\netty-tcnative-boringssl-static-2.0.61.Final-windows-x86_64.jar;C:\Users\chand\.m2\repository\com\aayushatharva\brotli4j\brotli4j\1.12.0\brotli4j-1.12.0.jar;C:\Users\chand\.m2\repository\com\aayushatharva\brotli4j\service\1.12.0\service-1.12.0.jar;C:\Users\chand\.m2\repository\com\aayushatharva\brotli4j\native-windows-x86_64\1.12.0\native-windows-x86_64-1.12.0.jar;C:\Users\chand\.m2\repository\org\apache\httpcomponents\httpclient\4.5.14\httpclient-4.5.14.jar;C:\Users\chand\.m2\repository\org\apache\httpcomponents\httpcore\4.4.16\httpcore-4.4.16.jar;C:\Users\chand\.m2\repository\commons-codec\commons-codec\1.16.0\commons-codec-1.16.0.jar;C:\Users\chand\.m2\repository\ch\qos\logback\logback-classic\1.4.11\logback-classic-1.4.11.jar;C:\Users\chand\.m2\repository\ch\qos\logback\logback-core\1.4.11\logback-core-1.4.11.jar;C:\Users\chand\.m2\repository\org\slf4j\jcl-over-slf4j\2.0.9\jcl-over-slf4j-2.0.9.jar;C:\Users\chand\.m2\repository\org\antlr\antlr4-runtime\4.11.1\antlr4-runtime-4.11.1.jar;C:\Users\chand\.m2\repository\com\jayway\jsonpath\json-path\2.8.0\json-path-2.8.0.jar;C:\Users\chand\.m2\repository\net\minidev\json-smart\2.4.10\json-smart-2.4.10.jar;C:\Users\chand\.m2\repository\net\minidev\accessors-smart\2.4.9\accessors-smart-2.4.9.jar;C:\Users\chand\.m2\repository\org\ow2\asm\asm\9.3\asm-9.3.jar;C:\Users\chand\.m2\repository\org\yaml\snakeyaml\2.0\snakeyaml-2.0.jar;C:\Users\chand\.m2\repository\de\siegmar\fastcsv\2.2.1\fastcsv-2.2.1.jar;C:\Users\chand\.m2\repository\info\picocli\picocli\4.7.1\picocli-4.7.1.jar;C:\Users\chand\.m2\repository\io\github\classgraph\classgraph\4.8.160\classgraph-4.8.160.jar;C:\Users\chand\.m2\repository\io\github\t12y\resemble\1.0.2\resemble-1.0.2.jar;C:\Users\chand\.m2\repository\io\github\t12y\ssim\1.0.0\ssim-1.0.0.jar;C:\Users\chand\.m2\repository\com\intuit\karate\karate-apache\0.9.6\karate-apache-0.9.6.jar;C:\Users\chand\.m2\repository\org\apache\httpcomponents\httpmime\4.5.12\httpmime-4.5.12.jar;C:\Users\chand\.m2\repository\com\intuit\karate\karate-junit5\1.4.1\karate-junit5-1.4.1.jar;C:\Users\chand\.m2\repository\org\junit\jupiter\junit-jupiter-api\5.9.3\junit-jupiter-api-5.9.3.jar;C:\Users\chand\.m2\repository\org\opentest4j\opentest4j\1.2.0\opentest4j-1.2.0.jar;C:\Users\chand\.m2\repository\org\junit\platform\junit-platform-commons\1.9.3\junit-platform-commons-1.9.3.jar;C:\Users\chand\.m2\repository\org\apiguardian\apiguardian-api\1.1.2\apiguardian-api-1.1.2.jar;C:\Users\chand\.m2\repository\org\junit\jupiter\junit-jupiter-engine\5.9.3\junit-jupiter-engine-5.9.3.jar;C:\Users\chand\.m2\repository\org\junit\platform\junit-platform-engine\1.9.3\junit-platform-engine-1.9.3.jar;C:\Users\chand\.m2\repository\org\junit\jupiter\junit-jupiter\5.9.3\junit-jupiter-5.9.3.jar;C:\Users\chand\.m2\repository\org\junit\jupiter\junit-jupiter-params\5.9.3\junit-jupiter-params-5.9.3.jar;"/>
    <property name="java.vm.vendor" value="Oracle Corporation"/>
    <property name="sun.arch.data.model" value="64"/>
    <property name="user.variant" value=""/>
    <property name="java.vendor.url" value="https://java.oracle.com/"/>
    <property name="user.timezone" value="Asia/Calcutta"/>
    <property name="java.vm.specification.version" value="11"/>
    <property name="os.name" value="Windows 11"/>
    <property name="sun.java.launcher" value="SUN_STANDARD"/>
    <property name="user.country" value="IN"/>
    <property name="sun.boot.library.path" value="C:\Program Files\Java\jdk-11\bin"/>
    <property name="sun.java.command" value="C:\Users\chand\AppData\Local\Temp\surefire10811405306929107218\surefirebooter-20251004222534172_3.jar C:\Users\chand\AppData\Local\Temp\surefire10811405306929107218 2025-10-04T22-25-32_674-jvmRun1 surefire-20251004222534172_1tmp surefire_0-20251004222534172_2tmp"/>
    <property name="jdk.debug" value="release"/>
    <property name="surefire.test.class.path" value="C:\Users\chand\SDET\Scorecraze(Karate)\target\test-classes;C:\Users\chand\SDET\Scorecraze(Karate)\target\classes;C:\Users\chand\.m2\repository\com\intuit\karate\karate-core\1.4.1\karate-core-1.4.1.jar;C:\Users\chand\.m2\repository\org\graalvm\js\js-scriptengine\22.3.3\js-scriptengine-22.3.3.jar;C:\Users\chand\.m2\repository\org\graalvm\sdk\graal-sdk\22.3.3\graal-sdk-22.3.3.jar;C:\Users\chand\.m2\repository\org\graalvm\js\js\22.3.3\js-22.3.3.jar;C:\Users\chand\.m2\repository\org\graalvm\regex\regex\22.3.3\regex-22.3.3.jar;C:\Users\chand\.m2\repository\org\graalvm\truffle\truffle-api\22.3.3\truffle-api-22.3.3.jar;C:\Users\chand\.m2\repository\com\ibm\icu\icu4j\71.1\icu4j-71.1.jar;C:\Users\chand\.m2\repository\org\thymeleaf\thymeleaf\3.1.2.RELEASE\thymeleaf-3.1.2.RELEASE.jar;C:\Users\chand\.m2\repository\ognl\ognl\3.3.4\ognl-3.3.4.jar;C:\Users\chand\.m2\repository\org\javassist\javassist\3.29.0-GA\javassist-3.29.0-GA.jar;C:\Users\chand\.m2\repository\org\attoparser\attoparser\2.0.7.RELEASE\attoparser-2.0.7.RELEASE.jar;C:\Users\chand\.m2\repository\org\unbescape\unbescape\1.1.6.RELEASE\unbescape-1.1.6.RELEASE.jar;C:\Users\chand\.m2\repository\org\slf4j\slf4j-api\2.0.7\slf4j-api-2.0.7.jar;C:\Users\chand\.m2\repository\com\linecorp\armeria\armeria\1.25.2\armeria-1.25.2.jar;C:\Users\chand\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.15.2\jackson-core-2.15.2.jar;C:\Users\chand\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.15.2\jackson-annotations-2.15.2.jar;C:\Users\chand\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.15.2\jackson-databind-2.15.2.jar;C:\Users\chand\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jdk8\2.15.2\jackson-datatype-jdk8-2.15.2.jar;C:\Users\chand\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jsr310\2.15.2\jackson-datatype-jsr310-2.15.2.jar;C:\Users\chand\.m2\repository\io\micrometer\micrometer-core\1.11.3\micrometer-core-1.11.3.jar;C:\Users\chand\.m2\repository\io\micrometer\micrometer-commons\1.11.3\micrometer-commons-1.11.3.jar;C:\Users\chand\.m2\repository\io\micrometer\micrometer-observation\1.11.3\micrometer-observation-1.11.3.jar;C:\Users\chand\.m2\repository\org\hdrhistogram\HdrHistogram\2.1.12\HdrHistogram-2.1.12.jar;C:\Users\chand\.m2\repository\org\latencyutils\LatencyUtils\2.0.3\LatencyUtils-2.0.3.jar;C:\Users\chand\.m2\repository\io\netty\netty-transport\4.1.96.Final\netty-transport-4.1.96.Final.jar;C:\Users\chand\.m2\repository\io\netty\netty-common\4.1.96.Final\netty-common-4.1.96.Final.jar;C:\Users\chand\.m2\repository\io\netty\netty-buffer\4.1.96.Final\netty-buffer-4.1.96.Final.jar;C:\Users\chand\.m2\repository\io\netty\netty-resolver\4.1.96.Final\netty-resolver-4.1.96.Final.jar;C:\Users\chand\.m2\repository\io\netty\netty-codec-haproxy\4.1.96.Final\netty-codec-haproxy-4.1.96.Final.jar;C:\Users\chand\.m2\repository\io\netty\netty-codec\4.1.96.Final\netty-codec-4.1.96.Final.jar;C:\Users\chand\.m2\repository\io\netty\netty-codec-http2\4.1.96.Final\netty-codec-http2-4.1.96.Final.jar;C:\Users\chand\.m2\repository\io\netty\netty-handler\4.1.96.Final\netty-handler-4.1.96.Final.jar;C:\Users\chand\.m2\repository\io\netty\netty-codec-http\4.1.96.Final\netty-codec-http-4.1.96.Final.jar;C:\Users\chand\.m2\repository\io\netty\netty-resolver-dns\4.1.96.Final\netty-resolver-dns-4.1.96.Final.jar;C:\Users\chand\.m2\repository\io\netty\netty-codec-dns\4.1.96.Final\netty-codec-dns-4.1.96.Final.jar;C:\Users\chand\.m2\repository\org\reactivestreams\reactive-streams\1.0.4\reactive-streams-1.0.4.jar;C:\Users\chand\.m2\repository\com\google\code\findbugs\jsr305\3.0.2\jsr305-3.0.2.jar;C:\Users\chand\.m2\repository\io\netty\netty-handler-proxy\4.1.96.Final\netty-handler-proxy-4.1.96.Final.jar;C:\Users\chand\.m2\repository\io\netty\netty-codec-socks\4.1.96.Final\netty-codec-socks-4.1.96.Final.jar;C:\Users\chand\.m2\repository\io\netty\netty-transport-native-unix-common\4.1.96.Final\netty-transport-native-unix-common-4.1.96.Final-linux-x86_64.jar;C:\Users\chand\.m2\repository\io\netty\netty-transport-native-epoll\4.1.96.Final\netty-transport-native-epoll-4.1.96.Final-linux-x86_64.jar;C:\Users\chand\.m2\repository\io\netty\netty-transport-native-unix-common\4.1.96.Final\netty-transport-native-unix-common-4.1.96.Final.jar;C:\Users\chand\.m2\repository\io\netty\netty-transport-classes-epoll\4.1.96.Final\netty-transport-classes-epoll-4.1.96.Final.jar;C:\Users\chand\.m2\repository\io\netty\netty-transport-native-unix-common\4.1.96.Final\netty-transport-native-unix-common-4.1.96.Final-linux-aarch_64.jar;C:\Users\chand\.m2\repository\io\netty\netty-transport-native-epoll\4.1.96.Final\netty-transport-native-epoll-4.1.96.Final-linux-aarch_64.jar;C:\Users\chand\.m2\repository\io\netty\netty-transport-native-unix-common\4.1.96.Final\netty-transport-native-unix-common-4.1.96.Final-osx-x86_64.jar;C:\Users\chand\.m2\repository\io\netty\netty-transport-native-kqueue\4.1.96.Final\netty-transport-native-kqueue-4.1.96.Final-osx-x86_64.jar;C:\Users\chand\.m2\repository\io\netty\netty-transport-classes-kqueue\4.1.96.Final\netty-transport-classes-kqueue-4.1.96.Final.jar;C:\Users\chand\.m2\repository\io\netty\netty-resolver-dns-native-macos\4.1.96.Final\netty-resolver-dns-native-macos-4.1.96.Final-osx-x86_64.jar;C:\Users\chand\.m2\repository\io\netty\netty-resolver-dns-classes-macos\4.1.96.Final\netty-resolver-dns-classes-macos-4.1.96.Final.jar;C:\Users\chand\.m2\repository\io\netty\netty-transport-native-unix-common\4.1.96.Final\netty-transport-native-unix-common-4.1.96.Final-osx-aarch_64.jar;C:\Users\chand\.m2\repository\io\netty\netty-transport-native-kqueue\4.1.96.Final\netty-transport-native-kqueue-4.1.96.Final-osx-aarch_64.jar;C:\Users\chand\.m2\repository\io\netty\netty-resolver-dns-native-macos\4.1.96.Final\netty-resolver-dns-native-macos-4.1.96.Final-osx-aarch_64.jar;C:\Users\chand\.m2\repository\io\netty\netty-tcnative-boringssl-static\2.0.61.Final\netty-tcnative-boringssl-static-2.0.61.Final-linux-x86_64.jar;C:\Users\chand\.m2\repository\io\netty\netty-tcnative-classes\2.0.61.Final\netty-tcnative-classes-2.0.61.Final.jar;C:\Users\chand\.m2\repository\io\netty\netty-tcnative-boringssl-static\2.0.61.Final\netty-tcnative-boringssl-static-2.0.61.Final-linux-aarch_64.jar;C:\Users\chand\.m2\repository\io\netty\netty-tcnative-boringssl-static\2.0.61.Final\netty-tcnative-boringssl-static-2.0.61.Final-osx-x86_64.jar;C:\Users\chand\.m2\repository\io\netty\netty-tcnative-boringssl-static\2.0.61.Final\netty-tcnative-boringssl-static-2.0.61.Final-osx-aarch_64.jar;C:\Users\chand\.m2\repository\io\netty\netty-tcnative-boringssl-static\2.0.61.Final\netty-tcnative-boringssl-static-2.0.61.Final-windows-x86_64.jar;C:\Users\chand\.m2\repository\com\aayushatharva\brotli4j\brotli4j\1.12.0\brotli4j-1.12.0.jar;C:\Users\chand\.m2\repository\com\aayushatharva\brotli4j\service\1.12.0\service-1.12.0.jar;C:\Users\chand\.m2\repository\com\aayushatharva\brotli4j\native-windows-x86_64\1.12.0\native-windows-x86_64-1.12.0.jar;C:\Users\chand\.m2\repository\org\apache\httpcomponents\httpclient\4.5.14\httpclient-4.5.14.jar;C:\Users\chand\.m2\repository\org\apache\httpcomponents\httpcore\4.4.16\httpcore-4.4.16.jar;C:\Users\chand\.m2\repository\commons-codec\commons-codec\1.16.0\commons-codec-1.16.0.jar;C:\Users\chand\.m2\repository\ch\qos\logback\logback-classic\1.4.11\logback-classic-1.4.11.jar;C:\Users\chand\.m2\repository\ch\qos\logback\logback-core\1.4.11\logback-core-1.4.11.jar;C:\Users\chand\.m2\repository\org\slf4j\jcl-over-slf4j\2.0.9\jcl-over-slf4j-2.0.9.jar;C:\Users\chand\.m2\repository\org\antlr\antlr4-runtime\4.11.1\antlr4-runtime-4.11.1.jar;C:\Users\chand\.m2\repository\com\jayway\jsonpath\json-path\2.8.0\json-path-2.8.0.jar;C:\Users\chand\.m2\repository\net\minidev\json-smart\2.4.10\json-smart-2.4.10.jar;C:\Users\chand\.m2\repository\net\minidev\accessors-smart\2.4.9\accessors-smart-2.4.9.jar;C:\Users\chand\.m2\repository\org\ow2\asm\asm\9.3\asm-9.3.jar;C:\Users\chand\.m2\repository\org\yaml\snakeyaml\2.0\snakeyaml-2.0.jar;C:\Users\chand\.m2\repository\de\siegmar\fastcsv\2.2.1\fastcsv-2.2.1.jar;C:\Users\chand\.m2\repository\info\picocli\picocli\4.7.1\picocli-4.7.1.jar;C:\Users\chand\.m2\repository\io\github\classgraph\classgraph\4.8.160\classgraph-4.8.160.jar;C:\Users\chand\.m2\repository\io\github\t12y\resemble\1.0.2\resemble-1.0.2.jar;C:\Users\chand\.m2\repository\io\github\t12y\ssim\1.0.0\ssim-1.0.0.jar;C:\Users\chand\.m2\repository\com\intuit\karate\karate-apache\0.9.6\karate-apache-0.9.6.jar;C:\Users\chand\.m2\repository\org\apache\httpcomponents\httpmime\4.5.12\httpmime-4.5.12.jar;C:\Users\chand\.m2\repository\com\intuit\karate\karate-junit5\1.4.1\karate-junit5-1.4.1.jar;C:\Users\chand\.m2\repository\org\junit\jupiter\junit-jupiter-api\5.9.3\junit-jupiter-api-5.9.3.jar;C:\Users\chand\.m2\repository\org\opentest4j\opentest4j\1.2.0\opentest4j-1.2.0.jar;C:\Users\chand\.m2\repository\org\junit\platform\junit-platform-commons\1.9.3\junit-platform-commons-1.9.3.jar;C:\Users\chand\.m2\repository\org\apiguardian\apiguardian-api\1.1.2\apiguardian-api-1.1.2.jar;C:\Users\chand\.m2\repository\org\junit\jupiter\junit-jupiter-engine\5.9.3\junit-jupiter-engine-5.9.3.jar;C:\Users\chand\.m2\repository\org\junit\platform\junit-platform-engine\1.9.3\junit-platform-engine-1.9.3.jar;C:\Users\chand\.m2\repository\org\junit\jupiter\junit-jupiter\5.9.3\junit-jupiter-5.9.3.jar;C:\Users\chand\.m2\repository\org\junit\jupiter\junit-jupiter-params\5.9.3\junit-jupiter-params-5.9.3.jar;"/>
    <property name="sun.cpu.endian" value="little"/>
    <property name="user.home" value="C:\Users\chand"/>
    <property name="user.language" value="en"/>
    <property name="java.specification.vendor" value="Oracle Corporation"/>
    <property name="java.version.date" value="2025-04-15"/>
    <property name="java.home" value="C:\Program Files\Java\jdk-11"/>
    <property name="file.separator" value="\"/>
    <property name="basedir" value="C:\Users\chand\SDET\Scorecraze(Karate)"/>
    <property name="java.vm.compressedOopsMode" value="Zero based"/>
    <property name="line.separator" value="&#10;"/>
    <property name="java.specification.name" value="Java Platform API Specification"/>
    <property name="java.vm.specification.vendor" value="Oracle Corporation"/>
    <property name="java.awt.graphicsenv" value="sun.awt.Win32GraphicsEnvironment"/>
    <property name="surefire.real.class.path" value="C:\Users\chand\AppData\Local\Temp\surefire10811405306929107218\surefirebooter-20251004222534172_3.jar"/>
    <property name="user.script" value=""/>
    <property name="sun.management.compiler" value="HotSpot 64-Bit Tiered Compilers"/>
    <property name="java.runtime.version" value="11.0.27+8-LTS-232"/>
    <property name="user.name" value="chand"/>
    <property name="path.separator" value=";"/>
    <property name="os.version" value="10.0"/>
    <property name="java.runtime.name" value="Java(TM) SE Runtime Environment"/>
    <property name="file.encoding" value="Cp1252"/>
    <property name="java.vm.name" value="Java HotSpot(TM) 64-Bit Server VM"/>
    <property name="java.vendor.version" value="18.9"/>
    <property name="localRepository" value="C:\Users\chand\.m2\repository"/>
    <property name="java.vendor.url.bug" value="https://bugreport.java.com/bugreport/"/>
    <property name="java.io.tmpdir" value="C:\Users\chand\AppData\Local\Temp\"/>
    <property name="java.version" value="11.0.27"/>
    <property name="user.dir" value="C:\Users\chand\SDET\Scorecraze(Karate)"/>
    <property name="os.arch" value="amd64"/>
    <property name="java.vm.specification.name" value="Java Virtual Machine Specification"/>
    <property name="java.awt.printerjob" value="sun.awt.windows.WPrinterJob"/>
    <property name="sun.os.patch.level" value=""/>
    <property name="java.library.path" value="C:\Program Files\Java\jdk-11\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files\Java\jdk-11\bin;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;P:\Oracle21\Product\21c\dbhomeXE\bin;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\dotnet\;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\Program Files\Java\jdk-11\bin;C:\Program Files\Java\jdk-1.8\bin;C:\Program Files\Java\jdk-17\bin;C:\Users\chand\AppData\Local\Android\Sdk\platform-tools;C:\Users\chand\AppData\Local\Android\Sdk;C:\Users\chand\AppData\Local\Android\Sdk\platforms\android-33;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Users\chand\AppData\Local\Android\Sdk\platforms\android-34;C:\Users\chand\AppData\Local\Android\Sdk\tools;C:\Program Files\nodejs\;C:\Users\chand\AppData\Local\Android\Sdk;C:\Users\chand\AppData\Local\Android\Sdk\tools;C:\Users\chand\AppData\Local\Android\Sdk\platform-tools;C:\Program Files\Java\jdk-21\bin;C:\Program Files\apache-maven-3.9.9-bin\apache-maven-3.9.9\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Git\cmd;C:\Program Files\Git\bin;C:\Users\chand\AppData\Local\Microsoft\WindowsApps;C:\Users\chand\AppData\Local\GitHubDesktop\bin;C:\Users\chand\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\chand\.dotnet\tools;C:\Users\chand\AppData\Roaming\npm;;."/>
    <property name="java.vendor" value="Oracle Corporation"/>
    <property name="java.vm.info" value="mixed mode"/>
    <property name="java.vm.version" value="11.0.27+8-LTS-232"/>
    <property name="java.specification.maintenance.version" value="3"/>
    <property name="sun.io.unicode.encoding" value="UnicodeLittle"/>
    <property name="java.class.version" value="55.0"/>
  </properties>
  <testcase name="runAllRegressionTests" classname="Runners.TestRunner" time="7.919">
    <system-out><![CDATA[Running features in parallel. Reports will be generated in target/karate-reports
22:25:35.660 [main] DEBUG com.intuit.karate.Suite -- waiting for 2 features to complete
22:25:36.706 [pool-2-thread-5] DEBUG com.jayway.jsonpath.internal.path.CompiledPath -- Evaluating path: $
22:25:36.707 [pool-2-thread-4] DEBUG com.jayway.jsonpath.internal.path.CompiledPath -- Evaluating path: $
22:25:36.706 [pool-2-thread-3] DEBUG com.jayway.jsonpath.internal.path.CompiledPath -- Evaluating path: $
22:25:36.754 [pool-2-thread-4] DEBUG com.jayway.jsonpath.internal.path.CompiledPath -- Evaluating path: $['filter']['fixtureStatus']
22:25:36.755 [pool-2-thread-3] DEBUG com.jayway.jsonpath.internal.path.CompiledPath -- Evaluating path: $['filter']['fixtureStatus']
22:25:36.756 [pool-2-thread-4] DEBUG com.jayway.jsonpath.internal.path.CompiledPath -- Evaluating path: $['filter']
22:25:36.756 [pool-2-thread-4] DEBUG com.jayway.jsonpath.internal.JsonContext -- Put path $['filter'] key fixtureStatus value Completed
22:25:36.756 [pool-2-thread-3] DEBUG com.jayway.jsonpath.internal.path.CompiledPath -- Evaluating path: $['filter']
22:25:36.756 [pool-2-thread-3] DEBUG com.jayway.jsonpath.internal.JsonContext -- Put path $['filter'] key fixtureStatus value Upcoming
22:25:36.791 [pool-2-thread-5] DEBUG io.netty.util.internal.logging.InternalLoggerFactory -- Using SLF4J as the default logging framework
22:25:36.793 [pool-2-thread-5] DEBUG io.netty.util.internal.PlatformDependent0 -- -Dio.netty.noUnsafe: false
22:25:36.793 [pool-2-thread-5] DEBUG io.netty.util.internal.PlatformDependent0 -- Java version: 11
22:25:36.794 [pool-2-thread-5] DEBUG io.netty.util.internal.PlatformDependent0 -- sun.misc.Unsafe.theUnsafe: available
22:25:36.795 [pool-2-thread-5] DEBUG io.netty.util.internal.PlatformDependent0 -- sun.misc.Unsafe.copyMemory: available
22:25:36.795 [pool-2-thread-5] DEBUG io.netty.util.internal.PlatformDependent0 -- sun.misc.Unsafe.storeFence: available
22:25:36.796 [pool-2-thread-5] DEBUG io.netty.util.internal.PlatformDependent0 -- java.nio.Buffer.address: available
22:25:36.796 [pool-2-thread-5] DEBUG io.netty.util.internal.PlatformDependent0 -- direct buffer constructor: unavailable: Reflective setAccessible(true) disabled
22:25:36.798 [pool-2-thread-5] DEBUG io.netty.util.internal.PlatformDependent0 -- java.nio.Bits.unaligned: available, true
22:25:36.799 [pool-2-thread-5] DEBUG io.netty.util.internal.PlatformDependent0 -- jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable: class io.netty.util.internal.PlatformDependent0$7 cannot access class jdk.internal.misc.Unsafe (in module java.base) because module java.base does not export jdk.internal.misc to unnamed module @6b53bcc2
22:25:36.800 [pool-2-thread-5] DEBUG io.netty.util.internal.PlatformDependent0 -- java.nio.DirectByteBuffer.<init>(long, {int,long}): unavailable
22:25:36.800 [pool-2-thread-5] DEBUG io.netty.util.internal.PlatformDependent -- sun.misc.Unsafe: available
22:25:36.802 [pool-2-thread-5] DEBUG io.netty.util.internal.PlatformDependent -- maxDirectMemory: 4213178368 bytes (maybe)
22:25:36.803 [pool-2-thread-5] DEBUG io.netty.util.internal.PlatformDependent -- -Dio.netty.tmpdir: C:\Users\chand\AppData\Local\Temp (java.io.tmpdir)
22:25:36.803 [pool-2-thread-5] DEBUG io.netty.util.internal.PlatformDependent -- -Dio.netty.bitMode: 64 (sun.arch.data.model)
22:25:36.803 [pool-2-thread-5] DEBUG io.netty.util.internal.PlatformDependent -- Platform: Windows
22:25:36.804 [pool-2-thread-5] DEBUG io.netty.util.internal.PlatformDependent -- -Dio.netty.maxDirectMemory: -1 bytes
22:25:36.805 [pool-2-thread-5] DEBUG io.netty.util.internal.PlatformDependent -- -Dio.netty.uninitializedArrayAllocationThreshold: -1
22:25:36.806 [pool-2-thread-5] DEBUG io.netty.util.internal.CleanerJava9 -- java.nio.ByteBuffer.cleaner(): available
22:25:36.806 [pool-2-thread-5] DEBUG io.netty.util.internal.PlatformDependent -- -Dio.netty.noPreferDirect: false
22:25:37.044 [pool-2-thread-2] DEBUG org.apache.http.client.protocol.RequestAddCookies -- CookieSpec selected: karate
22:25:37.044 [pool-2-thread-4] DEBUG org.apache.http.client.protocol.RequestAddCookies -- CookieSpec selected: karate
22:25:37.044 [pool-2-thread-5] DEBUG org.apache.http.client.protocol.RequestAddCookies -- CookieSpec selected: karate
22:25:37.044 [pool-2-thread-1] DEBUG org.apache.http.client.protocol.RequestAddCookies -- CookieSpec selected: karate
22:25:37.044 [pool-2-thread-3] DEBUG org.apache.http.client.protocol.RequestAddCookies -- CookieSpec selected: karate
22:25:37.050 [pool-2-thread-1] DEBUG org.apache.http.client.protocol.RequestAuthCache -- Auth cache not set in the context
22:25:37.050 [pool-2-thread-5] DEBUG org.apache.http.client.protocol.RequestAuthCache -- Auth cache not set in the context
22:25:37.050 [pool-2-thread-2] DEBUG org.apache.http.client.protocol.RequestAuthCache -- Auth cache not set in the context
22:25:37.050 [pool-2-thread-4] DEBUG org.apache.http.client.protocol.RequestAuthCache -- Auth cache not set in the context
22:25:37.050 [pool-2-thread-3] DEBUG org.apache.http.client.protocol.RequestAuthCache -- Auth cache not set in the context
22:25:37.052 [pool-2-thread-3] DEBUG com.intuit.karate -- request:
1 > POST https://dev.scorecraze.app/api/fixture/cricket
1 > Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2ODkyZjQ2Y2IyNTBhNGY2YjFiZWRjZTciLCJ1c2VyTmFtZSI6ImNoYSIsImVtYWlsIjoiY2hhbmRyb29zMzBAZ21haWwuY29tIiwicGhvbmVOdW1iZXIiOjAsInJvbGUiOiJBZG1pbiIsImlzVmVyaWZpZWQiOnRydWUsIl9fdiI6MCwidXBkYXRlZEF0IjoiMjAyNS0wOS0yMVQwOToyODoxNS45NjlaIiwiaXNBY3RpdmUiOnRydWUsImxhc3RMb2dpbkF0IjoiMjAyNS0wOS0wNFQxMzowMToxOS44MzRaIiwiaWF0IjoxNzU4NDQ2OTE5LCJleHAiOjE3NjExMjUzMTl9.r8-gS-LRd1RhZcaXPeCguep4NatcNJuQI8Et_qlgTII
1 > Content-Type: application/json; charset=UTF-8
1 > Content-Length: 55
1 > Host: dev.scorecraze.app
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.14 (Java/11.0.27)
1 > Accept-Encoding: gzip,deflate
{"filter":{"seriesAPIId":0,"fixtureStatus":"Upcoming"}}

22:25:37.052 [pool-2-thread-4] DEBUG com.intuit.karate -- request:
1 > POST https://dev.scorecraze.app/api/fixture/cricket
1 > Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2ODkyZjQ2Y2IyNTBhNGY2YjFiZWRjZTciLCJ1c2VyTmFtZSI6ImNoYSIsImVtYWlsIjoiY2hhbmRyb29zMzBAZ21haWwuY29tIiwicGhvbmVOdW1iZXIiOjAsInJvbGUiOiJBZG1pbiIsImlzVmVyaWZpZWQiOnRydWUsIl9fdiI6MCwidXBkYXRlZEF0IjoiMjAyNS0wOS0yMVQwOToyODoxNS45NjlaIiwiaXNBY3RpdmUiOnRydWUsImxhc3RMb2dpbkF0IjoiMjAyNS0wOS0wNFQxMzowMToxOS44MzRaIiwiaWF0IjoxNzU4NDQ2OTE5LCJleHAiOjE3NjExMjUzMTl9.r8-gS-LRd1RhZcaXPeCguep4NatcNJuQI8Et_qlgTII
1 > Content-Type: application/json; charset=UTF-8
1 > Content-Length: 56
1 > Host: dev.scorecraze.app
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.14 (Java/11.0.27)
1 > Accept-Encoding: gzip,deflate
{"filter":{"seriesAPIId":0,"fixtureStatus":"Completed"}}

22:25:37.052 [pool-2-thread-1] DEBUG com.intuit.karate -- request:
1 > GET https://dev.scorecraze.app/api/team/cricket
1 > Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2ODkyZjQ2Y2IyNTBhNGY2YjFiZWRjZTciLCJ1c2VyTmFtZSI6ImNoYSIsImVtYWlsIjoiY2hhbmRyb29zMzBAZ21haWwuY29tIiwicGhvbmVOdW1iZXIiOjAsInJvbGUiOiJBZG1pbiIsImlzVmVyaWZpZWQiOnRydWUsIl9fdiI6MCwidXBkYXRlZEF0IjoiMjAyNS0wOS0yMVQwOToyODoxNS45NjlaIiwiaXNBY3RpdmUiOnRydWUsImxhc3RMb2dpbkF0IjoiMjAyNS0wOS0wNFQxMzowMToxOS44MzRaIiwiaWF0IjoxNzU4NDQ2OTE5LCJleHAiOjE3NjExMjUzMTl9.r8-gS-LRd1RhZcaXPeCguep4NatcNJuQI8Et_qlgTII
1 > Content-Type: application/json
1 > Host: dev.scorecraze.app
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.14 (Java/11.0.27)
1 > Accept-Encoding: gzip,deflate


22:25:37.052 [pool-2-thread-2] DEBUG com.intuit.karate -- request:
1 > GET https://dev.scorecraze.app/api/team/cricket/players
1 > Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2ODkyZjQ2Y2IyNTBhNGY2YjFiZWRjZTciLCJ1c2VyTmFtZSI6ImNoYSIsImVtYWlsIjoiY2hhbmRyb29zMzBAZ21haWwuY29tIiwicGhvbmVOdW1iZXIiOjAsInJvbGUiOiJBZG1pbiIsImlzVmVyaWZpZWQiOnRydWUsIl9fdiI6MCwidXBkYXRlZEF0IjoiMjAyNS0wOS0yMVQwOToyODoxNS45NjlaIiwiaXNBY3RpdmUiOnRydWUsImxhc3RMb2dpbkF0IjoiMjAyNS0wOS0wNFQxMzowMToxOS44MzRaIiwiaWF0IjoxNzU4NDQ2OTE5LCJleHAiOjE3NjExMjUzMTl9.r8-gS-LRd1RhZcaXPeCguep4NatcNJuQI8Et_qlgTII
1 > Content-Type: application/json
1 > Host: dev.scorecraze.app
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.14 (Java/11.0.27)
1 > Accept-Encoding: gzip,deflate


22:25:37.052 [pool-2-thread-5] DEBUG com.intuit.karate -- request:
1 > POST https://dev.scorecraze.app/api/fixture/cricket
1 > Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2ODkyZjQ2Y2IyNTBhNGY2YjFiZWRjZTciLCJ1c2VyTmFtZSI6ImNoYSIsImVtYWlsIjoiY2hhbmRyb29zMzBAZ21haWwuY29tIiwicGhvbmVOdW1iZXIiOjAsInJvbGUiOiJBZG1pbiIsImlzVmVyaWZpZWQiOnRydWUsIl9fdiI6MCwidXBkYXRlZEF0IjoiMjAyNS0wOS0yMVQwOToyODoxNS45NjlaIiwiaXNBY3RpdmUiOnRydWUsImxhc3RMb2dpbkF0IjoiMjAyNS0wOS0wNFQxMzowMToxOS44MzRaIiwiaWF0IjoxNzU4NDQ2OTE5LCJleHAiOjE3NjExMjUzMTl9.r8-gS-LRd1RhZcaXPeCguep4NatcNJuQI8Et_qlgTII
1 > Content-Type: application/json; charset=UTF-8
1 > Content-Length: 51
1 > Host: dev.scorecraze.app
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.14 (Java/11.0.27)
1 > Accept-Encoding: gzip,deflate
{"filter":{"seriesAPIId":0,"fixtureStatus":"Live"}}

22:25:37.053 [pool-2-thread-2] DEBUG org.apache.http.impl.conn.PoolingHttpClientConnectionManager -- Connection request: [route: {s}->https://dev.scorecraze.app:443][total available: 0; route allocated: 0 of 5; total allocated: 0 of 10]
22:25:37.053 [pool-2-thread-5] DEBUG org.apache.http.impl.conn.PoolingHttpClientConnectionManager -- Connection request: [route: {s}->https://dev.scorecraze.app:443][total available: 0; route allocated: 0 of 5; total allocated: 0 of 10]
22:25:37.053 [pool-2-thread-4] DEBUG org.apache.http.impl.conn.PoolingHttpClientConnectionManager -- Connection request: [route: {s}->https://dev.scorecraze.app:443][total available: 0; route allocated: 0 of 5; total allocated: 0 of 10]
22:25:37.053 [pool-2-thread-3] DEBUG org.apache.http.impl.conn.PoolingHttpClientConnectionManager -- Connection request: [route: {s}->https://dev.scorecraze.app:443][total available: 0; route allocated: 0 of 5; total allocated: 0 of 10]
22:25:37.053 [pool-2-thread-1] DEBUG org.apache.http.impl.conn.PoolingHttpClientConnectionManager -- Connection request: [route: {s}->https://dev.scorecraze.app:443][total available: 0; route allocated: 0 of 5; total allocated: 0 of 10]
22:25:37.063 [pool-2-thread-1] DEBUG org.apache.http.impl.conn.PoolingHttpClientConnectionManager -- Connection leased: [id: 1][route: {s}->https://dev.scorecraze.app:443][total available: 0; route allocated: 1 of 5; total allocated: 1 of 10]
22:25:37.063 [pool-2-thread-4] DEBUG org.apache.http.impl.conn.PoolingHttpClientConnectionManager -- Connection leased: [id: 4][route: {s}->https://dev.scorecraze.app:443][total available: 0; route allocated: 1 of 5; total allocated: 1 of 10]
22:25:37.063 [pool-2-thread-3] DEBUG org.apache.http.impl.conn.PoolingHttpClientConnectionManager -- Connection leased: [id: 2][route: {s}->https://dev.scorecraze.app:443][total available: 0; route allocated: 1 of 5; total allocated: 1 of 10]
22:25:37.063 [pool-2-thread-2] DEBUG org.apache.http.impl.conn.PoolingHttpClientConnectionManager -- Connection leased: [id: 0][route: {s}->https://dev.scorecraze.app:443][total available: 0; route allocated: 1 of 5; total allocated: 1 of 10]
22:25:37.063 [pool-2-thread-5] DEBUG org.apache.http.impl.conn.PoolingHttpClientConnectionManager -- Connection leased: [id: 3][route: {s}->https://dev.scorecraze.app:443][total available: 0; route allocated: 1 of 5; total allocated: 1 of 10]
22:25:37.064 [pool-2-thread-5] DEBUG org.apache.http.impl.execchain.MainClientExec -- Opening connection {s}->https://dev.scorecraze.app:443
22:25:37.064 [pool-2-thread-3] DEBUG org.apache.http.impl.execchain.MainClientExec -- Opening connection {s}->https://dev.scorecraze.app:443
22:25:37.064 [pool-2-thread-4] DEBUG org.apache.http.impl.execchain.MainClientExec -- Opening connection {s}->https://dev.scorecraze.app:443
22:25:37.064 [pool-2-thread-1] DEBUG org.apache.http.impl.execchain.MainClientExec -- Opening connection {s}->https://dev.scorecraze.app:443
22:25:37.064 [pool-2-thread-2] DEBUG org.apache.http.impl.execchain.MainClientExec -- Opening connection {s}->https://dev.scorecraze.app:443
22:25:37.276 [pool-2-thread-4] DEBUG org.apache.http.impl.conn.DefaultHttpClientConnectionOperator -- Connecting to dev.scorecraze.app/13.233.24.118:443
22:25:37.276 [pool-2-thread-5] DEBUG org.apache.http.impl.conn.DefaultHttpClientConnectionOperator -- Connecting to dev.scorecraze.app/13.233.24.118:443
22:25:37.277 [pool-2-thread-5] DEBUG org.apache.http.conn.ssl.SSLConnectionSocketFactory -- Connecting socket to dev.scorecraze.app/13.233.24.118:443 with timeout 30000
22:25:37.276 [pool-2-thread-3] DEBUG org.apache.http.impl.conn.DefaultHttpClientConnectionOperator -- Connecting to dev.scorecraze.app/13.233.24.118:443
22:25:37.277 [pool-2-thread-3] DEBUG org.apache.http.conn.ssl.SSLConnectionSocketFactory -- Connecting socket to dev.scorecraze.app/13.233.24.118:443 with timeout 30000
22:25:37.276 [pool-2-thread-1] DEBUG org.apache.http.impl.conn.DefaultHttpClientConnectionOperator -- Connecting to dev.scorecraze.app/13.233.24.118:443
22:25:37.277 [pool-2-thread-1] DEBUG org.apache.http.conn.ssl.SSLConnectionSocketFactory -- Connecting socket to dev.scorecraze.app/13.233.24.118:443 with timeout 30000
22:25:37.277 [pool-2-thread-4] DEBUG org.apache.http.conn.ssl.SSLConnectionSocketFactory -- Connecting socket to dev.scorecraze.app/13.233.24.118:443 with timeout 30000
22:25:37.277 [pool-2-thread-2] DEBUG org.apache.http.impl.conn.DefaultHttpClientConnectionOperator -- Connecting to dev.scorecraze.app/13.233.24.118:443
22:25:37.278 [pool-2-thread-2] DEBUG org.apache.http.conn.ssl.SSLConnectionSocketFactory -- Connecting socket to dev.scorecraze.app/13.233.24.118:443 with timeout 30000
22:25:37.357 [pool-2-thread-1] DEBUG org.apache.http.conn.ssl.SSLConnectionSocketFactory -- Enabled protocols: [TLSv1.3, TLSv1.2]
22:25:37.357 [pool-2-thread-1] DEBUG org.apache.http.conn.ssl.SSLConnectionSocketFactory -- Enabled cipher suites:[TLS_AES_256_GCM_SHA384, TLS_AES_128_GCM_SHA256, TLS_CHACHA20_POLY1305_SHA256, TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384, TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256, TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256, TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384, TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256, TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256, TLS_DHE_RSA_WITH_AES_256_GCM_SHA384, TLS_DHE_RSA_WITH_CHACHA20_POLY1305_SHA256, TLS_DHE_DSS_WITH_AES_256_GCM_SHA384, TLS_DHE_RSA_WITH_AES_128_GCM_SHA256, TLS_DHE_DSS_WITH_AES_128_GCM_SHA256, TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA384, TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384, TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256, TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256, TLS_DHE_RSA_WITH_AES_256_CBC_SHA256, TLS_DHE_DSS_WITH_AES_256_CBC_SHA256, TLS_DHE_RSA_WITH_AES_128_CBC_SHA256, TLS_DHE_DSS_WITH_AES_128_CBC_SHA256, TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA, TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA, TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA, TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA, TLS_DHE_RSA_WITH_AES_256_CBC_SHA, TLS_DHE_DSS_WITH_AES_256_CBC_SHA, TLS_DHE_RSA_WITH_AES_128_CBC_SHA, TLS_DHE_DSS_WITH_AES_128_CBC_SHA, TLS_RSA_WITH_AES_256_GCM_SHA384, TLS_RSA_WITH_AES_128_GCM_SHA256, TLS_RSA_WITH_AES_256_CBC_SHA256, TLS_RSA_WITH_AES_128_CBC_SHA256, TLS_RSA_WITH_AES_256_CBC_SHA, TLS_RSA_WITH_AES_128_CBC_SHA, TLS_EMPTY_RENEGOTIATION_INFO_SCSV]
22:25:37.358 [pool-2-thread-1] DEBUG org.apache.http.conn.ssl.SSLConnectionSocketFactory -- Starting handshake
22:25:37.357 [pool-2-thread-3] DEBUG org.apache.http.conn.ssl.SSLConnectionSocketFactory -- Enabled protocols: [TLSv1.3, TLSv1.2]
22:25:37.358 [pool-2-thread-3] DEBUG org.apache.http.conn.ssl.SSLConnectionSocketFactory -- Enabled cipher suites:[TLS_AES_256_GCM_SHA384, TLS_AES_128_GCM_SHA256, TLS_CHACHA20_POLY1305_SHA256, TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384, TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256, TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256, TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384, TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256, TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256, TLS_DHE_RSA_WITH_AES_256_GCM_SHA384, TLS_DHE_RSA_WITH_CHACHA20_POLY1305_SHA256, TLS_DHE_DSS_WITH_AES_256_GCM_SHA384, TLS_DHE_RSA_WITH_AES_128_GCM_SHA256, TLS_DHE_DSS_WITH_AES_128_GCM_SHA256, TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA384, TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384, TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256, TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256, TLS_DHE_RSA_WITH_AES_256_CBC_SHA256, TLS_DHE_DSS_WITH_AES_256_CBC_SHA256, TLS_DHE_RSA_WITH_AES_128_CBC_SHA256, TLS_DHE_DSS_WITH_AES_128_CBC_SHA256, TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA, TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA, TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA, TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA, TLS_DHE_RSA_WITH_AES_256_CBC_SHA, TLS_DHE_DSS_WITH_AES_256_CBC_SHA, TLS_DHE_RSA_WITH_AES_128_CBC_SHA, TLS_DHE_DSS_WITH_AES_128_CBC_SHA, TLS_RSA_WITH_AES_256_GCM_SHA384, TLS_RSA_WITH_AES_128_GCM_SHA256, TLS_RSA_WITH_AES_256_CBC_SHA256, TLS_RSA_WITH_AES_128_CBC_SHA256, TLS_RSA_WITH_AES_256_CBC_SHA, TLS_RSA_WITH_AES_128_CBC_SHA, TLS_EMPTY_RENEGOTIATION_INFO_SCSV]
22:25:37.358 [pool-2-thread-3] DEBUG org.apache.http.conn.ssl.SSLConnectionSocketFactory -- Starting handshake
22:25:37.357 [pool-2-thread-2] DEBUG org.apache.http.conn.ssl.SSLConnectionSocketFactory -- Enabled protocols: [TLSv1.3, TLSv1.2]
22:25:37.358 [pool-2-thread-4] DEBUG org.apache.http.conn.ssl.SSLConnectionSocketFactory -- Enabled protocols: [TLSv1.3, TLSv1.2]
22:25:37.358 [pool-2-thread-5] DEBUG org.apache.http.conn.ssl.SSLConnectionSocketFactory -- Enabled protocols: [TLSv1.3, TLSv1.2]
22:25:37.359 [pool-2-thread-2] DEBUG org.apache.http.conn.ssl.SSLConnectionSocketFactory -- Enabled cipher suites:[TLS_AES_256_GCM_SHA384, TLS_AES_128_GCM_SHA256, TLS_CHACHA20_POLY1305_SHA256, TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384, TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256, TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256, TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384, TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256, TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256, TLS_DHE_RSA_WITH_AES_256_GCM_SHA384, TLS_DHE_RSA_WITH_CHACHA20_POLY1305_SHA256, TLS_DHE_DSS_WITH_AES_256_GCM_SHA384, TLS_DHE_RSA_WITH_AES_128_GCM_SHA256, TLS_DHE_DSS_WITH_AES_128_GCM_SHA256, TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA384, TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384, TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256, TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256, TLS_DHE_RSA_WITH_AES_256_CBC_SHA256, TLS_DHE_DSS_WITH_AES_256_CBC_SHA256, TLS_DHE_RSA_WITH_AES_128_CBC_SHA256, TLS_DHE_DSS_WITH_AES_128_CBC_SHA256, TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA, TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA, TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA, TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA, TLS_DHE_RSA_WITH_AES_256_CBC_SHA, TLS_DHE_DSS_WITH_AES_256_CBC_SHA, TLS_DHE_RSA_WITH_AES_128_CBC_SHA, TLS_DHE_DSS_WITH_AES_128_CBC_SHA, TLS_RSA_WITH_AES_256_GCM_SHA384, TLS_RSA_WITH_AES_128_GCM_SHA256, TLS_RSA_WITH_AES_256_CBC_SHA256, TLS_RSA_WITH_AES_128_CBC_SHA256, TLS_RSA_WITH_AES_256_CBC_SHA, TLS_RSA_WITH_AES_128_CBC_SHA, TLS_EMPTY_RENEGOTIATION_INFO_SCSV]
22:25:37.359 [pool-2-thread-2] DEBUG org.apache.http.conn.ssl.SSLConnectionSocketFactory -- Starting handshake
22:25:37.359 [pool-2-thread-4] DEBUG org.apache.http.conn.ssl.SSLConnectionSocketFactory -- Enabled cipher suites:[TLS_AES_256_GCM_SHA384, TLS_AES_128_GCM_SHA256, TLS_CHACHA20_POLY1305_SHA256, TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384, TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256, TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256, TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384, TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256, TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256, TLS_DHE_RSA_WITH_AES_256_GCM_SHA384, TLS_DHE_RSA_WITH_CHACHA20_POLY1305_SHA256, TLS_DHE_DSS_WITH_AES_256_GCM_SHA384, TLS_DHE_RSA_WITH_AES_128_GCM_SHA256, TLS_DHE_DSS_WITH_AES_128_GCM_SHA256, TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA384, TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384, TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256, TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256, TLS_DHE_RSA_WITH_AES_256_CBC_SHA256, TLS_DHE_DSS_WITH_AES_256_CBC_SHA256, TLS_DHE_RSA_WITH_AES_128_CBC_SHA256, TLS_DHE_DSS_WITH_AES_128_CBC_SHA256, TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA, TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA, TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA, TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA, TLS_DHE_RSA_WITH_AES_256_CBC_SHA, TLS_DHE_DSS_WITH_AES_256_CBC_SHA, TLS_DHE_RSA_WITH_AES_128_CBC_SHA, TLS_DHE_DSS_WITH_AES_128_CBC_SHA, TLS_RSA_WITH_AES_256_GCM_SHA384, TLS_RSA_WITH_AES_128_GCM_SHA256, TLS_RSA_WITH_AES_256_CBC_SHA256, TLS_RSA_WITH_AES_128_CBC_SHA256, TLS_RSA_WITH_AES_256_CBC_SHA, TLS_RSA_WITH_AES_128_CBC_SHA, TLS_EMPTY_RENEGOTIATION_INFO_SCSV]
22:25:37.359 [pool-2-thread-5] DEBUG org.apache.http.conn.ssl.SSLConnectionSocketFactory -- Enabled cipher suites:[TLS_AES_256_GCM_SHA384, TLS_AES_128_GCM_SHA256, TLS_CHACHA20_POLY1305_SHA256, TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384, TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256, TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256, TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384, TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256, TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256, TLS_DHE_RSA_WITH_AES_256_GCM_SHA384, TLS_DHE_RSA_WITH_CHACHA20_POLY1305_SHA256, TLS_DHE_DSS_WITH_AES_256_GCM_SHA384, TLS_DHE_RSA_WITH_AES_128_GCM_SHA256, TLS_DHE_DSS_WITH_AES_128_GCM_SHA256, TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA384, TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384, TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256, TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256, TLS_DHE_RSA_WITH_AES_256_CBC_SHA256, TLS_DHE_DSS_WITH_AES_256_CBC_SHA256, TLS_DHE_RSA_WITH_AES_128_CBC_SHA256, TLS_DHE_DSS_WITH_AES_128_CBC_SHA256, TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA, TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA, TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA, TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA, TLS_DHE_RSA_WITH_AES_256_CBC_SHA, TLS_DHE_DSS_WITH_AES_256_CBC_SHA, TLS_DHE_RSA_WITH_AES_128_CBC_SHA, TLS_DHE_DSS_WITH_AES_128_CBC_SHA, TLS_RSA_WITH_AES_256_GCM_SHA384, TLS_RSA_WITH_AES_128_GCM_SHA256, TLS_RSA_WITH_AES_256_CBC_SHA256, TLS_RSA_WITH_AES_128_CBC_SHA256, TLS_RSA_WITH_AES_256_CBC_SHA, TLS_RSA_WITH_AES_128_CBC_SHA, TLS_EMPTY_RENEGOTIATION_INFO_SCSV]
22:25:37.360 [pool-2-thread-5] DEBUG org.apache.http.conn.ssl.SSLConnectionSocketFactory -- Starting handshake
22:25:37.360 [pool-2-thread-4] DEBUG org.apache.http.conn.ssl.SSLConnectionSocketFactory -- Starting handshake
22:25:37.736 [pool-2-thread-2] DEBUG org.apache.http.conn.ssl.SSLConnectionSocketFactory -- Secure session established
22:25:37.737 [pool-2-thread-3] DEBUG org.apache.http.conn.ssl.SSLConnectionSocketFactory -- Secure session established
22:25:37.737 [pool-2-thread-3] DEBUG org.apache.http.conn.ssl.SSLConnectionSocketFactory --  negotiated protocol: TLSv1.3
22:25:37.737 [pool-2-thread-4] DEBUG org.apache.http.conn.ssl.SSLConnectionSocketFactory -- Secure session established
22:25:37.737 [pool-2-thread-4] DEBUG org.apache.http.conn.ssl.SSLConnectionSocketFactory --  negotiated protocol: TLSv1.3
22:25:37.737 [pool-2-thread-4] DEBUG org.apache.http.conn.ssl.SSLConnectionSocketFactory --  negotiated cipher suite: TLS_AES_256_GCM_SHA384
22:25:37.738 [pool-2-thread-4] DEBUG org.apache.http.conn.ssl.SSLConnectionSocketFactory --  peer principal: CN=dev.scorecraze.app
22:25:37.738 [pool-2-thread-4] DEBUG org.apache.http.conn.ssl.SSLConnectionSocketFactory --  peer alternative names: [dev.scorecraze.app]
22:25:37.740 [pool-2-thread-4] DEBUG org.apache.http.conn.ssl.SSLConnectionSocketFactory --  issuer principal: CN=E8, O=Let's Encrypt, C=US
22:25:37.736 [pool-2-thread-5] DEBUG org.apache.http.conn.ssl.SSLConnectionSocketFactory -- Secure session established
22:25:37.737 [pool-2-thread-2] DEBUG org.apache.http.conn.ssl.SSLConnectionSocketFactory --  negotiated protocol: TLSv1.3
22:25:37.743 [pool-2-thread-2] DEBUG org.apache.http.conn.ssl.SSLConnectionSocketFactory --  negotiated cipher suite: TLS_AES_256_GCM_SHA384
22:25:37.737 [pool-2-thread-1] DEBUG org.apache.http.conn.ssl.SSLConnectionSocketFactory -- Secure session established
22:25:37.737 [pool-2-thread-3] DEBUG org.apache.http.conn.ssl.SSLConnectionSocketFactory --  negotiated cipher suite: TLS_AES_256_GCM_SHA384
22:25:37.743 [pool-2-thread-5] DEBUG org.apache.http.conn.ssl.SSLConnectionSocketFactory --  negotiated protocol: TLSv1.3
22:25:37.744 [pool-2-thread-3] DEBUG org.apache.http.conn.ssl.SSLConnectionSocketFactory --  peer principal: CN=dev.scorecraze.app
22:25:37.743 [pool-2-thread-2] DEBUG org.apache.http.conn.ssl.SSLConnectionSocketFactory --  peer principal: CN=dev.scorecraze.app
22:25:37.743 [pool-2-thread-1] DEBUG org.apache.http.conn.ssl.SSLConnectionSocketFactory --  negotiated protocol: TLSv1.3
22:25:37.744 [pool-2-thread-2] DEBUG org.apache.http.conn.ssl.SSLConnectionSocketFactory --  peer alternative names: [dev.scorecraze.app]
22:25:37.744 [pool-2-thread-5] DEBUG org.apache.http.conn.ssl.SSLConnectionSocketFactory --  negotiated cipher suite: TLS_AES_256_GCM_SHA384
22:25:37.744 [pool-2-thread-5] DEBUG org.apache.http.conn.ssl.SSLConnectionSocketFactory --  peer principal: CN=dev.scorecraze.app
22:25:37.744 [pool-2-thread-5] DEBUG org.apache.http.conn.ssl.SSLConnectionSocketFactory --  peer alternative names: [dev.scorecraze.app]
22:25:37.744 [pool-2-thread-5] DEBUG org.apache.http.conn.ssl.SSLConnectionSocketFactory --  issuer principal: CN=E8, O=Let's Encrypt, C=US
22:25:37.744 [pool-2-thread-3] DEBUG org.apache.http.conn.ssl.SSLConnectionSocketFactory --  peer alternative names: [dev.scorecraze.app]
22:25:37.744 [pool-2-thread-1] DEBUG org.apache.http.conn.ssl.SSLConnectionSocketFactory --  negotiated cipher suite: TLS_AES_256_GCM_SHA384
22:25:37.749 [pool-2-thread-3] DEBUG org.apache.http.conn.ssl.SSLConnectionSocketFactory --  issuer principal: CN=E8, O=Let's Encrypt, C=US
22:25:37.744 [pool-2-thread-2] DEBUG org.apache.http.conn.ssl.SSLConnectionSocketFactory --  issuer principal: CN=E8, O=Let's Encrypt, C=US
22:25:37.749 [pool-2-thread-1] DEBUG org.apache.http.conn.ssl.SSLConnectionSocketFactory --  peer principal: CN=dev.scorecraze.app
22:25:37.752 [pool-2-thread-1] DEBUG org.apache.http.conn.ssl.SSLConnectionSocketFactory --  peer alternative names: [dev.scorecraze.app]
22:25:37.753 [pool-2-thread-1] DEBUG org.apache.http.conn.ssl.SSLConnectionSocketFactory --  issuer principal: CN=E8, O=Let's Encrypt, C=US
22:25:37.757 [pool-2-thread-4] DEBUG org.apache.http.impl.conn.DefaultHttpClientConnectionOperator -- Connection established 172.20.10.11:49676<->13.233.24.118:443
22:25:37.758 [pool-2-thread-2] DEBUG org.apache.http.impl.conn.DefaultHttpClientConnectionOperator -- Connection established 172.20.10.11:49677<->13.233.24.118:443
22:25:37.758 [pool-2-thread-5] DEBUG org.apache.http.impl.conn.DefaultHttpClientConnectionOperator -- Connection established 172.20.10.11:49672<->13.233.24.118:443
22:25:37.758 [pool-2-thread-2] DEBUG org.apache.http.impl.conn.DefaultManagedHttpClientConnection -- http-outgoing-1: set socket timeout to 30000
22:25:37.758 [pool-2-thread-3] DEBUG org.apache.http.impl.conn.DefaultHttpClientConnectionOperator -- Connection established 172.20.10.11:49673<->13.233.24.118:443
22:25:37.758 [pool-2-thread-3] DEBUG org.apache.http.impl.conn.DefaultManagedHttpClientConnection -- http-outgoing-0: set socket timeout to 30000
22:25:37.758 [pool-2-thread-1] DEBUG org.apache.http.impl.conn.DefaultHttpClientConnectionOperator -- Connection established 172.20.10.11:49674<->13.233.24.118:443
22:25:37.759 [pool-2-thread-3] DEBUG org.apache.http.impl.execchain.MainClientExec -- Executing request POST /api/fixture/cricket HTTP/1.1
22:25:37.759 [pool-2-thread-1] DEBUG org.apache.http.impl.conn.DefaultManagedHttpClientConnection -- http-outgoing-3: set socket timeout to 30000
22:25:37.759 [pool-2-thread-3] DEBUG org.apache.http.impl.execchain.MainClientExec -- Proxy auth state: UNCHALLENGED
22:25:37.758 [pool-2-thread-5] DEBUG org.apache.http.impl.conn.DefaultManagedHttpClientConnection -- http-outgoing-2: set socket timeout to 30000
22:25:37.758 [pool-2-thread-2] DEBUG org.apache.http.impl.execchain.MainClientExec -- Executing request GET /api/team/cricket/players HTTP/1.1
22:25:37.760 [pool-2-thread-2] DEBUG org.apache.http.impl.execchain.MainClientExec -- Proxy auth state: UNCHALLENGED
22:25:37.760 [pool-2-thread-5] DEBUG org.apache.http.impl.execchain.MainClientExec -- Executing request POST /api/fixture/cricket HTTP/1.1
22:25:37.760 [pool-2-thread-5] DEBUG org.apache.http.impl.execchain.MainClientExec -- Proxy auth state: UNCHALLENGED
22:25:37.759 [pool-2-thread-1] DEBUG org.apache.http.impl.execchain.MainClientExec -- Executing request GET /api/team/cricket HTTP/1.1
22:25:37.760 [pool-2-thread-1] DEBUG org.apache.http.impl.execchain.MainClientExec -- Proxy auth state: UNCHALLENGED
22:25:37.759 [pool-2-thread-4] DEBUG org.apache.http.impl.conn.DefaultManagedHttpClientConnection -- http-outgoing-4: set socket timeout to 30000
22:25:37.761 [pool-2-thread-4] DEBUG org.apache.http.impl.execchain.MainClientExec -- Executing request POST /api/fixture/cricket HTTP/1.1
22:25:37.761 [pool-2-thread-4] DEBUG org.apache.http.impl.execchain.MainClientExec -- Proxy auth state: UNCHALLENGED
22:25:37.769 [pool-2-thread-2] DEBUG org.apache.http.headers -- http-outgoing-1 >> GET /api/team/cricket/players HTTP/1.1
22:25:37.769 [pool-2-thread-4] DEBUG org.apache.http.headers -- http-outgoing-4 >> POST /api/fixture/cricket HTTP/1.1
22:25:37.769 [pool-2-thread-4] DEBUG org.apache.http.headers -- http-outgoing-4 >> Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2ODkyZjQ2Y2IyNTBhNGY2YjFiZWRjZTciLCJ1c2VyTmFtZSI6ImNoYSIsImVtYWlsIjoiY2hhbmRyb29zMzBAZ21haWwuY29tIiwicGhvbmVOdW1iZXIiOjAsInJvbGUiOiJBZG1pbiIsImlzVmVyaWZpZWQiOnRydWUsIl9fdiI6MCwidXBkYXRlZEF0IjoiMjAyNS0wOS0yMVQwOToyODoxNS45NjlaIiwiaXNBY3RpdmUiOnRydWUsImxhc3RMb2dpbkF0IjoiMjAyNS0wOS0wNFQxMzowMToxOS44MzRaIiwiaWF0IjoxNzU4NDQ2OTE5LCJleHAiOjE3NjExMjUzMTl9.r8-gS-LRd1RhZcaXPeCguep4NatcNJuQI8Et_qlgTII
22:25:37.770 [pool-2-thread-4] DEBUG org.apache.http.headers -- http-outgoing-4 >> Content-Type: application/json; charset=UTF-8
22:25:37.770 [pool-2-thread-4] DEBUG org.apache.http.headers -- http-outgoing-4 >> Content-Length: 56
22:25:37.770 [pool-2-thread-4] DEBUG org.apache.http.headers -- http-outgoing-4 >> Host: dev.scorecraze.app
22:25:37.770 [pool-2-thread-4] DEBUG org.apache.http.headers -- http-outgoing-4 >> Connection: Keep-Alive
22:25:37.770 [pool-2-thread-4] DEBUG org.apache.http.headers -- http-outgoing-4 >> User-Agent: Apache-HttpClient/4.5.14 (Java/11.0.27)
22:25:37.770 [pool-2-thread-4] DEBUG org.apache.http.headers -- http-outgoing-4 >> Accept-Encoding: gzip,deflate
22:25:37.771 [pool-2-thread-4] DEBUG org.apache.http.wire -- http-outgoing-4 >> "POST /api/fixture/cricket HTTP/1.1[\r][\n]"
22:25:37.778 [pool-2-thread-4] DEBUG org.apache.http.wire -- http-outgoing-4 >> "Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2ODkyZjQ2Y2IyNTBhNGY2YjFiZWRjZTciLCJ1c2VyTmFtZSI6ImNoYSIsImVtYWlsIjoiY2hhbmRyb29zMzBAZ21haWwuY29tIiwicGhvbmVOdW1iZXIiOjAsInJvbGUiOiJBZG1pbiIsImlzVmVyaWZpZWQiOnRydWUsIl9fdiI6MCwidXBkYXRlZEF0IjoiMjAyNS0wOS0yMVQwOToyODoxNS45NjlaIiwiaXNBY3RpdmUiOnRydWUsImxhc3RMb2dpbkF0IjoiMjAyNS0wOS0wNFQxMzowMToxOS44MzRaIiwiaWF0IjoxNzU4NDQ2OTE5LCJleHAiOjE3NjExMjUzMTl9.r8-gS-LRd1RhZcaXPeCguep4NatcNJuQI8Et_qlgTII[\r][\n]"
22:25:37.778 [pool-2-thread-4] DEBUG org.apache.http.wire -- http-outgoing-4 >> "Content-Type: application/json; charset=UTF-8[\r][\n]"
22:25:37.778 [pool-2-thread-4] DEBUG org.apache.http.wire -- http-outgoing-4 >> "Content-Length: 56[\r][\n]"
22:25:37.778 [pool-2-thread-4] DEBUG org.apache.http.wire -- http-outgoing-4 >> "Host: dev.scorecraze.app[\r][\n]"
22:25:37.778 [pool-2-thread-4] DEBUG org.apache.http.wire -- http-outgoing-4 >> "Connection: Keep-Alive[\r][\n]"
22:25:37.778 [pool-2-thread-4] DEBUG org.apache.http.wire -- http-outgoing-4 >> "User-Agent: Apache-HttpClient/4.5.14 (Java/11.0.27)[\r][\n]"
22:25:37.778 [pool-2-thread-4] DEBUG org.apache.http.wire -- http-outgoing-4 >> "Accept-Encoding: gzip,deflate[\r][\n]"
22:25:37.778 [pool-2-thread-4] DEBUG org.apache.http.wire -- http-outgoing-4 >> "[\r][\n]"
22:25:37.780 [pool-2-thread-4] DEBUG org.apache.http.wire -- http-outgoing-4 >> "{"filter":{"seriesAPIId":0,"fixtureStatus":"Completed"}}"
22:25:37.771 [pool-2-thread-1] DEBUG org.apache.http.headers -- http-outgoing-3 >> GET /api/team/cricket HTTP/1.1
22:25:37.772 [pool-2-thread-5] DEBUG org.apache.http.headers -- http-outgoing-2 >> POST /api/fixture/cricket HTTP/1.1
22:25:37.891 [pool-2-thread-5] DEBUG org.apache.http.headers -- http-outgoing-2 >> Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2ODkyZjQ2Y2IyNTBhNGY2YjFiZWRjZTciLCJ1c2VyTmFtZSI6ImNoYSIsImVtYWlsIjoiY2hhbmRyb29zMzBAZ21haWwuY29tIiwicGhvbmVOdW1iZXIiOjAsInJvbGUiOiJBZG1pbiIsImlzVmVyaWZpZWQiOnRydWUsIl9fdiI6MCwidXBkYXRlZEF0IjoiMjAyNS0wOS0yMVQwOToyODoxNS45NjlaIiwiaXNBY3RpdmUiOnRydWUsImxhc3RMb2dpbkF0IjoiMjAyNS0wOS0wNFQxMzowMToxOS44MzRaIiwiaWF0IjoxNzU4NDQ2OTE5LCJleHAiOjE3NjExMjUzMTl9.r8-gS-LRd1RhZcaXPeCguep4NatcNJuQI8Et_qlgTII
22:25:37.891 [pool-2-thread-5] DEBUG org.apache.http.headers -- http-outgoing-2 >> Content-Type: application/json; charset=UTF-8
22:25:37.891 [pool-2-thread-5] DEBUG org.apache.http.headers -- http-outgoing-2 >> Content-Length: 51
22:25:37.892 [pool-2-thread-5] DEBUG org.apache.http.headers -- http-outgoing-2 >> Host: dev.scorecraze.app
22:25:37.892 [pool-2-thread-5] DEBUG org.apache.http.headers -- http-outgoing-2 >> Connection: Keep-Alive
22:25:37.892 [pool-2-thread-5] DEBUG org.apache.http.headers -- http-outgoing-2 >> User-Agent: Apache-HttpClient/4.5.14 (Java/11.0.27)
22:25:37.892 [pool-2-thread-5] DEBUG org.apache.http.headers -- http-outgoing-2 >> Accept-Encoding: gzip,deflate
22:25:37.772 [pool-2-thread-3] DEBUG org.apache.http.headers -- http-outgoing-0 >> POST /api/fixture/cricket HTTP/1.1
22:25:37.777 [pool-2-thread-2] DEBUG org.apache.http.headers -- http-outgoing-1 >> Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2ODkyZjQ2Y2IyNTBhNGY2YjFiZWRjZTciLCJ1c2VyTmFtZSI6ImNoYSIsImVtYWlsIjoiY2hhbmRyb29zMzBAZ21haWwuY29tIiwicGhvbmVOdW1iZXIiOjAsInJvbGUiOiJBZG1pbiIsImlzVmVyaWZpZWQiOnRydWUsIl9fdiI6MCwidXBkYXRlZEF0IjoiMjAyNS0wOS0yMVQwOToyODoxNS45NjlaIiwiaXNBY3RpdmUiOnRydWUsImxhc3RMb2dpbkF0IjoiMjAyNS0wOS0wNFQxMzowMToxOS44MzRaIiwiaWF0IjoxNzU4NDQ2OTE5LCJleHAiOjE3NjExMjUzMTl9.r8-gS-LRd1RhZcaXPeCguep4NatcNJuQI8Et_qlgTII
22:25:37.892 [pool-2-thread-2] DEBUG org.apache.http.headers -- http-outgoing-1 >> Content-Type: application/json
22:25:37.893 [pool-2-thread-2] DEBUG org.apache.http.headers -- http-outgoing-1 >> Host: dev.scorecraze.app
22:25:37.892 [pool-2-thread-5] DEBUG org.apache.http.wire -- http-outgoing-2 >> "POST /api/fixture/cricket HTTP/1.1[\r][\n]"
22:25:37.892 [pool-2-thread-3] DEBUG org.apache.http.headers -- http-outgoing-0 >> Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2ODkyZjQ2Y2IyNTBhNGY2YjFiZWRjZTciLCJ1c2VyTmFtZSI6ImNoYSIsImVtYWlsIjoiY2hhbmRyb29zMzBAZ21haWwuY29tIiwicGhvbmVOdW1iZXIiOjAsInJvbGUiOiJBZG1pbiIsImlzVmVyaWZpZWQiOnRydWUsIl9fdiI6MCwidXBkYXRlZEF0IjoiMjAyNS0wOS0yMVQwOToyODoxNS45NjlaIiwiaXNBY3RpdmUiOnRydWUsImxhc3RMb2dpbkF0IjoiMjAyNS0wOS0wNFQxMzowMToxOS44MzRaIiwiaWF0IjoxNzU4NDQ2OTE5LCJleHAiOjE3NjExMjUzMTl9.r8-gS-LRd1RhZcaXPeCguep4NatcNJuQI8Et_qlgTII
22:25:37.893 [pool-2-thread-5] DEBUG org.apache.http.wire -- http-outgoing-2 >> "Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2ODkyZjQ2Y2IyNTBhNGY2YjFiZWRjZTciLCJ1c2VyTmFtZSI6ImNoYSIsImVtYWlsIjoiY2hhbmRyb29zMzBAZ21haWwuY29tIiwicGhvbmVOdW1iZXIiOjAsInJvbGUiOiJBZG1pbiIsImlzVmVyaWZpZWQiOnRydWUsIl9fdiI6MCwidXBkYXRlZEF0IjoiMjAyNS0wOS0yMVQwOToyODoxNS45NjlaIiwiaXNBY3RpdmUiOnRydWUsImxhc3RMb2dpbkF0IjoiMjAyNS0wOS0wNFQxMzowMToxOS44MzRaIiwiaWF0IjoxNzU4NDQ2OTE5LCJleHAiOjE3NjExMjUzMTl9.r8-gS-LRd1RhZcaXPeCguep4NatcNJuQI8Et_qlgTII[\r][\n]"
22:25:37.893 [pool-2-thread-1] DEBUG org.apache.http.headers -- http-outgoing-3 >> Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2ODkyZjQ2Y2IyNTBhNGY2YjFiZWRjZTciLCJ1c2VyTmFtZSI6ImNoYSIsImVtYWlsIjoiY2hhbmRyb29zMzBAZ21haWwuY29tIiwicGhvbmVOdW1iZXIiOjAsInJvbGUiOiJBZG1pbiIsImlzVmVyaWZpZWQiOnRydWUsIl9fdiI6MCwidXBkYXRlZEF0IjoiMjAyNS0wOS0yMVQwOToyODoxNS45NjlaIiwiaXNBY3RpdmUiOnRydWUsImxhc3RMb2dpbkF0IjoiMjAyNS0wOS0wNFQxMzowMToxOS44MzRaIiwiaWF0IjoxNzU4NDQ2OTE5LCJleHAiOjE3NjExMjUzMTl9.r8-gS-LRd1RhZcaXPeCguep4NatcNJuQI8Et_qlgTII
22:25:37.893 [pool-2-thread-1] DEBUG org.apache.http.headers -- http-outgoing-3 >> Content-Type: application/json
22:25:37.893 [pool-2-thread-1] DEBUG org.apache.http.headers -- http-outgoing-3 >> Host: dev.scorecraze.app
22:25:37.894 [pool-2-thread-1] DEBUG org.apache.http.headers -- http-outgoing-3 >> Connection: Keep-Alive
22:25:37.893 [pool-2-thread-2] DEBUG org.apache.http.headers -- http-outgoing-1 >> Connection: Keep-Alive
22:25:37.893 [pool-2-thread-3] DEBUG org.apache.http.headers -- http-outgoing-0 >> Content-Type: application/json; charset=UTF-8
22:25:37.894 [pool-2-thread-3] DEBUG org.apache.http.headers -- http-outgoing-0 >> Content-Length: 55
22:25:37.894 [pool-2-thread-3] DEBUG org.apache.http.headers -- http-outgoing-0 >> Host: dev.scorecraze.app
22:25:37.894 [pool-2-thread-3] DEBUG org.apache.http.headers -- http-outgoing-0 >> Connection: Keep-Alive
22:25:37.894 [pool-2-thread-3] DEBUG org.apache.http.headers -- http-outgoing-0 >> User-Agent: Apache-HttpClient/4.5.14 (Java/11.0.27)
22:25:37.895 [pool-2-thread-3] DEBUG org.apache.http.headers -- http-outgoing-0 >> Accept-Encoding: gzip,deflate
22:25:37.895 [pool-2-thread-3] DEBUG org.apache.http.wire -- http-outgoing-0 >> "POST /api/fixture/cricket HTTP/1.1[\r][\n]"
22:25:37.895 [pool-2-thread-3] DEBUG org.apache.http.wire -- http-outgoing-0 >> "Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2ODkyZjQ2Y2IyNTBhNGY2YjFiZWRjZTciLCJ1c2VyTmFtZSI6ImNoYSIsImVtYWlsIjoiY2hhbmRyb29zMzBAZ21haWwuY29tIiwicGhvbmVOdW1iZXIiOjAsInJvbGUiOiJBZG1pbiIsImlzVmVyaWZpZWQiOnRydWUsIl9fdiI6MCwidXBkYXRlZEF0IjoiMjAyNS0wOS0yMVQwOToyODoxNS45NjlaIiwiaXNBY3RpdmUiOnRydWUsImxhc3RMb2dpbkF0IjoiMjAyNS0wOS0wNFQxMzowMToxOS44MzRaIiwiaWF0IjoxNzU4NDQ2OTE5LCJleHAiOjE3NjExMjUzMTl9.r8-gS-LRd1RhZcaXPeCguep4NatcNJuQI8Et_qlgTII[\r][\n]"
22:25:37.895 [pool-2-thread-3] DEBUG org.apache.http.wire -- http-outgoing-0 >> "Content-Type: application/json; charset=UTF-8[\r][\n]"
22:25:37.895 [pool-2-thread-3] DEBUG org.apache.http.wire -- http-outgoing-0 >> "Content-Length: 55[\r][\n]"
22:25:37.895 [pool-2-thread-3] DEBUG org.apache.http.wire -- http-outgoing-0 >> "Host: dev.scorecraze.app[\r][\n]"
22:25:37.895 [pool-2-thread-3] DEBUG org.apache.http.wire -- http-outgoing-0 >> "Connection: Keep-Alive[\r][\n]"
22:25:37.895 [pool-2-thread-3] DEBUG org.apache.http.wire -- http-outgoing-0 >> "User-Agent: Apache-HttpClient/4.5.14 (Java/11.0.27)[\r][\n]"
22:25:37.896 [pool-2-thread-3] DEBUG org.apache.http.wire -- http-outgoing-0 >> "Accept-Encoding: gzip,deflate[\r][\n]"
22:25:37.896 [pool-2-thread-3] DEBUG org.apache.http.wire -- http-outgoing-0 >> "[\r][\n]"
22:25:37.896 [pool-2-thread-3] DEBUG org.apache.http.wire -- http-outgoing-0 >> "{"filter":{"seriesAPIId":0,"fixtureStatus":"Upcoming"}}"
22:25:37.893 [pool-2-thread-5] DEBUG org.apache.http.wire -- http-outgoing-2 >> "Content-Type: application/json; charset=UTF-8[\r][\n]"
22:25:37.894 [pool-2-thread-1] DEBUG org.apache.http.headers -- http-outgoing-3 >> User-Agent: Apache-HttpClient/4.5.14 (Java/11.0.27)
22:25:38.108 [pool-2-thread-1] DEBUG org.apache.http.headers -- http-outgoing-3 >> Accept-Encoding: gzip,deflate
22:25:38.108 [pool-2-thread-1] DEBUG org.apache.http.wire -- http-outgoing-3 >> "GET /api/team/cricket HTTP/1.1[\r][\n]"
22:25:38.108 [pool-2-thread-1] DEBUG org.apache.http.wire -- http-outgoing-3 >> "Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2ODkyZjQ2Y2IyNTBhNGY2YjFiZWRjZTciLCJ1c2VyTmFtZSI6ImNoYSIsImVtYWlsIjoiY2hhbmRyb29zMzBAZ21haWwuY29tIiwicGhvbmVOdW1iZXIiOjAsInJvbGUiOiJBZG1pbiIsImlzVmVyaWZpZWQiOnRydWUsIl9fdiI6MCwidXBkYXRlZEF0IjoiMjAyNS0wOS0yMVQwOToyODoxNS45NjlaIiwiaXNBY3RpdmUiOnRydWUsImxhc3RMb2dpbkF0IjoiMjAyNS0wOS0wNFQxMzowMToxOS44MzRaIiwiaWF0IjoxNzU4NDQ2OTE5LCJleHAiOjE3NjExMjUzMTl9.r8-gS-LRd1RhZcaXPeCguep4NatcNJuQI8Et_qlgTII[\r][\n]"
22:25:38.108 [pool-2-thread-1] DEBUG org.apache.http.wire -- http-outgoing-3 >> "Content-Type: application/json[\r][\n]"
22:25:38.109 [pool-2-thread-1] DEBUG org.apache.http.wire -- http-outgoing-3 >> "Host: dev.scorecraze.app[\r][\n]"
22:25:38.109 [pool-2-thread-1] DEBUG org.apache.http.wire -- http-outgoing-3 >> "Connection: Keep-Alive[\r][\n]"
22:25:38.109 [pool-2-thread-1] DEBUG org.apache.http.wire -- http-outgoing-3 >> "User-Agent: Apache-HttpClient/4.5.14 (Java/11.0.27)[\r][\n]"
22:25:38.109 [pool-2-thread-1] DEBUG org.apache.http.wire -- http-outgoing-3 >> "Accept-Encoding: gzip,deflate[\r][\n]"
22:25:38.109 [pool-2-thread-1] DEBUG org.apache.http.wire -- http-outgoing-3 >> "[\r][\n]"
22:25:37.894 [pool-2-thread-2] DEBUG org.apache.http.headers -- http-outgoing-1 >> User-Agent: Apache-HttpClient/4.5.14 (Java/11.0.27)
22:25:38.109 [pool-2-thread-2] DEBUG org.apache.http.headers -- http-outgoing-1 >> Accept-Encoding: gzip,deflate
22:25:38.110 [pool-2-thread-2] DEBUG org.apache.http.wire -- http-outgoing-1 >> "GET /api/team/cricket/players HTTP/1.1[\r][\n]"
22:25:38.110 [pool-2-thread-2] DEBUG org.apache.http.wire -- http-outgoing-1 >> "Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2ODkyZjQ2Y2IyNTBhNGY2YjFiZWRjZTciLCJ1c2VyTmFtZSI6ImNoYSIsImVtYWlsIjoiY2hhbmRyb29zMzBAZ21haWwuY29tIiwicGhvbmVOdW1iZXIiOjAsInJvbGUiOiJBZG1pbiIsImlzVmVyaWZpZWQiOnRydWUsIl9fdiI6MCwidXBkYXRlZEF0IjoiMjAyNS0wOS0yMVQwOToyODoxNS45NjlaIiwiaXNBY3RpdmUiOnRydWUsImxhc3RMb2dpbkF0IjoiMjAyNS0wOS0wNFQxMzowMToxOS44MzRaIiwiaWF0IjoxNzU4NDQ2OTE5LCJleHAiOjE3NjExMjUzMTl9.r8-gS-LRd1RhZcaXPeCguep4NatcNJuQI8Et_qlgTII[\r][\n]"
22:25:38.110 [pool-2-thread-2] DEBUG org.apache.http.wire -- http-outgoing-1 >> "Content-Type: application/json[\r][\n]"
22:25:38.110 [pool-2-thread-2] DEBUG org.apache.http.wire -- http-outgoing-1 >> "Host: dev.scorecraze.app[\r][\n]"
22:25:38.110 [pool-2-thread-2] DEBUG org.apache.http.wire -- http-outgoing-1 >> "Connection: Keep-Alive[\r][\n]"
22:25:38.110 [pool-2-thread-2] DEBUG org.apache.http.wire -- http-outgoing-1 >> "User-Agent: Apache-HttpClient/4.5.14 (Java/11.0.27)[\r][\n]"
22:25:38.110 [pool-2-thread-2] DEBUG org.apache.http.wire -- http-outgoing-1 >> "Accept-Encoding: gzip,deflate[\r][\n]"
22:25:38.110 [pool-2-thread-2] DEBUG org.apache.http.wire -- http-outgoing-1 >> "[\r][\n]"
22:25:38.107 [pool-2-thread-5] DEBUG org.apache.http.wire -- http-outgoing-2 >> "Content-Length: 51[\r][\n]"
22:25:38.110 [pool-2-thread-5] DEBUG org.apache.http.wire -- http-outgoing-2 >> "Host: dev.scorecraze.app[\r][\n]"
22:25:38.111 [pool-2-thread-5] DEBUG org.apache.http.wire -- http-outgoing-2 >> "Connection: Keep-Alive[\r][\n]"
22:25:38.111 [pool-2-thread-5] DEBUG org.apache.http.wire -- http-outgoing-2 >> "User-Agent: Apache-HttpClient/4.5.14 (Java/11.0.27)[\r][\n]"
22:25:38.111 [pool-2-thread-5] DEBUG org.apache.http.wire -- http-outgoing-2 >> "Accept-Encoding: gzip,deflate[\r][\n]"
22:25:38.111 [pool-2-thread-5] DEBUG org.apache.http.wire -- http-outgoing-2 >> "[\r][\n]"
22:25:38.111 [pool-2-thread-5] DEBUG org.apache.http.wire -- http-outgoing-2 >> "{"filter":{"seriesAPIId":0,"fixtureStatus":"Live"}}"
22:25:38.269 [pool-2-thread-2] DEBUG org.apache.http.wire -- http-outgoing-1 << "HTTP/1.1 200 OK[\r][\n]"
22:25:38.269 [pool-2-thread-2] DEBUG org.apache.http.wire -- http-outgoing-1 << "Server: nginx/1.22.1[\r][\n]"
22:25:38.270 [pool-2-thread-2] DEBUG org.apache.http.wire -- http-outgoing-1 << "Date: Sat, 04 Oct 2025 16:55:37 GMT[\r][\n]"
22:25:38.270 [pool-2-thread-2] DEBUG org.apache.http.wire -- http-outgoing-1 << "Content-Type: application/json; charset=utf-8[\r][\n]"
22:25:38.270 [pool-2-thread-2] DEBUG org.apache.http.wire -- http-outgoing-1 << "Content-Length: 3573[\r][\n]"
22:25:38.270 [pool-2-thread-2] DEBUG org.apache.http.wire -- http-outgoing-1 << "Connection: keep-alive[\r][\n]"
22:25:38.270 [pool-2-thread-2] DEBUG org.apache.http.wire -- http-outgoing-1 << "X-Powered-By: Express[\r][\n]"
22:25:38.270 [pool-2-thread-2] DEBUG org.apache.http.wire -- http-outgoing-1 << "Access-Control-Allow-Origin: *[\r][\n]"
22:25:38.270 [pool-2-thread-2] DEBUG org.apache.http.wire -- http-outgoing-1 << "ETag: W/"df5-RYBwTt13zt7/D+SMzfAVXon03Zw"[\r][\n]"
22:25:38.270 [pool-2-thread-2] DEBUG org.apache.http.wire -- http-outgoing-1 << "[\r][\n]"
22:25:38.270 [pool-2-thread-2] DEBUG org.apache.http.wire -- http-outgoing-1 << "{"data":[{"_id":"68df77c27e0ef53ac0067c7f","playerName":"Dummy","playerDisplayName":"Dum","player_value":{"Test":0,"ODI":0,"T20":0},"player_type":"wk","playerImg":"","playerAPIId":1759475650286,"mobileNumber":"9174963102","isVerified":false,"createdBy":"6892f46cb250a4f6b1bedce7","createdAt":"2025-10-03T07:14:10.290Z","updatedAt":"2025-10-03T07:14:10.290Z","__v":0},{"_id":"68a47090df63f97065478346","playerName":"Tamilarasan","playerDisplayName":"Tamil","player_value":"0","player_type":"bowl","playerAPIId":1755607184602,"mobileNumber":"9404640485","isVerified":false,"createdBy":"6892f46cb250a4f6b1bedce7","__v":0,"playerImg":"https://scorecraze-production.s3.ap-south-1.amazonaws.com/1755607709392-1755607184602"},{"_id":"68a47083df63f97065478342","playerName":"Karthik Dhoni","playerDisplayName":"KD","player_value":"0","player_type":"wk","playerAPIId":1755607171756,"mobileNumber":"9404438105","isVerified":false,"createdBy":"6892f46cb250a4f6b1bedce7","__v":0,"playerImg":"https://scorecraze-production.s3.ap-south-1.amazonaws.com/1755608066364-1755607171756"},{"_id":"68a47076df63f9706547833e","playerName":"Vignesh Gethu","playerDisplayName":"Vicky","player_value":"0","player_type":"bat","playerAPIId":1755607158883,"mobileNumber":"9543138205","isVerified":false,"createdBy":"6892f46cb250a4f6b1bedce7","__v":0,"playerImg":"https://scorecraze-production.s3.ap-south-1.amazonaws.com/1755607749324-1755607158883"},{"_id":"68a46fe1df63f9706547831c","playerName":"Sudharsanan","playerDisplayName":"Sn","player_value":"0","player_type":"bowl","playerImg":"https://scorecraze-production.s3.ap-south-1.amazonaws.com/1755607766883-1755607010505","playerAPIId":1755607010505,"mobileNumber":"9054355088","isVerified":false,"createdBy":"6892f46cb250a4f6b1bedce7","__v":0},{"_id":"68a46fe1df63f9706547831b","playerName":"Harish","playerDisplayName":"Hh","player_value":"0","player_type":"ar","playerImg":"https://scorecraze-production.s3.ap-south-1.amazonaws.com/1755607789469-1755607009505","playerAPIId":1755607009505,"mobileNumber":"9055880085","isVerified":false,"createdBy":"6892f46cb250a4f6b1bedce7","__v":0},{"_id":"68a46fb2df63f97065478316","playerName":"Seran Baskaran","playerDisplayName":"Seran","player_value":"0","player_type":"bowl","playerAPIId":1755606962052,"mobileNumber":"9351040454","isVerified":false,"createdBy":"6892f46cb250a4f6b1bedce7","__v":0,"playerImg":"https://scorecraze-production.s3.ap-south-1.amazonaws.com/1755607890039-1755606962052"},{"_id":"68a46f92df63f97065478311","playerName":"Vinoth Kanna","playerDisplayName":"VK","player_value":"0","player_type":"ar","playerAPIId":1755606930551,"mobileNumber":"9015124040","isVerified":false,"createdBy":"6892f46cb250a4f6b1bedce7","__v":0,"playerImg":"https://scorecraze-production.s3.ap-south-1.amazonaws.com/1755607801627-1755606930551"},{"_id":"68a46f6edf63f9706547830d","playerName":"Anwin Paulji","playerDisplayName":"Anwin","player_value":"0","player_type":"ar","playerAPIId":1755606894500,"mobileNumber":"9075453148","isVerified":false,"createdBy":"6892f46cb250a4f6b1bedce7","__v":0,"playerImg":"https://scorecraze-production.s3.ap-south-1.amazonaws.com/1755607827941-1755606894500"},{"_id":"68a2e6e09f04af09b16428e0","playerName":"Bharathi","playerDisplayName":"Bharathi","player_value":"0","player_type":"bowl","playerImg":"https://scorecraze-production.s3.ap-south-1.amazonaws.com/1755607843778-1755506400602","playerAPIId":1755506400602,"mobileNumber":"8697548123","isVerified":false,"createdBy":"6892f46cb250a4f6b1bedce7","__v":0}],"status":200,"message":"Players fetched successfully"}"
22:25:38.271 [pool-2-thread-2] DEBUG org.apache.http.headers -- http-outgoing-1 << HTTP/1.1 200 OK
22:25:38.272 [pool-2-thread-2] DEBUG org.apache.http.headers -- http-outgoing-1 << Server: nginx/1.22.1
22:25:38.272 [pool-2-thread-2] DEBUG org.apache.http.headers -- http-outgoing-1 << Date: Sat, 04 Oct 2025 16:55:37 GMT
22:25:38.272 [pool-2-thread-2] DEBUG org.apache.http.headers -- http-outgoing-1 << Content-Type: application/json; charset=utf-8
22:25:38.272 [pool-2-thread-2] DEBUG org.apache.http.headers -- http-outgoing-1 << Content-Length: 3573
22:25:38.272 [pool-2-thread-2] DEBUG org.apache.http.headers -- http-outgoing-1 << Connection: keep-alive
22:25:38.272 [pool-2-thread-2] DEBUG org.apache.http.headers -- http-outgoing-1 << X-Powered-By: Express
22:25:38.272 [pool-2-thread-2] DEBUG org.apache.http.headers -- http-outgoing-1 << Access-Control-Allow-Origin: *
22:25:38.272 [pool-2-thread-2] DEBUG org.apache.http.headers -- http-outgoing-1 << ETag: W/"df5-RYBwTt13zt7/D+SMzfAVXon03Zw"
22:25:38.274 [pool-2-thread-2] DEBUG org.apache.http.impl.execchain.MainClientExec -- Connection can be kept alive indefinitely
22:25:38.274 [pool-2-thread-5] DEBUG org.apache.http.wire -- http-outgoing-2 << "HTTP/1.1 200 OK[\r][\n]"
22:25:38.275 [pool-2-thread-5] DEBUG org.apache.http.wire -- http-outgoing-2 << "Server: nginx/1.22.1[\r][\n]"
22:25:38.275 [pool-2-thread-2] DEBUG org.apache.http.impl.conn.PoolingHttpClientConnectionManager -- Connection [id: 0][route: {s}->https://dev.scorecraze.app:443] can be kept alive indefinitely
22:25:38.275 [pool-2-thread-5] DEBUG org.apache.http.wire -- http-outgoing-2 << "Date: Sat, 04 Oct 2025 16:55:37 GMT[\r][\n]"
22:25:38.275 [pool-2-thread-2] DEBUG org.apache.http.impl.conn.DefaultManagedHttpClientConnection -- http-outgoing-1: set socket timeout to 0
22:25:38.275 [pool-2-thread-5] DEBUG org.apache.http.wire -- http-outgoing-2 << "Content-Type: application/json; charset=utf-8[\r][\n]"
22:25:38.275 [pool-2-thread-5] DEBUG org.apache.http.wire -- http-outgoing-2 << "Content-Length: 1031[\r][\n]"
22:25:38.275 [pool-2-thread-5] DEBUG org.apache.http.wire -- http-outgoing-2 << "Connection: keep-alive[\r][\n]"
22:25:38.275 [pool-2-thread-5] DEBUG org.apache.http.wire -- http-outgoing-2 << "X-Powered-By: Express[\r][\n]"
22:25:38.275 [pool-2-thread-5] DEBUG org.apache.http.wire -- http-outgoing-2 << "Access-Control-Allow-Origin: *[\r][\n]"
22:25:38.276 [pool-2-thread-5] DEBUG org.apache.http.wire -- http-outgoing-2 << "ETag: W/"407-0HoLVDmaIn35sPiXO5Nii5Njjng"[\r][\n]"
22:25:38.276 [pool-2-thread-2] DEBUG org.apache.http.impl.conn.PoolingHttpClientConnectionManager -- Connection released: [id: 0][route: {s}->https://dev.scorecraze.app:443][total available: 1; route allocated: 1 of 5; total allocated: 1 of 10]
22:25:38.276 [pool-2-thread-5] DEBUG org.apache.http.wire -- http-outgoing-2 << "[\r][\n]"
22:25:38.276 [pool-2-thread-2] DEBUG org.apache.http.impl.conn.PoolingHttpClientConnectionManager -- Connection manager is shutting down
22:25:38.276 [pool-2-thread-2] DEBUG org.apache.http.impl.conn.DefaultManagedHttpClientConnection -- http-outgoing-1: Close connection
22:25:38.276 [pool-2-thread-5] DEBUG org.apache.http.wire -- http-outgoing-2 << "{"message":"Fixtures Listed successfully","data":[{"_id":"68ba986903172702146f0ed1","fixtureName":"Team Anbu vs Team Gethu","fixtureAPIId":1757059177908,"fixtureDisplayName":"TA vs TG","fixtureStartDate":"2025-09-05T08:00:00.000Z","fixtureStatus":"Live","fixtureStatusType":2,"fixtureVenue":"Chennai","fixtureType":"OTHERS","seriesName":"","seriesShortName":"","seriesAPIId":0,"fixtureTeams":{"teamA":{"name":"Team Anbu","shortName":"TA","teamAPIId":1755607036402,"logo":"https://scorecraze-production.s3.ap-south-1.amazonaws.com/1755607286750-1755607036402"},"teamB":{"name":"Team Gethu","shortName":"TG","teamAPIId":1755607051158,"logo":"https://scorecraze-production.s3.ap-south-1.amazonaws.com/1755607294078-1755607051158"}},"lineupsOut":true,"enabledStatus":true,"isactive":true,"joinedUsers":[],"toss":true,"isLocal":true,"createdBy":"6892f46cb250a4f6b1bedce7","createdAt":"2025-09-05T07:59:37.941Z","updatedAt":"2025-09-05T08:52:56.353Z","__v":0,"summary":"TA won the toss and choose to bat"}],"totalPage":1,"currentPage":1}"
22:25:38.278 [pool-2-thread-5] DEBUG org.apache.http.headers -- http-outgoing-2 << HTTP/1.1 200 OK
22:25:38.278 [pool-2-thread-5] DEBUG org.apache.http.headers -- http-outgoing-2 << Server: nginx/1.22.1
22:25:38.278 [pool-2-thread-5] DEBUG org.apache.http.headers -- http-outgoing-2 << Date: Sat, 04 Oct 2025 16:55:37 GMT
22:25:38.278 [pool-2-thread-5] DEBUG org.apache.http.headers -- http-outgoing-2 << Content-Type: application/json; charset=utf-8
22:25:38.278 [pool-2-thread-5] DEBUG org.apache.http.headers -- http-outgoing-2 << Content-Length: 1031
22:25:38.279 [pool-2-thread-5] DEBUG org.apache.http.headers -- http-outgoing-2 << Connection: keep-alive
22:25:38.279 [pool-2-thread-5] DEBUG org.apache.http.headers -- http-outgoing-2 << X-Powered-By: Express
22:25:38.279 [pool-2-thread-5] DEBUG org.apache.http.headers -- http-outgoing-2 << Access-Control-Allow-Origin: *
22:25:38.279 [pool-2-thread-5] DEBUG org.apache.http.headers -- http-outgoing-2 << ETag: W/"407-0HoLVDmaIn35sPiXO5Nii5Njjng"
22:25:38.278 [pool-2-thread-2] DEBUG org.apache.http.impl.conn.PoolingHttpClientConnectionManager -- Connection manager shut down
22:25:38.280 [pool-2-thread-5] DEBUG org.apache.http.impl.execchain.MainClientExec -- Connection can be kept alive indefinitely
22:25:38.280 [pool-2-thread-5] DEBUG org.apache.http.impl.conn.PoolingHttpClientConnectionManager -- Connection [id: 3][route: {s}->https://dev.scorecraze.app:443] can be kept alive indefinitely
22:25:38.280 [pool-2-thread-5] DEBUG org.apache.http.impl.conn.DefaultManagedHttpClientConnection -- http-outgoing-2: set socket timeout to 0
22:25:38.280 [pool-2-thread-5] DEBUG org.apache.http.impl.conn.PoolingHttpClientConnectionManager -- Connection released: [id: 3][route: {s}->https://dev.scorecraze.app:443][total available: 1; route allocated: 1 of 5; total allocated: 1 of 10]
22:25:38.280 [pool-2-thread-5] DEBUG org.apache.http.impl.conn.PoolingHttpClientConnectionManager -- Connection manager is shutting down
22:25:38.280 [pool-2-thread-4] DEBUG org.apache.http.wire -- http-outgoing-4 << "HTTP/1.1 200 OK[\r][\n]"
22:25:38.280 [pool-2-thread-4] DEBUG org.apache.http.wire -- http-outgoing-4 << "Server: nginx/1.22.1[\r][\n]"
22:25:38.280 [pool-2-thread-4] DEBUG org.apache.http.wire -- http-outgoing-4 << "Date: Sat, 04 Oct 2025 16:55:37 GMT[\r][\n]"
22:25:38.280 [pool-2-thread-4] DEBUG org.apache.http.wire -- http-outgoing-4 << "Content-Type: application/json; charset=utf-8[\r][\n]"
22:25:38.280 [pool-2-thread-5] DEBUG org.apache.http.impl.conn.DefaultManagedHttpClientConnection -- http-outgoing-2: Close connection
22:25:38.280 [pool-2-thread-4] DEBUG org.apache.http.wire -- http-outgoing-4 << "Content-Length: 9174[\r][\n]"
22:25:38.280 [pool-2-thread-4] DEBUG org.apache.http.wire -- http-outgoing-4 << "Connection: keep-alive[\r][\n]"
22:25:38.280 [pool-2-thread-4] DEBUG org.apache.http.wire -- http-outgoing-4 << "X-Powered-By: Express[\r][\n]"
22:25:38.280 [pool-2-thread-4] DEBUG org.apache.http.wire -- http-outgoing-4 << "Access-Control-Allow-Origin: *[\r][\n]"
22:25:38.280 [pool-2-thread-4] DEBUG org.apache.http.wire -- http-outgoing-4 << "ETag: W/"23d6-dLi5ooi7FUiJvghIaNw/aNXB8H8"[\r][\n]"
22:25:38.280 [pool-2-thread-4] DEBUG org.apache.http.wire -- http-outgoing-4 << "[\r][\n]"
22:25:38.280 [pool-2-thread-2] DEBUG com.intuit.karate -- response time in milliseconds: 1223
1 < 200
1 < Server: nginx/1.22.1
1 < Date: Sat, 04 Oct 2025 16:55:37 GMT
1 < Content-Type: application/json; charset=utf-8
1 < Content-Length: 3573
1 < Connection: keep-alive
1 < X-Powered-By: Express
1 < Access-Control-Allow-Origin: *
1 < ETag: W/"df5-RYBwTt13zt7/D+SMzfAVXon03Zw"
{"data":[{"_id":"68df77c27e0ef53ac0067c7f","playerName":"Dummy","playerDisplayName":"Dum","player_value":{"Test":0,"ODI":0,"T20":0},"player_type":"wk","playerImg":"","playerAPIId":1759475650286,"mobileNumber":"9174963102","isVerified":false,"createdBy":"6892f46cb250a4f6b1bedce7","createdAt":"2025-10-03T07:14:10.290Z","updatedAt":"2025-10-03T07:14:10.290Z","__v":0},{"_id":"68a47090df63f97065478346","playerName":"Tamilarasan","playerDisplayName":"Tamil","player_value":"0","player_type":"bowl","playerAPIId":1755607184602,"mobileNumber":"9404640485","isVerified":false,"createdBy":"6892f46cb250a4f6b1bedce7","__v":0,"playerImg":"https://scorecraze-production.s3.ap-south-1.amazonaws.com/1755607709392-1755607184602"},{"_id":"68a47083df63f97065478342","playerName":"Karthik Dhoni","playerDisplayName":"KD","player_value":"0","player_type":"wk","playerAPIId":1755607171756,"mobileNumber":"9404438105","isVerified":false,"createdBy":"6892f46cb250a4f6b1bedce7","__v":0,"playerImg":"https://scorecraze-production.s3.ap-south-1.amazonaws.com/1755608066364-1755607171756"},{"_id":"68a47076df63f9706547833e","playerName":"Vignesh Gethu","playerDisplayName":"Vicky","player_value":"0","player_type":"bat","playerAPIId":1755607158883,"mobileNumber":"9543138205","isVerified":false,"createdBy":"6892f46cb250a4f6b1bedce7","__v":0,"playerImg":"https://scorecraze-production.s3.ap-south-1.amazonaws.com/1755607749324-1755607158883"},{"_id":"68a46fe1df63f9706547831c","playerName":"Sudharsanan","playerDisplayName":"Sn","player_value":"0","player_type":"bowl","playerImg":"https://scorecraze-production.s3.ap-south-1.amazonaws.com/1755607766883-1755607010505","playerAPIId":1755607010505,"mobileNumber":"9054355088","isVerified":false,"createdBy":"6892f46cb250a4f6b1bedce7","__v":0},{"_id":"68a46fe1df63f9706547831b","playerName":"Harish","playerDisplayName":"Hh","player_value":"0","player_type":"ar","playerImg":"https://scorecraze-production.s3.ap-south-1.amazonaws.com/1755607789469-1755607009505","playerAPIId":1755607009505,"mobileNumber":"9055880085","isVerified":false,"createdBy":"6892f46cb250a4f6b1bedce7","__v":0},{"_id":"68a46fb2df63f97065478316","playerName":"Seran Baskaran","playerDisplayName":"Seran","player_value":"0","player_type":"bowl","playerAPIId":1755606962052,"mobileNumber":"9351040454","isVerified":false,"createdBy":"6892f46cb250a4f6b1bedce7","__v":0,"playerImg":"https://scorecraze-production.s3.ap-south-1.amazonaws.com/1755607890039-1755606962052"},{"_id":"68a46f92df63f97065478311","playerName":"Vinoth Kanna","playerDisplayName":"VK","player_value":"0","player_type":"ar","playerAPIId":1755606930551,"mobileNumber":"9015124040","isVerified":false,"createdBy":"6892f46cb250a4f6b1bedce7","__v":0,"playerImg":"https://scorecraze-production.s3.ap-south-1.amazonaws.com/1755607801627-1755606930551"},{"_id":"68a46f6edf63f9706547830d","playerName":"Anwin Paulji","playerDisplayName":"Anwin","player_value":"0","player_type":"ar","playerAPIId":1755606894500,"mobileNumber":"9075453148","isVerified":false,"createdBy":"6892f46cb250a4f6b1bedce7","__v":0,"playerImg":"https://scorecraze-production.s3.ap-south-1.amazonaws.com/1755607827941-1755606894500"},{"_id":"68a2e6e09f04af09b16428e0","playerName":"Bharathi","playerDisplayName":"Bharathi","player_value":"0","player_type":"bowl","playerImg":"https://scorecraze-production.s3.ap-south-1.amazonaws.com/1755607843778-1755506400602","playerAPIId":1755506400602,"mobileNumber":"8697548123","isVerified":false,"createdBy":"6892f46cb250a4f6b1bedce7","__v":0}],"status":200,"message":"Players fetched successfully"}

22:25:38.280 [pool-2-thread-5] DEBUG org.apache.http.impl.conn.PoolingHttpClientConnectionManager -- Connection manager shut down
22:25:38.281 [pool-2-thread-5] DEBUG com.intuit.karate -- response time in milliseconds: 1227
1 < 200
1 < Server: nginx/1.22.1
1 < Date: Sat, 04 Oct 2025 16:55:37 GMT
1 < Content-Type: application/json; charset=utf-8
1 < Content-Length: 1031
1 < Connection: keep-alive
1 < X-Powered-By: Express
1 < Access-Control-Allow-Origin: *
1 < ETag: W/"407-0HoLVDmaIn35sPiXO5Nii5Njjng"
{"message":"Fixtures Listed successfully","data":[{"_id":"68ba986903172702146f0ed1","fixtureName":"Team Anbu vs Team Gethu","fixtureAPIId":1757059177908,"fixtureDisplayName":"TA vs TG","fixtureStartDate":"2025-09-05T08:00:00.000Z","fixtureStatus":"Live","fixtureStatusType":2,"fixtureVenue":"Chennai","fixtureType":"OTHERS","seriesName":"","seriesShortName":"","seriesAPIId":0,"fixtureTeams":{"teamA":{"name":"Team Anbu","shortName":"TA","teamAPIId":1755607036402,"logo":"https://scorecraze-production.s3.ap-south-1.amazonaws.com/1755607286750-1755607036402"},"teamB":{"name":"Team Gethu","shortName":"TG","teamAPIId":1755607051158,"logo":"https://scorecraze-production.s3.ap-south-1.amazonaws.com/1755607294078-1755607051158"}},"lineupsOut":true,"enabledStatus":true,"isactive":true,"joinedUsers":[],"toss":true,"isLocal":true,"createdBy":"6892f46cb250a4f6b1bedce7","createdAt":"2025-09-05T07:59:37.941Z","updatedAt":"2025-09-05T08:52:56.353Z","__v":0,"summary":"TA won the toss and choose to bat"}],"totalPage":1,"currentPage":1}

22:25:38.284 [pool-2-thread-4] DEBUG org.apache.http.wire -- http-outgoing-4 << "{"message":"Fixtures Listed successfully","data":[{"_id":"68b15391593666342dd101c8","fixtureName":"Chennai Sharks vs MI Legends","fixtureAPIId":1756451729991,"fixtureDisplayName":"CS vs ML","fixtureStartDate":"2025-09-30T09:15:00.000Z","fixtureStatus":"Completed","fixtureStatusType":3,"fixtureVenue":"Chennai ","fixtureType":"OTHERS","seriesName":"","seriesShortName":"","seriesAPIId":0,"fixtureTeams":{"teamA":{"name":"Chennai Sharks","shortName":"CS","teamAPIId":1755506184214,"logo":"https://scorecraze-production.s3.ap-south-1.amazonaws.com/1755506184214-1755506184214"},"teamB":{"name":"MI Legends","shortName":"ML","teamAPIId":1755506194965,"logo":"https://scorecraze-production.s3.ap-south-1.amazonaws.com/1755506194965-1755506194965"}},"lineupsOut":true,"enabledStatus":true,"isactive":true,"joinedUsers":[],"toss":true,"isLocal":true,"createdBy":"6892f46cb250a4f6b1bedce7","__v":0,"updatedAt":"2025-08-29T09:27:29.653Z","summary":""},{"_id":"68b15391593666342dd101b5","fixtureName":"Chennai Sharks vs MI Legends","fixtureAPIId":1756451729400,"fixtureDisplayName":"CS vs ML","fixtureStartDate":"2025-09-13T07:25:00.000Z","fixtureStatus":"Completed","fixtureStatusType":3,"fixtureVenue":"Arena","fixtureType":"T10","seriesName":"","seriesShortName":"","seriesAPIId":0,"fixtureTeams":{"teamA":{"name":"Chennai Sharks","shortName":"CS","teamAPIId":1755506184214,"logo":"https://scorecraze-production.s3.ap-south-1.amazonaws.com/1755506184214-1755506184214"},"teamB":{"name":"MI Legends","shortName":"ML","teamAPIId":1755506194965,"logo":"https://scorecraze-production.s3.ap-south-1.amazonaws.com/1755506194965-1755506194965"}},"lineupsOut":true,"enabledStatus":true,"isactive":true,"joinedUsers":[],"toss":true,"isLocal":true,"createdBy":"6892f46cb250a4f6b1bedce7","__v":0,"updatedAt":"2025-09-02T13:31:34.538Z","summary":"CS won by 11 runs"},{"_id":"68b93afefe9b55740eedff5e","fixtureName":"Team Anbu vs Team Gethu","fixtureAPIId":1756969726043,"fixtureDisplayName":"TA vs TG","fixtureStartDate":"2025-09-04T07:11:33.000Z","fixtureStatus":"Completed","fixtureStatusType":3,"fixtureVenue":"Jodhpur","fixtureType":"OTHERS","seriesName":"","seriesShortName":"","seriesAPIId":0,"fixtureTeams":{"teamA":{"name":"Team Anbu","shortName":"TA","teamAPIId":1755607036402,"logo":"https://scorecraze-production.s3.ap-south-1.amazonaws.com/1755607286750-1755607036402"},"teamB":{"name":"Team Gethu","shortName":"TG","teamAPIId":1755607051158,"logo":"https://scorecraze-production.s3.ap-south-1.amazonaws.com/1755607294078-1755607051158"}},"lineupsOut":true,"enabledStatus":true,"isactive":true,"joinedUsers":[],"toss":true,"isLocal":true,"createdBy":"6892f46cb250a4f6b1bedce7","createdAt":"2025-09-04T07:08:46.053Z","updatedAt":"2025-09-04T11:44:58.067Z","__v":0,"summary":"TG won by 3 wickets"},{"_id":"68b7dbca322dac15a0989f57","fixtureName":"Team Anbu vs Team Gethu","fixtureAPIId":1756879818214,"fixtureDisplayName":"TA vs TG","fixtureStartDate":"2025-09-03T06:15:00.000Z","fixtureStatus":"Completed","fixtureStatusType":3,"fixtureVenue":"Dubai","fixtureType":"OTHERS","seriesName":"","seriesShortName":"","seriesAPIId":0,"fixtureTeams":{"teamA":{"name":"Team Anbu","shortName":"TA","teamAPIId":1755607036402,"logo":"https://scorecraze-production.s3.ap-south-1.amazonaws.com/1755607286750-1755607036402"},"teamB":{"name":"Team Gethu","shortName":"TG","teamAPIId":1755607051158,"logo":"https://scorecraze-production.s3.ap-south-1.amazonaws.com/1755607294078-1755607051158"}},"lineupsOut":true,"enabledStatus":true,"isactive":true,"joinedUsers":[],"toss":true,"isLocal":true,"createdBy":"6892f46cb250a4f6b1bedce7","createdAt":"2025-09-03T06:10:18.218Z","updatedAt":"2025-09-03T10:37:22.614Z","__v":0,"summary":"TG won by 3 wickets"},{"_id":"68b680c9322dac15a0986022","fixtureName":"Chennai Sharks vs MI Legends","fixtureAPIId":1756790985168,"fixtureDisplayName":"CS vs ML","fixtureStartDate":"2025-09-02T05:30:00.000Z","fixtureStatus":"Completed","fixtureStatusType":3,"fixtureVenue":"Karapakkam","fixtureType":"OTHERS","seriesName":"","seriesShortName":"","seriesAPIId":0,"fixtureTeams":{"teamA":{"name":"Chennai Sharks","shortName":"CS","teamAPIId":1755506184214,"logo":"https://scorecraze-production.s3.ap-south-1.amazonaws.com/1755506184214-1755506184214"},"teamB":{"name":"MI Legends","shortName":"ML","teamAPIId":1755506194965,"logo":"https://scorecraze-production.s3.ap-south-1.amazonaws.com/1755506194965-1755506194965"}},"lineupsOut":true,"enabledStatus":true,"isactive":true,"joinedUsers":[],"toss":true,"isLocal":true,"createdBy":"6892f46cb250a4f6b1bedce7","createdAt":"2025-09-02T05:29:45.172Z","updatedAt":"2025-09-02T05:46:38.803Z","__v":0,"summary":"ML won by 3 wickets"},{"_id":"68b59db4322dac15a0984be7","fixtureName":"Team Anbu vs Team Gethu","fixtureAPIId":1756732852339,"fixtureDisplayName":"TA vs TG","fixtureStartDate":"2025-09-01T13:25:00.000Z","fixtureStatus":"Completed","fixtureStatusType":3,"fixtureVenue":"Chennai","fixtureType":"OTHERS","seriesName":"","seriesShortName":"","seriesAPIId":0,"fixtureTeams":{"teamA":{"name":"Team Anbu","shortName":"TA","teamAPIId":1755607036402,"logo":"https://scorecraze-production.s3.ap-south-1.amazonaws.com/1755607286750-1755607036402"},"teamB":{"name":"Team Gethu","shortName":"TG","teamAPIId":1755607051158,"logo":"https://scorecraze-production.s3.ap-south-1.amazonaws.com/1755607294078-1755607051158"}},"lineupsOut":true,"enabledStatus":true,"isactive":true,"joinedUsers":[],"toss":true,"isLocal":true,"createdBy":"6892f46cb250a4f6b1bedce7","createdAt":"2025-09-01T13:20:52.350Z","updatedAt":"2025-09-01T13:31:48.127Z","__v":0,"summary":"TG won by 3 wickets"},{"_id":"68b1470c1f1848b1e1c39fb9","fixtureName":"Chennai Sharks vs MI Legends","fixtureAPIId":1756448524072,"fixtureDisplayName":"CS vs ML","fixtureStartDate":"2025-08-29T18:30:00.000Z","fixtureStatus":"Completed","fixtureStatusType":3,"fixtureVenue":"gunidy","fixtureType":"OTHERS","seriesName":"","seriesShortName":"","seriesAPIId":0,"fixtureTeams":{"teamA":{"name":"Chennai Sharks","shortName":"CS","teamAPIId":1755506184214,"logo":"https://scorecraze-production.s3.ap-south-1.amazonaws.com/1755506184214-1755506184214"},"teamB":{"name":"MI Legends","shortName":"ML","teamAPIId":1755506194965,"logo":"https://scorecraze-production.s3.ap-south-1.amazonaws.com/1755506194965-1755506194965"}},"lineupsOut":true,"enabledStatus":true,"isactive":true,"joinedUsers":[],"toss":true,"isLocal":true,"createdBy":"6892f46cb250a4f6b1bedce7","__v":0,"summary":"CS won by 3 wickets"},{"_id":"68b16a8e62a5a290f8b8a29f","fixtureName":"Chennai Sharks vs MI Legends","fixtureAPIId":1756457614371,"fixtureDisplayName":"CS vs ML","fixtureStartDate":"2025-08-29T18:30:00.000Z","fixtureStatus":"Completed","fixtureStatusType":3,"fixtureVenue":"fgfg","fixtureType":"OTHERS","seriesName":"","seriesShortName":"","seriesAPIId":0,"fixtureTeams":{"teamA":{"name":"Chennai Sharks","shortName":"CS","teamAPIId":1755506184214,"logo":"https://scorecraze-production.s3.ap-south-1.amazonaws.com/1755506184214-1755506184214"},"teamB":{"name":"MI Legends","shortName":"ML","teamAPIId":1755506194965,"logo":"https://scorecraze-production.s3.ap-south-1.amazonaws.com/1755506194965-1755506194965"}},"lineupsOut":true,"enabledStatus":true,"isactive":true,"joinedUsers":[],"toss":true,"isLocal":true,"createdBy":"6892f46cb250a4f6b1bedce7","createdAt":"2025-08-29T08:53:34.384Z","updatedAt":"2025-09-05T07:20:17.122Z","__v":0,"summary":"ML won by 0 wickets"},{"_id":"68b132e2593666342dd0f44c","fixtureName":"Chennai Sharks vs MI Legends","fixtureAPIId":1756443362502,"fixtureDisplayName":"CS vs ML","fixtureStartDate":"2025-08-29T18:30:00.000Z","fixtureStatus":"Completed","fixtureStatusType":3,"fixtureVenue":"pl","fixtureType":"OTHERS","seriesName":"","seriesShortName":"","seriesAPIId":0,"fixtureTeams":{"teamA":{"name":"Chennai Sharks","shortName":"CS","teamAPIId":1755506184214,"logo":"https://scorecraze-production.s3.ap-south-1.am"
22:25:38.284 [pool-2-thread-4] DEBUG org.apache.http.headers -- http-outgoing-4 << HTTP/1.1 200 OK
22:25:38.315 [pool-2-thread-3] DEBUG org.apache.http.wire -- http-outgoing-0 << "HTTP/1.1 200 OK[\r][\n]"
22:25:38.316 [pool-2-thread-4] DEBUG org.apache.http.headers -- http-outgoing-4 << Server: nginx/1.22.1
22:25:38.316 [pool-2-thread-4] DEBUG org.apache.http.headers -- http-outgoing-4 << Date: Sat, 04 Oct 2025 16:55:37 GMT
22:25:38.316 [pool-2-thread-4] DEBUG org.apache.http.headers -- http-outgoing-4 << Content-Type: application/json; charset=utf-8
22:25:38.316 [pool-2-thread-4] DEBUG org.apache.http.headers -- http-outgoing-4 << Content-Length: 9174
22:25:38.316 [pool-2-thread-4] DEBUG org.apache.http.headers -- http-outgoing-4 << Connection: keep-alive
22:25:38.316 [pool-2-thread-4] DEBUG org.apache.http.headers -- http-outgoing-4 << X-Powered-By: Express
22:25:38.315 [pool-2-thread-1] DEBUG org.apache.http.wire -- http-outgoing-3 << "HTTP/1.1 200 OK[\r][\n]"
22:25:38.316 [pool-2-thread-3] DEBUG org.apache.http.wire -- http-outgoing-0 << "Server: nginx/1.22.1[\r][\n]"
22:25:38.316 [pool-2-thread-3] DEBUG org.apache.http.wire -- http-outgoing-0 << "Date: Sat, 04 Oct 2025 16:55:37 GMT[\r][\n]"
22:25:38.316 [pool-2-thread-3] DEBUG org.apache.http.wire -- http-outgoing-0 << "Content-Type: application/json; charset=utf-8[\r][\n]"
22:25:38.316 [pool-2-thread-3] DEBUG org.apache.http.wire -- http-outgoing-0 << "Content-Length: 1005[\r][\n]"
22:25:38.316 [pool-2-thread-3] DEBUG org.apache.http.wire -- http-outgoing-0 << "Connection: keep-alive[\r][\n]"
22:25:38.316 [pool-2-thread-3] DEBUG org.apache.http.wire -- http-outgoing-0 << "X-Powered-By: Express[\r][\n]"
22:25:38.316 [pool-2-thread-4] DEBUG org.apache.http.headers -- http-outgoing-4 << Access-Control-Allow-Origin: *
22:25:38.316 [pool-2-thread-1] DEBUG org.apache.http.wire -- http-outgoing-3 << "Server: nginx/1.22.1[\r][\n]"
22:25:38.316 [pool-2-thread-1] DEBUG org.apache.http.wire -- http-outgoing-3 << "Date: Sat, 04 Oct 2025 16:55:37 GMT[\r][\n]"
22:25:38.316 [pool-2-thread-1] DEBUG org.apache.http.wire -- http-outgoing-3 << "Content-Type: application/json; charset=utf-8[\r][\n]"
22:25:38.317 [pool-2-thread-1] DEBUG org.apache.http.wire -- http-outgoing-3 << "Content-Length: 2290[\r][\n]"
22:25:38.317 [pool-2-thread-1] DEBUG org.apache.http.wire -- http-outgoing-3 << "Connection: keep-alive[\r][\n]"
22:25:38.317 [pool-2-thread-1] DEBUG org.apache.http.wire -- http-outgoing-3 << "X-Powered-By: Express[\r][\n]"
22:25:38.317 [pool-2-thread-1] DEBUG org.apache.http.wire -- http-outgoing-3 << "Access-Control-Allow-Origin: *[\r][\n]"
22:25:38.317 [pool-2-thread-1] DEBUG org.apache.http.wire -- http-outgoing-3 << "ETag: W/"8f2-23VOEpQu/qf66nVUM7wJzXb+Eos"[\r][\n]"
22:25:38.317 [pool-2-thread-1] DEBUG org.apache.http.wire -- http-outgoing-3 << "[\r][\n]"
22:25:38.316 [pool-2-thread-3] DEBUG org.apache.http.wire -- http-outgoing-0 << "Access-Control-Allow-Origin: *[\r][\n]"
22:25:38.316 [pool-2-thread-4] DEBUG org.apache.http.headers -- http-outgoing-4 << ETag: W/"23d6-dLi5ooi7FUiJvghIaNw/aNXB8H8"
22:25:38.317 [pool-2-thread-1] DEBUG org.apache.http.wire -- http-outgoing-3 << "{"message":"Cricket Teams retrieved successfully","data":[{"_id":"689e013f4186572fdcb75bb7","teamName":"Multan Sultans","teamDisplayName":"MS","teamAPIId":1755185471222,"teamLogo":"","teamJersey":"","teamPlayers":[1755185495238],"seriesAPIId":0,"seriesName":"","createdBy":"6892f46cb250a4f6b1bedce7","__v":0,"updatedAt":"2025-10-01T07:58:05.417Z"},{"_id":"68a2e6089f04af09b16428bf","teamName":"Chennai Sharks","teamDisplayName":"CS","teamAPIId":1755506184214,"teamLogo":"https://scorecraze-production.s3.ap-south-1.amazonaws.com/1755506184214-1755506184214","teamJersey":"","teamPlayers":[1755506303520,1755506339248,1755506400602,1755607009505],"seriesAPIId":0,"seriesName":"","createdBy":"6892f46cb250a4f6b1bedce7","__v":0,"updatedAt":"2025-09-21T19:13:46.392Z"},{"_id":"68a2e6139f04af09b16428c3","teamName":"MI Legends","teamDisplayName":"ML","teamAPIId":1755506194965,"teamLogo":"https://scorecraze-production.s3.ap-south-1.amazonaws.com/1755506194965-1755506194965","teamJersey":"","teamPlayers":[1755506321960,1755506373062,1755506282024,1755506356475],"seriesAPIId":0,"seriesName":"","createdBy":"6892f46cb250a4f6b1bedce7","__v":0},{"_id":"68a46ffcdf63f97065478322","teamName":"Team Anbu","teamDisplayName":"TA","teamAPIId":1755607036402,"teamLogo":"https://scorecraze-production.s3.ap-south-1.amazonaws.com/1755607286750-1755607036402","teamJersey":"","teamPlayers":[1755185495238,1755506400602,1755606930551,1755606962052,1755506303520,1755506356475,1755506373062],"seriesAPIId":0,"seriesName":"","createdBy":"6892f46cb250a4f6b1bedce7","__v":0},{"_id":"68a4700bdf63f97065478326","teamName":"Team Gethu","teamDisplayName":"TG","teamAPIId":1755607051158,"teamLogo":"https://scorecraze-production.s3.ap-south-1.amazonaws.com/1755607294078-1755607051158","teamJersey":"","teamPlayers":[1755506339248,1755606894500,1755607009505,1755607010505,1755607184602,1755607171756,1755607158883],"seriesAPIId":0,"seriesName":"","createdBy":"6892f46cb250a4f6b1bedce7","__v":0},{"_id":"68a8268764f279a0f106fc8f","teamName":"Anish Dream","teamDisplayName":"AD","teamAPIId":1755850375926,"teamLogo":"","teamJersey":"","teamPlayers":[],"seriesAPIId":0,"seriesName":"","createdBy":"6892f46cb250a4f6b1bedce7","__v":0,"updatedAt":"2025-09-01T05:38:57.067Z"}],"totalPage":0,"currentPage":1,"totalCount":0}"
22:25:38.318 [pool-2-thread-4] DEBUG org.apache.http.impl.execchain.MainClientExec -- Connection can be kept alive indefinitely
22:25:38.318 [pool-2-thread-1] DEBUG org.apache.http.headers -- http-outgoing-3 << HTTP/1.1 200 OK
22:25:38.318 [pool-2-thread-1] DEBUG org.apache.http.headers -- http-outgoing-3 << Server: nginx/1.22.1
22:25:38.318 [pool-2-thread-1] DEBUG org.apache.http.headers -- http-outgoing-3 << Date: Sat, 04 Oct 2025 16:55:37 GMT
22:25:38.318 [pool-2-thread-1] DEBUG org.apache.http.headers -- http-outgoing-3 << Content-Type: application/json; charset=utf-8
22:25:38.318 [pool-2-thread-1] DEBUG org.apache.http.headers -- http-outgoing-3 << Content-Length: 2290
22:25:38.318 [pool-2-thread-1] DEBUG org.apache.http.headers -- http-outgoing-3 << Connection: keep-alive
22:25:38.318 [pool-2-thread-1] DEBUG org.apache.http.headers -- http-outgoing-3 << X-Powered-By: Express
22:25:38.318 [pool-2-thread-4] DEBUG org.apache.http.wire -- http-outgoing-4 << "azonaws.com/1755506184214-1755506184214"},"teamB":{"name":"MI Legends","shortName":"ML","teamAPIId":1755506194965,"logo":"https://scorecraze-production.s3.ap-south-1.amazonaws.com/1755506194965-1755506194965"}},"lineupsOut":true,"enabledStatus":true,"isactive":true,"joinedUsers":[],"toss":true,"isLocal":true,"createdBy":"6892f46cb250a4f6b1bedce7","__v":0,"summary":""},{"_id":"68b141d1593666342dd0f978","fixtureName":"Chennai Sharks vs MI Legends","fixtureAPIId":1756447185095,"fixtureDisplayName":"CS vs ML","fixtureStartDate":"2025-08-29T17:59:00.000Z","fixtureStatus":"Completed","fixtureStatusType":3,"fixtureVenue":"guk","fixtureType":"OTHERS","seriesName":"","seriesShortName":"","seriesAPIId":0,"fixtureTeams":{"teamA":{"name":"Chennai Sharks","shortName":"CS","teamAPIId":1755506184214,"logo":"https://scorecraze-production.s3.ap-south-1.amazonaws.com/1755506184214-1755506184214"},"teamB":{"name":"MI Legends","shortName":"ML","teamAPIId":1755506194965,"logo":"https://scorecraze-production.s3.ap-south-1.amazonaw"
22:25:38.317 [pool-2-thread-3] DEBUG org.apache.http.wire -- http-outgoing-0 << "ETag: W/"3ed-or42J1iOwCRgI2XBO1zjFXPR4Ds"[\r][\n]"
22:25:38.319 [pool-2-thread-4] DEBUG org.apache.http.wire -- http-outgoing-4 << "s.com/1755506194965-1755506194965"}},"lineupsOut":true,"enabledStatus":true,"isactive":true,"joinedUsers":[],"toss":true,"isLocal":true,"createdBy":"6892f46cb250a4f6b1bedce7","__v":0,"summary":""}],"totalPage":3,"currentPage":1}"
22:25:38.319 [pool-2-thread-3] DEBUG org.apache.http.wire -- http-outgoing-0 << "[\r][\n]"
22:25:38.319 [pool-2-thread-4] DEBUG org.apache.http.impl.conn.PoolingHttpClientConnectionManager -- Connection [id: 4][route: {s}->https://dev.scorecraze.app:443] can be kept alive indefinitely
22:25:38.319 [pool-2-thread-4] DEBUG org.apache.http.impl.conn.DefaultManagedHttpClientConnection -- http-outgoing-4: set socket timeout to 0
22:25:38.319 [pool-2-thread-4] DEBUG org.apache.http.impl.conn.PoolingHttpClientConnectionManager -- Connection released: [id: 4][route: {s}->https://dev.scorecraze.app:443][total available: 1; route allocated: 1 of 5; total allocated: 1 of 10]
22:25:38.319 [pool-2-thread-3] DEBUG org.apache.http.wire -- http-outgoing-0 << "{"message":"Fixtures Listed successfully","data":[{"_id":"68c140dd7e0ef53ac006521e","fixtureName":"Team Anbu vs Team Gethu","fixtureAPIId":1757495517508,"fixtureDisplayName":"TA vs TG","fixtureStartDate":"2025-09-10T12:00:00.000Z","fixtureStatus":"Upcoming","fixtureStatusType":1,"fixtureVenue":"Karappakkam","fixtureType":"T20","seriesName":"","seriesShortName":"","seriesAPIId":0,"fixtureTeams":{"teamA":{"name":"Team Anbu","shortName":"TA","teamAPIId":1755607036402,"logo":"https://scorecraze-production.s3.ap-south-1.amazonaws.com/1755607286750-1755607036402"},"teamB":{"name":"Team Gethu","shortName":"TG","teamAPIId":1755607051158,"logo":"https://scorecraze-production.s3.ap-south-1.amazonaws.com/1755607294078-1755607051158"}},"lineupsOut":false,"enabledStatus":true,"isactive":true,"joinedUsers":[],"toss":false,"isLocal":true,"createdBy":"6892f46cb250a4f6b1bedce7","createdAt":"2025-09-10T09:11:57.513Z","updatedAt":"2025-09-10T09:11:57.513Z","__v":0,"summary":""}],"totalPage":1,"currentPage":1}"
22:25:38.318 [pool-2-thread-1] DEBUG org.apache.http.headers -- http-outgoing-3 << Access-Control-Allow-Origin: *
22:25:38.330 [pool-2-thread-1] DEBUG org.apache.http.headers -- http-outgoing-3 << ETag: W/"8f2-23VOEpQu/qf66nVUM7wJzXb+Eos"
22:25:38.330 [pool-2-thread-1] DEBUG org.apache.http.impl.execchain.MainClientExec -- Connection can be kept alive indefinitely
22:25:38.319 [pool-2-thread-4] DEBUG org.apache.http.impl.conn.PoolingHttpClientConnectionManager -- Connection manager is shutting down
22:25:38.330 [pool-2-thread-3] DEBUG org.apache.http.headers -- http-outgoing-0 << HTTP/1.1 200 OK
22:25:38.330 [pool-2-thread-1] DEBUG org.apache.http.impl.conn.PoolingHttpClientConnectionManager -- Connection [id: 1][route: {s}->https://dev.scorecraze.app:443] can be kept alive indefinitely
22:25:38.330 [pool-2-thread-4] DEBUG org.apache.http.impl.conn.DefaultManagedHttpClientConnection -- http-outgoing-4: Close connection
22:25:38.330 [pool-2-thread-3] DEBUG org.apache.http.headers -- http-outgoing-0 << Server: nginx/1.22.1
22:25:38.330 [pool-2-thread-3] DEBUG org.apache.http.headers -- http-outgoing-0 << Date: Sat, 04 Oct 2025 16:55:37 GMT
22:25:38.330 [pool-2-thread-3] DEBUG org.apache.http.headers -- http-outgoing-0 << Content-Type: application/json; charset=utf-8
22:25:38.330 [pool-2-thread-3] DEBUG org.apache.http.headers -- http-outgoing-0 << Content-Length: 1005
22:25:38.330 [pool-2-thread-3] DEBUG org.apache.http.headers -- http-outgoing-0 << Connection: keep-alive
22:25:38.330 [pool-2-thread-3] DEBUG org.apache.http.headers -- http-outgoing-0 << X-Powered-By: Express
22:25:38.330 [pool-2-thread-3] DEBUG org.apache.http.headers -- http-outgoing-0 << Access-Control-Allow-Origin: *
22:25:38.330 [pool-2-thread-3] DEBUG org.apache.http.headers -- http-outgoing-0 << ETag: W/"3ed-or42J1iOwCRgI2XBO1zjFXPR4Ds"
22:25:38.330 [pool-2-thread-3] DEBUG org.apache.http.impl.execchain.MainClientExec -- Connection can be kept alive indefinitely
22:25:38.330 [pool-2-thread-1] DEBUG org.apache.http.impl.conn.DefaultManagedHttpClientConnection -- http-outgoing-3: set socket timeout to 0
22:25:38.331 [pool-2-thread-1] DEBUG org.apache.http.impl.conn.PoolingHttpClientConnectionManager -- Connection released: [id: 1][route: {s}->https://dev.scorecraze.app:443][total available: 1; route allocated: 1 of 5; total allocated: 1 of 10]
22:25:38.331 [pool-2-thread-1] DEBUG org.apache.http.impl.conn.PoolingHttpClientConnectionManager -- Connection manager is shutting down
22:25:38.331 [pool-2-thread-1] DEBUG org.apache.http.impl.conn.DefaultManagedHttpClientConnection -- http-outgoing-3: Close connection
22:25:38.331 [pool-2-thread-4] DEBUG org.apache.http.impl.conn.PoolingHttpClientConnectionManager -- Connection manager shut down
22:25:38.332 [pool-2-thread-4] DEBUG com.intuit.karate -- response time in milliseconds: 1266
1 < 200
1 < Server: nginx/1.22.1
1 < Date: Sat, 04 Oct 2025 16:55:37 GMT
1 < Content-Type: application/json; charset=utf-8
1 < Content-Length: 9174
1 < Connection: keep-alive
1 < X-Powered-By: Express
1 < Access-Control-Allow-Origin: *
1 < ETag: W/"23d6-dLi5ooi7FUiJvghIaNw/aNXB8H8"
{"message":"Fixtures Listed successfully","data":[{"_id":"68b15391593666342dd101c8","fixtureName":"Chennai Sharks vs MI Legends","fixtureAPIId":1756451729991,"fixtureDisplayName":"CS vs ML","fixtureStartDate":"2025-09-30T09:15:00.000Z","fixtureStatus":"Completed","fixtureStatusType":3,"fixtureVenue":"Chennai ","fixtureType":"OTHERS","seriesName":"","seriesShortName":"","seriesAPIId":0,"fixtureTeams":{"teamA":{"name":"Chennai Sharks","shortName":"CS","teamAPIId":1755506184214,"logo":"https://scorecraze-production.s3.ap-south-1.amazonaws.com/1755506184214-1755506184214"},"teamB":{"name":"MI Legends","shortName":"ML","teamAPIId":1755506194965,"logo":"https://scorecraze-production.s3.ap-south-1.amazonaws.com/1755506194965-1755506194965"}},"lineupsOut":true,"enabledStatus":true,"isactive":true,"joinedUsers":[],"toss":true,"isLocal":true,"createdBy":"6892f46cb250a4f6b1bedce7","__v":0,"updatedAt":"2025-08-29T09:27:29.653Z","summary":""},{"_id":"68b15391593666342dd101b5","fixtureName":"Chennai Sharks vs MI Legends","fixtureAPIId":1756451729400,"fixtureDisplayName":"CS vs ML","fixtureStartDate":"2025-09-13T07:25:00.000Z","fixtureStatus":"Completed","fixtureStatusType":3,"fixtureVenue":"Arena","fixtureType":"T10","seriesName":"","seriesShortName":"","seriesAPIId":0,"fixtureTeams":{"teamA":{"name":"Chennai Sharks","shortName":"CS","teamAPIId":1755506184214,"logo":"https://scorecraze-production.s3.ap-south-1.amazonaws.com/1755506184214-1755506184214"},"teamB":{"name":"MI Legends","shortName":"ML","teamAPIId":1755506194965,"logo":"https://scorecraze-production.s3.ap-south-1.amazonaws.com/1755506194965-1755506194965"}},"lineupsOut":true,"enabledStatus":true,"isactive":true,"joinedUsers":[],"toss":true,"isLocal":true,"createdBy":"6892f46cb250a4f6b1bedce7","__v":0,"updatedAt":"2025-09-02T13:31:34.538Z","summary":"CS won by 11 runs"},{"_id":"68b93afefe9b55740eedff5e","fixtureName":"Team Anbu vs Team Gethu","fixtureAPIId":1756969726043,"fixtureDisplayName":"TA vs TG","fixtureStartDate":"2025-09-04T07:11:33.000Z","fixtureStatus":"Completed","fixtureStatusType":3,"fixtureVenue":"Jodhpur","fixtureType":"OTHERS","seriesName":"","seriesShortName":"","seriesAPIId":0,"fixtureTeams":{"teamA":{"name":"Team Anbu","shortName":"TA","teamAPIId":1755607036402,"logo":"https://scorecraze-production.s3.ap-south-1.amazonaws.com/1755607286750-1755607036402"},"teamB":{"name":"Team Gethu","shortName":"TG","teamAPIId":1755607051158,"logo":"https://scorecraze-production.s3.ap-south-1.amazonaws.com/1755607294078-1755607051158"}},"lineupsOut":true,"enabledStatus":true,"isactive":true,"joinedUsers":[],"toss":true,"isLocal":true,"createdBy":"6892f46cb250a4f6b1bedce7","createdAt":"2025-09-04T07:08:46.053Z","updatedAt":"2025-09-04T11:44:58.067Z","__v":0,"summary":"TG won by 3 wickets"},{"_id":"68b7dbca322dac15a0989f57","fixtureName":"Team Anbu vs Team Gethu","fixtureAPIId":1756879818214,"fixtureDisplayName":"TA vs TG","fixtureStartDate":"2025-09-03T06:15:00.000Z","fixtureStatus":"Completed","fixtureStatusType":3,"fixtureVenue":"Dubai","fixtureType":"OTHERS","seriesName":"","seriesShortName":"","seriesAPIId":0,"fixtureTeams":{"teamA":{"name":"Team Anbu","shortName":"TA","teamAPIId":1755607036402,"logo":"https://scorecraze-production.s3.ap-south-1.amazonaws.com/1755607286750-1755607036402"},"teamB":{"name":"Team Gethu","shortName":"TG","teamAPIId":1755607051158,"logo":"https://scorecraze-production.s3.ap-south-1.amazonaws.com/1755607294078-1755607051158"}},"lineupsOut":true,"enabledStatus":true,"isactive":true,"joinedUsers":[],"toss":true,"isLocal":true,"createdBy":"6892f46cb250a4f6b1bedce7","createdAt":"2025-09-03T06:10:18.218Z","updatedAt":"2025-09-03T10:37:22.614Z","__v":0,"summary":"TG won by 3 wickets"},{"_id":"68b680c9322dac15a0986022","fixtureName":"Chennai Sharks vs MI Legends","fixtureAPIId":1756790985168,"fixtureDisplayName":"CS vs ML","fixtureStartDate":"2025-09-02T05:30:00.000Z","fixtureStatus":"Completed","fixtureStatusType":3,"fixtureVenue":"Karapakkam","fixtureType":"OTHERS","seriesName":"","seriesShortName":"","seriesAPIId":0,"fixtureTeams":{"teamA":{"name":"Chennai Sharks","shortName":"CS","teamAPIId":1755506184214,"logo":"https://scorecraze-production.s3.ap-south-1.amazonaws.com/1755506184214-1755506184214"},"teamB":{"name":"MI Legends","shortName":"ML","teamAPIId":1755506194965,"logo":"https://scorecraze-production.s3.ap-south-1.amazonaws.com/1755506194965-1755506194965"}},"lineupsOut":true,"enabledStatus":true,"isactive":true,"joinedUsers":[],"toss":true,"isLocal":true,"createdBy":"6892f46cb250a4f6b1bedce7","createdAt":"2025-09-02T05:29:45.172Z","updatedAt":"2025-09-02T05:46:38.803Z","__v":0,"summary":"ML won by 3 wickets"},{"_id":"68b59db4322dac15a0984be7","fixtureName":"Team Anbu vs Team Gethu","fixtureAPIId":1756732852339,"fixtureDisplayName":"TA vs TG","fixtureStartDate":"2025-09-01T13:25:00.000Z","fixtureStatus":"Completed","fixtureStatusType":3,"fixtureVenue":"Chennai","fixtureType":"OTHERS","seriesName":"","seriesShortName":"","seriesAPIId":0,"fixtureTeams":{"teamA":{"name":"Team Anbu","shortName":"TA","teamAPIId":1755607036402,"logo":"https://scorecraze-production.s3.ap-south-1.amazonaws.com/1755607286750-1755607036402"},"teamB":{"name":"Team Gethu","shortName":"TG","teamAPIId":1755607051158,"logo":"https://scorecraze-production.s3.ap-south-1.amazonaws.com/1755607294078-1755607051158"}},"lineupsOut":true,"enabledStatus":true,"isactive":true,"joinedUsers":[],"toss":true,"isLocal":true,"createdBy":"6892f46cb250a4f6b1bedce7","createdAt":"2025-09-01T13:20:52.350Z","updatedAt":"2025-09-01T13:31:48.127Z","__v":0,"summary":"TG won by 3 wickets"},{"_id":"68b1470c1f1848b1e1c39fb9","fixtureName":"Chennai Sharks vs MI Legends","fixtureAPIId":1756448524072,"fixtureDisplayName":"CS vs ML","fixtureStartDate":"2025-08-29T18:30:00.000Z","fixtureStatus":"Completed","fixtureStatusType":3,"fixtureVenue":"gunidy","fixtureType":"OTHERS","seriesName":"","seriesShortName":"","seriesAPIId":0,"fixtureTeams":{"teamA":{"name":"Chennai Sharks","shortName":"CS","teamAPIId":1755506184214,"logo":"https://scorecraze-production.s3.ap-south-1.amazonaws.com/1755506184214-1755506184214"},"teamB":{"name":"MI Legends","shortName":"ML","teamAPIId":1755506194965,"logo":"https://scorecraze-production.s3.ap-south-1.amazonaws.com/1755506194965-1755506194965"}},"lineupsOut":true,"enabledStatus":true,"isactive":true,"joinedUsers":[],"toss":true,"isLocal":true,"createdBy":"6892f46cb250a4f6b1bedce7","__v":0,"summary":"CS won by 3 wickets"},{"_id":"68b16a8e62a5a290f8b8a29f","fixtureName":"Chennai Sharks vs MI Legends","fixtureAPIId":1756457614371,"fixtureDisplayName":"CS vs ML","fixtureStartDate":"2025-08-29T18:30:00.000Z","fixtureStatus":"Completed","fixtureStatusType":3,"fixtureVenue":"fgfg","fixtureType":"OTHERS","seriesName":"","seriesShortName":"","seriesAPIId":0,"fixtureTeams":{"teamA":{"name":"Chennai Sharks","shortName":"CS","teamAPIId":1755506184214,"logo":"https://scorecraze-production.s3.ap-south-1.amazonaws.com/1755506184214-1755506184214"},"teamB":{"name":"MI Legends","shortName":"ML","teamAPIId":1755506194965,"logo":"https://scorecraze-production.s3.ap-south-1.amazonaws.com/1755506194965-1755506194965"}},"lineupsOut":true,"enabledStatus":true,"isactive":true,"joinedUsers":[],"toss":true,"isLocal":true,"createdBy":"6892f46cb250a4f6b1bedce7","createdAt":"2025-08-29T08:53:34.384Z","updatedAt":"2025-09-05T07:20:17.122Z","__v":0,"summary":"ML won by 0 wickets"},{"_id":"68b132e2593666342dd0f44c","fixtureName":"Chennai Sharks vs MI Legends","fixtureAPIId":1756443362502,"fixtureDisplayName":"CS vs ML","fixtureStartDate":"2025-08-29T18:30:00.000Z","fixtureStatus":"Completed","fixtureStatusType":3,"fixtureVenue":"pl","fixtureType":"OTHERS","seriesName":"","seriesShortName":"","seriesAPIId":0,"fixtureTeams":{"teamA":{"name":"Chennai Sharks","shortName":"CS","teamAPIId":1755506184214,"logo":"https://scorecraze-production.s3.ap-south-1.amazonaws.com/1755506184214-1755506184214"},"teamB":{"name":"MI Legends","shortName":"ML","teamAPIId":1755506194965,"logo":"https://scorecraze-production.s3.ap-south-1.amazonaws.com/1755506194965-1755506194965"}},"lineupsOut":true,"enabledStatus":true,"isactive":true,"joinedUsers":[],"toss":true,"isLocal":true,"createdBy":"6892f46cb250a4f6b1bedce7","__v":0,"summary":""},{"_id":"68b141d1593666342dd0f978","fixtureName":"Chennai Sharks vs MI Legends","fixtureAPIId":1756447185095,"fixtureDisplayName":"CS vs ML","fixtureStartDate":"2025-08-29T17:59:00.000Z","fixtureStatus":"Completed","fixtureStatusType":3,"fixtureVenue":"guk","fixtureType":"OTHERS","seriesName":"","seriesShortName":"","seriesAPIId":0,"fixtureTeams":{"teamA":{"name":"Chennai Sharks","shortName":"CS","teamAPIId":1755506184214,"logo":"https://scorecraze-production.s3.ap-south-1.amazonaws.com/1755506184214-1755506184214"},"teamB":{"name":"MI Legends","shortName":"ML","teamAPIId":1755506194965,"logo":"https://scorecraze-production.s3.ap-south-1.amazonaws.com/1755506194965-1755506194965"}},"lineupsOut":true,"enabledStatus":true,"isactive":true,"joinedUsers":[],"toss":true,"isLocal":true,"createdBy":"6892f46cb250a4f6b1bedce7","__v":0,"summary":""}],"totalPage":3,"currentPage":1}

22:25:38.332 [pool-2-thread-3] DEBUG org.apache.http.impl.conn.PoolingHttpClientConnectionManager -- Connection [id: 2][route: {s}->https://dev.scorecraze.app:443] can be kept alive indefinitely
22:25:38.333 [pool-2-thread-3] DEBUG org.apache.http.impl.conn.DefaultManagedHttpClientConnection -- http-outgoing-0: set socket timeout to 0
22:25:38.333 [pool-2-thread-3] DEBUG org.apache.http.impl.conn.PoolingHttpClientConnectionManager -- Connection released: [id: 2][route: {s}->https://dev.scorecraze.app:443][total available: 1; route allocated: 1 of 5; total allocated: 1 of 10]
22:25:38.333 [pool-2-thread-3] DEBUG org.apache.http.impl.conn.PoolingHttpClientConnectionManager -- Connection manager is shutting down
22:25:38.333 [pool-2-thread-3] DEBUG org.apache.http.impl.conn.DefaultManagedHttpClientConnection -- http-outgoing-0: Close connection
22:25:38.332 [pool-2-thread-1] DEBUG org.apache.http.impl.conn.PoolingHttpClientConnectionManager -- Connection manager shut down
22:25:38.345 [pool-2-thread-1] DEBUG com.intuit.karate -- response time in milliseconds: 1278
1 < 200
1 < Server: nginx/1.22.1
1 < Date: Sat, 04 Oct 2025 16:55:37 GMT
1 < Content-Type: application/json; charset=utf-8
1 < Content-Length: 2290
1 < Connection: keep-alive
1 < X-Powered-By: Express
1 < Access-Control-Allow-Origin: *
1 < ETag: W/"8f2-23VOEpQu/qf66nVUM7wJzXb+Eos"
{"message":"Cricket Teams retrieved successfully","data":[{"_id":"689e013f4186572fdcb75bb7","teamName":"Multan Sultans","teamDisplayName":"MS","teamAPIId":1755185471222,"teamLogo":"","teamJersey":"","teamPlayers":[1755185495238],"seriesAPIId":0,"seriesName":"","createdBy":"6892f46cb250a4f6b1bedce7","__v":0,"updatedAt":"2025-10-01T07:58:05.417Z"},{"_id":"68a2e6089f04af09b16428bf","teamName":"Chennai Sharks","teamDisplayName":"CS","teamAPIId":1755506184214,"teamLogo":"https://scorecraze-production.s3.ap-south-1.amazonaws.com/1755506184214-1755506184214","teamJersey":"","teamPlayers":[1755506303520,1755506339248,1755506400602,1755607009505],"seriesAPIId":0,"seriesName":"","createdBy":"6892f46cb250a4f6b1bedce7","__v":0,"updatedAt":"2025-09-21T19:13:46.392Z"},{"_id":"68a2e6139f04af09b16428c3","teamName":"MI Legends","teamDisplayName":"ML","teamAPIId":1755506194965,"teamLogo":"https://scorecraze-production.s3.ap-south-1.amazonaws.com/1755506194965-1755506194965","teamJersey":"","teamPlayers":[1755506321960,1755506373062,1755506282024,1755506356475],"seriesAPIId":0,"seriesName":"","createdBy":"6892f46cb250a4f6b1bedce7","__v":0},{"_id":"68a46ffcdf63f97065478322","teamName":"Team Anbu","teamDisplayName":"TA","teamAPIId":1755607036402,"teamLogo":"https://scorecraze-production.s3.ap-south-1.amazonaws.com/1755607286750-1755607036402","teamJersey":"","teamPlayers":[1755185495238,1755506400602,1755606930551,1755606962052,1755506303520,1755506356475,1755506373062],"seriesAPIId":0,"seriesName":"","createdBy":"6892f46cb250a4f6b1bedce7","__v":0},{"_id":"68a4700bdf63f97065478326","teamName":"Team Gethu","teamDisplayName":"TG","teamAPIId":1755607051158,"teamLogo":"https://scorecraze-production.s3.ap-south-1.amazonaws.com/1755607294078-1755607051158","teamJersey":"","teamPlayers":[1755506339248,1755606894500,1755607009505,1755607010505,1755607184602,1755607171756,1755607158883],"seriesAPIId":0,"seriesName":"","createdBy":"6892f46cb250a4f6b1bedce7","__v":0},{"_id":"68a8268764f279a0f106fc8f","teamName":"Anish Dream","teamDisplayName":"AD","teamAPIId":1755850375926,"teamLogo":"","teamJersey":"","teamPlayers":[],"seriesAPIId":0,"seriesName":"","createdBy":"6892f46cb250a4f6b1bedce7","__v":0,"updatedAt":"2025-09-01T05:38:57.067Z"}],"totalPage":0,"currentPage":1,"totalCount":0}

22:25:38.346 [pool-2-thread-3] DEBUG org.apache.http.impl.conn.PoolingHttpClientConnectionManager -- Connection manager shut down
22:25:38.346 [pool-2-thread-2] INFO com.intuit.karate -- [print] {
  "data": [
    {
      "_id": "68df77c27e0ef53ac0067c7f",
      "playerName": "Dummy",
      "playerDisplayName": "Dum",
      "player_value": {
        "Test": 0,
        "ODI": 0,
        "T20": 0
      },
      "player_type": "wk",
      "playerImg": "",
      "playerAPIId": 1759475650286,
      "mobileNumber": "9174963102",
      "isVerified": false,
      "createdBy": "6892f46cb250a4f6b1bedce7",
      "createdAt": "2025-10-03T07:14:10.290Z",
      "updatedAt": "2025-10-03T07:14:10.290Z",
      "__v": 0
    },
    {
      "_id": "68a47090df63f97065478346",
      "playerName": "Tamilarasan",
      "playerDisplayName": "Tamil",
      "player_value": "0",
      "player_type": "bowl",
      "playerAPIId": 1755607184602,
      "mobileNumber": "9404640485",
      "isVerified": false,
      "createdBy": "6892f46cb250a4f6b1bedce7",
      "__v": 0,
      "playerImg": "https://scorecraze-production.s3.ap-south-1.amazonaws.com/1755607709392-1755607184602"
    },
    {
      "_id": "68a47083df63f97065478342",
      "playerName": "Karthik Dhoni",
      "playerDisplayName": "KD",
      "player_value": "0",
      "player_type": "wk",
      "playerAPIId": 1755607171756,
      "mobileNumber": "9404438105",
      "isVerified": false,
      "createdBy": "6892f46cb250a4f6b1bedce7",
      "__v": 0,
      "playerImg": "https://scorecraze-production.s3.ap-south-1.amazonaws.com/1755608066364-1755607171756"
    },
    {
      "_id": "68a47076df63f9706547833e",
      "playerName": "Vignesh Gethu",
      "playerDisplayName": "Vicky",
      "player_value": "0",
      "player_type": "bat",
      "playerAPIId": 1755607158883,
      "mobileNumber": "9543138205",
      "isVerified": false,
      "createdBy": "6892f46cb250a4f6b1bedce7",
      "__v": 0,
      "playerImg": "https://scorecraze-production.s3.ap-south-1.amazonaws.com/1755607749324-1755607158883"
    },
    {
      "_id": "68a46fe1df63f9706547831c",
      "playerName": "Sudharsanan",
      "playerDisplayName": "Sn",
      "player_value": "0",
      "player_type": "bowl",
      "playerImg": "https://scorecraze-production.s3.ap-south-1.amazonaws.com/1755607766883-1755607010505",
      "playerAPIId": 1755607010505,
      "mobileNumber": "9054355088",
      "isVerified": false,
      "createdBy": "6892f46cb250a4f6b1bedce7",
      "__v": 0
    },
    {
      "_id": "68a46fe1df63f9706547831b",
      "playerName": "Harish",
      "playerDisplayName": "Hh",
      "player_value": "0",
      "player_type": "ar",
      "playerImg": "https://scorecraze-production.s3.ap-south-1.amazonaws.com/1755607789469-1755607009505",
      "playerAPIId": 1755607009505,
      "mobileNumber": "9055880085",
      "isVerified": false,
      "createdBy": "6892f46cb250a4f6b1bedce7",
      "__v": 0
    },
    {
      "_id": "68a46fb2df63f97065478316",
      "playerName": "Seran Baskaran",
      "playerDisplayName": "Seran",
      "player_value": "0",
      "player_type": "bowl",
      "playerAPIId": 1755606962052,
      "mobileNumber": "9351040454",
      "isVerified": false,
      "createdBy": "6892f46cb250a4f6b1bedce7",
      "__v": 0,
      "playerImg": "https://scorecraze-production.s3.ap-south-1.amazonaws.com/1755607890039-1755606962052"
    },
    {
      "_id": "68a46f92df63f97065478311",
      "playerName": "Vinoth Kanna",
      "playerDisplayName": "VK",
      "player_value": "0",
      "player_type": "ar",
      "playerAPIId": 1755606930551,
      "mobileNumber": "9015124040",
      "isVerified": false,
      "createdBy": "6892f46cb250a4f6b1bedce7",
      "__v": 0,
      "playerImg": "https://scorecraze-production.s3.ap-south-1.amazonaws.com/1755607801627-1755606930551"
    },
    {
      "_id": "68a46f6edf63f9706547830d",
      "playerName": "Anwin Paulji",
      "playerDisplayName": "Anwin",
      "player_value": "0",
      "player_type": "ar",
      "playerAPIId": 1755606894500,
      "mobileNumber": "9075453148",
      "isVerified": false,
      "createdBy": "6892f46cb250a4f6b1bedce7",
      "__v": 0,
      "playerImg": "https://scorecraze-production.s3.ap-south-1.amazonaws.com/1755607827941-1755606894500"
    },
    {
      "_id": "68a2e6e09f04af09b16428e0",
      "playerName": "Bharathi",
      "playerDisplayName": "Bharathi",
      "player_value": "0",
      "player_type": "bowl",
      "playerImg": "https://scorecraze-production.s3.ap-south-1.amazonaws.com/1755607843778-1755506400602",
      "playerAPIId": 1755506400602,
      "mobileNumber": "8697548123",
      "isVerified": false,
      "createdBy": "6892f46cb250a4f6b1bedce7",
      "__v": 0
    }
  ],
  "status": 200,
  "message": "Players fetched successfully"
}
 
22:25:38.346 [pool-2-thread-5] INFO com.intuit.karate -- [print] {
  "message": "Fixtures Listed successfully",
  "data": [
    {
      "_id": "68ba986903172702146f0ed1",
      "fixtureName": "Team Anbu vs Team Gethu",
      "fixtureAPIId": 1757059177908,
      "fixtureDisplayName": "TA vs TG",
      "fixtureStartDate": "2025-09-05T08:00:00.000Z",
      "fixtureStatus": "Live",
      "fixtureStatusType": 2,
      "fixtureVenue": "Chennai",
      "fixtureType": "OTHERS",
      "seriesName": "",
      "seriesShortName": "",
      "seriesAPIId": 0,
      "fixtureTeams": {
        "teamA": {
          "name": "Team Anbu",
          "shortName": "TA",
          "teamAPIId": 1755607036402,
          "logo": "https://scorecraze-production.s3.ap-south-1.amazonaws.com/1755607286750-1755607036402"
        },
        "teamB": {
          "name": "Team Gethu",
          "shortName": "TG",
          "teamAPIId": 1755607051158,
          "logo": "https://scorecraze-production.s3.ap-south-1.amazonaws.com/1755607294078-1755607051158"
        }
      },
      "lineupsOut": true,
      "enabledStatus": true,
      "isactive": true,
      "joinedUsers": [
      ],
      "toss": true,
      "isLocal": true,
      "createdBy": "6892f46cb250a4f6b1bedce7",
      "createdAt": "2025-09-05T07:59:37.941Z",
      "updatedAt": "2025-09-05T08:52:56.353Z",
      "__v": 0,
      "summary": "TA won the toss and choose to bat"
    }
  ],
  "totalPage": 1,
  "currentPage": 1
}
 
22:25:38.348 [pool-2-thread-2] INFO com.intuit.karate -- [print] 200 
22:25:38.346 [pool-2-thread-3] DEBUG com.intuit.karate -- response time in milliseconds: 1280
1 < 200
1 < Server: nginx/1.22.1
1 < Date: Sat, 04 Oct 2025 16:55:37 GMT
1 < Content-Type: application/json; charset=utf-8
1 < Content-Length: 1005
1 < Connection: keep-alive
1 < X-Powered-By: Express
1 < Access-Control-Allow-Origin: *
1 < ETag: W/"3ed-or42J1iOwCRgI2XBO1zjFXPR4Ds"
{"message":"Fixtures Listed successfully","data":[{"_id":"68c140dd7e0ef53ac006521e","fixtureName":"Team Anbu vs Team Gethu","fixtureAPIId":1757495517508,"fixtureDisplayName":"TA vs TG","fixtureStartDate":"2025-09-10T12:00:00.000Z","fixtureStatus":"Upcoming","fixtureStatusType":1,"fixtureVenue":"Karappakkam","fixtureType":"T20","seriesName":"","seriesShortName":"","seriesAPIId":0,"fixtureTeams":{"teamA":{"name":"Team Anbu","shortName":"TA","teamAPIId":1755607036402,"logo":"https://scorecraze-production.s3.ap-south-1.amazonaws.com/1755607286750-1755607036402"},"teamB":{"name":"Team Gethu","shortName":"TG","teamAPIId":1755607051158,"logo":"https://scorecraze-production.s3.ap-south-1.amazonaws.com/1755607294078-1755607051158"}},"lineupsOut":false,"enabledStatus":true,"isactive":true,"joinedUsers":[],"toss":false,"isLocal":true,"createdBy":"6892f46cb250a4f6b1bedce7","createdAt":"2025-09-10T09:11:57.513Z","updatedAt":"2025-09-10T09:11:57.513Z","__v":0,"summary":""}],"totalPage":1,"currentPage":1}

22:25:38.354 [pool-2-thread-2] DEBUG com.jayway.jsonpath.internal.path.CompiledPath -- Evaluating path: $
22:25:38.359 [pool-2-thread-2] DEBUG org.apache.http.client.protocol.RequestAddCookies -- CookieSpec selected: karate
22:25:38.360 [pool-2-thread-2] DEBUG org.apache.http.client.protocol.RequestAuthCache -- Auth cache not set in the context
22:25:38.360 [pool-2-thread-2] DEBUG com.intuit.karate -- request:
1 > POST https://dev.scorecraze.app/cricket/fixtures?page=6
1 > Content-Type: application/json; charset=UTF-8
1 > Content-Length: 51
1 > Host: dev.scorecraze.app
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.14 (Java/11.0.27)
1 > Accept-Encoding: gzip,deflate
{"filter":{"seriesAPIId":0,"fixtureStatus":"Live"}}

22:25:38.360 [pool-2-thread-2] DEBUG org.apache.http.impl.conn.PoolingHttpClientConnectionManager -- Connection request: [route: {s}->https://dev.scorecraze.app:443][total available: 0; route allocated: 0 of 5; total allocated: 0 of 10]
22:25:38.360 [pool-2-thread-2] DEBUG org.apache.http.impl.conn.PoolingHttpClientConnectionManager -- Connection leased: [id: 5][route: {s}->https://dev.scorecraze.app:443][total available: 0; route allocated: 1 of 5; total allocated: 1 of 10]
22:25:38.360 [pool-2-thread-2] DEBUG org.apache.http.impl.execchain.MainClientExec -- Opening connection {s}->https://dev.scorecraze.app:443
22:25:38.360 [pool-2-thread-2] DEBUG org.apache.http.impl.conn.DefaultHttpClientConnectionOperator -- Connecting to dev.scorecraze.app/13.233.24.118:443
22:25:38.360 [pool-2-thread-2] DEBUG org.apache.http.conn.ssl.SSLConnectionSocketFactory -- Connecting socket to dev.scorecraze.app/13.233.24.118:443 with timeout 30000
22:25:38.364 [pool-2-thread-1] INFO com.intuit.karate -- [print] {
  "message": "Cricket Teams retrieved successfully",
  "data": [
    {
      "_id": "689e013f4186572fdcb75bb7",
      "teamName": "Multan Sultans",
      "teamDisplayName": "MS",
      "teamAPIId": 1755185471222,
      "teamLogo": "",
      "teamJersey": "",
      "teamPlayers": [
        1755185495238
      ],
      "seriesAPIId": 0,
      "seriesName": "",
      "createdBy": "6892f46cb250a4f6b1bedce7",
      "__v": 0,
      "updatedAt": "2025-10-01T07:58:05.417Z"
    },
    {
      "_id": "68a2e6089f04af09b16428bf",
      "teamName": "Chennai Sharks",
      "teamDisplayName": "CS",
      "teamAPIId": 1755506184214,
      "teamLogo": "https://scorecraze-production.s3.ap-south-1.amazonaws.com/1755506184214-1755506184214",
      "teamJersey": "",
      "teamPlayers": [
        1755506303520,
        1755506339248,
        1755506400602,
        1755607009505
      ],
      "seriesAPIId": 0,
      "seriesName": "",
      "createdBy": "6892f46cb250a4f6b1bedce7",
      "__v": 0,
      "updatedAt": "2025-09-21T19:13:46.392Z"
    },
    {
      "_id": "68a2e6139f04af09b16428c3",
      "teamName": "MI Legends",
      "teamDisplayName": "ML",
      "teamAPIId": 1755506194965,
      "teamLogo": "https://scorecraze-production.s3.ap-south-1.amazonaws.com/1755506194965-1755506194965",
      "teamJersey": "",
      "teamPlayers": [
        1755506321960,
        1755506373062,
        1755506282024,
        1755506356475
      ],
      "seriesAPIId": 0,
      "seriesName": "",
      "createdBy": "6892f46cb250a4f6b1bedce7",
      "__v": 0
    },
    {
      "_id": "68a46ffcdf63f97065478322",
      "teamName": "Team Anbu",
      "teamDisplayName": "TA",
      "teamAPIId": 1755607036402,
      "teamLogo": "https://scorecraze-production.s3.ap-south-1.amazonaws.com/1755607286750-1755607036402",
      "teamJersey": "",
      "teamPlayers": [
        1755185495238,
        1755506400602,
        1755606930551,
        1755606962052,
        1755506303520,
        1755506356475,
        1755506373062
      ],
      "seriesAPIId": 0,
      "seriesName": "",
      "createdBy": "6892f46cb250a4f6b1bedce7",
      "__v": 0
    },
    {
      "_id": "68a4700bdf63f97065478326",
      "teamName": "Team Gethu",
      "teamDisplayName": "TG",
      "teamAPIId": 1755607051158,
      "teamLogo": "https://scorecraze-production.s3.ap-south-1.amazonaws.com/1755607294078-1755607051158",
      "teamJersey": "",
      "teamPlayers": [
        1755506339248,
        1755606894500,
        1755607009505,
        1755607010505,
        1755607184602,
        1755607171756,
        1755607158883
      ],
      "seriesAPIId": 0,
      "seriesName": "",
      "createdBy": "6892f46cb250a4f6b1bedce7",
      "__v": 0
    },
    {
      "_id": "68a8268764f279a0f106fc8f",
      "teamName": "Anish Dream",
      "teamDisplayName": "AD",
      "teamAPIId": 1755850375926,
      "teamLogo": "",
      "teamJersey": "",
      "teamPlayers": [
      ],
      "seriesAPIId": 0,
      "seriesName": "",
      "createdBy": "6892f46cb250a4f6b1bedce7",
      "__v": 0,
      "updatedAt": "2025-09-01T05:38:57.067Z"
    }
  ],
  "totalPage": 0,
  "currentPage": 1,
  "totalCount": 0
}
 
22:25:38.372 [pool-2-thread-3] INFO com.intuit.karate -- [print] {
  "message": "Fixtures Listed successfully",
  "data": [
    {
      "_id": "68c140dd7e0ef53ac006521e",
      "fixtureName": "Team Anbu vs Team Gethu",
      "fixtureAPIId": 1757495517508,
      "fixtureDisplayName": "TA vs TG",
      "fixtureStartDate": "2025-09-10T12:00:00.000Z",
      "fixtureStatus": "Upcoming",
      "fixtureStatusType": 1,
      "fixtureVenue": "Karappakkam",
      "fixtureType": "T20",
      "seriesName": "",
      "seriesShortName": "",
      "seriesAPIId": 0,
      "fixtureTeams": {
        "teamA": {
          "name": "Team Anbu",
          "shortName": "TA",
          "teamAPIId": 1755607036402,
          "logo": "https://scorecraze-production.s3.ap-south-1.amazonaws.com/1755607286750-1755607036402"
        },
        "teamB": {
          "name": "Team Gethu",
          "shortName": "TG",
          "teamAPIId": 1755607051158,
          "logo": "https://scorecraze-production.s3.ap-south-1.amazonaws.com/1755607294078-1755607051158"
        }
      },
      "lineupsOut": false,
      "enabledStatus": true,
      "isactive": true,
      "joinedUsers": [
      ],
      "toss": false,
      "isLocal": true,
      "createdBy": "6892f46cb250a4f6b1bedce7",
      "createdAt": "2025-09-10T09:11:57.513Z",
      "updatedAt": "2025-09-10T09:11:57.513Z",
      "__v": 0,
      "summary": ""
    }
  ],
  "totalPage": 1,
  "currentPage": 1
}
 
22:25:38.374 [pool-2-thread-1] INFO com.intuit.karate -- [print] 200 
22:25:38.374 [pool-2-thread-4] INFO com.intuit.karate -- [print] {
  "message": "Fixtures Listed successfully",
  "data": [
    {
      "_id": "68b15391593666342dd101c8",
      "fixtureName": "Chennai Sharks vs MI Legends",
      "fixtureAPIId": 1756451729991,
      "fixtureDisplayName": "CS vs ML",
      "fixtureStartDate": "2025-09-30T09:15:00.000Z",
      "fixtureStatus": "Completed",
      "fixtureStatusType": 3,
      "fixtureVenue": "Chennai ",
      "fixtureType": "OTHERS",
      "seriesName": "",
      "seriesShortName": "",
      "seriesAPIId": 0,
      "fixtureTeams": {
        "teamA": {
          "name": "Chennai Sharks",
          "shortName": "CS",
          "teamAPIId": 1755506184214,
          "logo": "https://scorecraze-production.s3.ap-south-1.amazonaws.com/1755506184214-1755506184214"
        },
        "teamB": {
          "name": "MI Legends",
          "shortName": "ML",
          "teamAPIId": 1755506194965,
          "logo": "https://scorecraze-production.s3.ap-south-1.amazonaws.com/1755506194965-1755506194965"
        }
      },
      "lineupsOut": true,
      "enabledStatus": true,
      "isactive": true,
      "joinedUsers": [
      ],
      "toss": true,
      "isLocal": true,
      "createdBy": "6892f46cb250a4f6b1bedce7",
      "__v": 0,
      "updatedAt": "2025-08-29T09:27:29.653Z",
      "summary": ""
    },
    {
      "_id": "68b15391593666342dd101b5",
      "fixtureName": "Chennai Sharks vs MI Legends",
      "fixtureAPIId": 1756451729400,
      "fixtureDisplayName": "CS vs ML",
      "fixtureStartDate": "2025-09-13T07:25:00.000Z",
      "fixtureStatus": "Completed",
      "fixtureStatusType": 3,
      "fixtureVenue": "Arena",
      "fixtureType": "T10",
      "seriesName": "",
      "seriesShortName": "",
      "seriesAPIId": 0,
      "fixtureTeams": {
        "teamA": {
          "name": "Chennai Sharks",
          "shortName": "CS",
          "teamAPIId": 1755506184214,
          "logo": "https://scorecraze-production.s3.ap-south-1.amazonaws.com/1755506184214-1755506184214"
        },
        "teamB": {
          "name": "MI Legends",
          "shortName": "ML",
          "teamAPIId": 1755506194965,
          "logo": "https://scorecraze-production.s3.ap-south-1.amazonaws.com/1755506194965-1755506194965"
        }
      },
      "lineupsOut": true,
      "enabledStatus": true,
      "isactive": true,
      "joinedUsers": [
      ],
      "toss": true,
      "isLocal": true,
      "createdBy": "6892f46cb250a4f6b1bedce7",
      "__v": 0,
      "updatedAt": "2025-09-02T13:31:34.538Z",
      "summary": "CS won by 11 runs"
    },
    {
      "_id": "68b93afefe9b55740eedff5e",
      "fixtureName": "Team Anbu vs Team Gethu",
      "fixtureAPIId": 1756969726043,
      "fixtureDisplayName": "TA vs TG",
      "fixtureStartDate": "2025-09-04T07:11:33.000Z",
      "fixtureStatus": "Completed",
      "fixtureStatusType": 3,
      "fixtureVenue": "Jodhpur",
      "fixtureType": "OTHERS",
      "seriesName": "",
      "seriesShortName": "",
      "seriesAPIId": 0,
      "fixtureTeams": {
        "teamA": {
          "name": "Team Anbu",
          "shortName": "TA",
          "teamAPIId": 1755607036402,
          "logo": "https://scorecraze-production.s3.ap-south-1.amazonaws.com/1755607286750-1755607036402"
        },
        "teamB": {
          "name": "Team Gethu",
          "shortName": "TG",
          "teamAPIId": 1755607051158,
          "logo": "https://scorecraze-production.s3.ap-south-1.amazonaws.com/1755607294078-1755607051158"
        }
      },
      "lineupsOut": true,
      "enabledStatus": true,
      "isactive": true,
      "joinedUsers": [
      ],
      "toss": true,
      "isLocal": true,
      "createdBy": "6892f46cb250a4f6b1bedce7",
      "createdAt": "2025-09-04T07:08:46.053Z",
      "updatedAt": "2025-09-04T11:44:58.067Z",
      "__v": 0,
      "summary": "TG won by 3 wickets"
    },
    {
      "_id": "68b7dbca322dac15a0989f57",
      "fixtureName": "Team Anbu vs Team Gethu",
      "fixtureAPIId": 1756879818214,
      "fixtureDisplayName": "TA vs TG",
      "fixtureStartDate": "2025-09-03T06:15:00.000Z",
      "fixtureStatus": "Completed",
      "fixtureStatusType": 3,
      "fixtureVenue": "Dubai",
      "fixtureType": "OTHERS",
      "seriesName": "",
      "seriesShortName": "",
      "seriesAPIId": 0,
      "fixtureTeams": {
        "teamA": {
          "name": "Team Anbu",
          "shortName": "TA",
          "teamAPIId": 1755607036402,
          "logo": "https://scorecraze-production.s3.ap-south-1.amazonaws.com/1755607286750-1755607036402"
        },
        "teamB": {
          "name": "Team Gethu",
          "shortName": "TG",
          "teamAPIId": 1755607051158,
          "logo": "https://scorecraze-production.s3.ap-south-1.amazonaws.com/1755607294078-1755607051158"
        }
      },
      "lineupsOut": true,
      "enabledStatus": true,
      "isactive": true,
      "joinedUsers": [
      ],
      "toss": true,
      "isLocal": true,
      "createdBy": "6892f46cb250a4f6b1bedce7",
      "createdAt": "2025-09-03T06:10:18.218Z",
      "updatedAt": "2025-09-03T10:37:22.614Z",
      "__v": 0,
      "summary": "TG won by 3 wickets"
    },
    {
      "_id": "68b680c9322dac15a0986022",
      "fixtureName": "Chennai Sharks vs MI Legends",
      "fixtureAPIId": 1756790985168,
      "fixtureDisplayName": "CS vs ML",
      "fixtureStartDate": "2025-09-02T05:30:00.000Z",
      "fixtureStatus": "Completed",
      "fixtureStatusType": 3,
      "fixtureVenue": "Karapakkam",
      "fixtureType": "OTHERS",
      "seriesName": "",
      "seriesShortName": "",
      "seriesAPIId": 0,
      "fixtureTeams": {
        "teamA": {
          "name": "Chennai Sharks",
          "shortName": "CS",
          "teamAPIId": 1755506184214,
          "logo": "https://scorecraze-production.s3.ap-south-1.amazonaws.com/1755506184214-1755506184214"
        },
        "teamB": {
          "name": "MI Legends",
          "shortName": "ML",
          "teamAPIId": 1755506194965,
          "logo": "https://scorecraze-production.s3.ap-south-1.amazonaws.com/1755506194965-1755506194965"
        }
      },
      "lineupsOut": true,
      "enabledStatus": true,
      "isactive": true,
      "joinedUsers": [
      ],
      "toss": true,
      "isLocal": true,
      "createdBy": "6892f46cb250a4f6b1bedce7",
      "createdAt": "2025-09-02T05:29:45.172Z",
      "updatedAt": "2025-09-02T05:46:38.803Z",
      "__v": 0,
      "summary": "ML won by 3 wickets"
    },
    {
      "_id": "68b59db4322dac15a0984be7",
      "fixtureName": "Team Anbu vs Team Gethu",
      "fixtureAPIId": 1756732852339,
      "fixtureDisplayName": "TA vs TG",
      "fixtureStartDate": "2025-09-01T13:25:00.000Z",
      "fixtureStatus": "Completed",
      "fixtureStatusType": 3,
      "fixtureVenue": "Chennai",
      "fixtureType": "OTHERS",
      "seriesName": "",
      "seriesShortName": "",
      "seriesAPIId": 0,
      "fixtureTeams": {
        "teamA": {
          "name": "Team Anbu",
          "shortName": "TA",
          "teamAPIId": 1755607036402,
          "logo": "https://scorecraze-production.s3.ap-south-1.amazonaws.com/1755607286750-1755607036402"
        },
        "teamB": {
          "name": "Team Gethu",
          "shortName": "TG",
          "teamAPIId": 1755607051158,
          "logo": "https://scorecraze-production.s3.ap-south-1.amazonaws.com/1755607294078-1755607051158"
        }
      },
      "lineupsOut": true,
      "enabledStatus": true,
      "isactive": true,
      "joinedUsers": [
      ],
      "toss": true,
      "isLocal": true,
      "createdBy": "6892f46cb250a4f6b1bedce7",
      "createdAt": "2025-09-01T13:20:52.350Z",
      "updatedAt": "2025-09-01T13:31:48.127Z",
      "__v": 0,
      "summary": "TG won by 3 wickets"
    },
    {
      "_id": "68b1470c1f1848b1e1c39fb9",
      "fixtureName": "Chennai Sharks vs MI Legends",
      "fixtureAPIId": 1756448524072,
      "fixtureDisplayName": "CS vs ML",
      "fixtureStartDate": "2025-08-29T18:30:00.000Z",
      "fixtureStatus": "Completed",
      "fixtureStatusType": 3,
      "fixtureVenue": "gunidy",
      "fixtureType": "OTHERS",
      "seriesName": "",
      "seriesShortName": "",
      "seriesAPIId": 0,
      "fixtureTeams": {
        "teamA": {
          "name": "Chennai Sharks",
          "shortName": "CS",
          "teamAPIId": 1755506184214,
          "logo": "https://scorecraze-production.s3.ap-south-1.amazonaws.com/1755506184214-1755506184214"
        },
        "teamB": {
          "name": "MI Legends",
          "shortName": "ML",
          "teamAPIId": 1755506194965,
          "logo": "https://scorecraze-production.s3.ap-south-1.amazonaws.com/1755506194965-1755506194965"
        }
      },
      "lineupsOut": true,
      "enabledStatus": true,
      "isactive": true,
      "joinedUsers": [
      ],
      "toss": true,
      "isLocal": true,
      "createdBy": "6892f46cb250a4f6b1bedce7",
      "__v": 0,
      "summary": "CS won by 3 wickets"
    },
    {
      "_id": "68b16a8e62a5a290f8b8a29f",
      "fixtureName": "Chennai Sharks vs MI Legends",
      "fixtureAPIId": 1756457614371,
      "fixtureDisplayName": "CS vs ML",
      "fixtureStartDate": "2025-08-29T18:30:00.000Z",
      "fixtureStatus": "Completed",
      "fixtureStatusType": 3,
      "fixtureVenue": "fgfg",
      "fixtureType": "OTHERS",
      "seriesName": "",
      "seriesShortName": "",
      "seriesAPIId": 0,
      "fixtureTeams": {
        "teamA": {
          "name": "Chennai Sharks",
          "shortName": "CS",
          "teamAPIId": 1755506184214,
          "logo": "https://scorecraze-production.s3.ap-south-1.amazonaws.com/1755506184214-1755506184214"
        },
        "teamB": {
          "name": "MI Legends",
          "shortName": "ML",
          "teamAPIId": 1755506194965,
          "logo": "https://scorecraze-production.s3.ap-south-1.amazonaws.com/1755506194965-1755506194965"
        }
      },
      "lineupsOut": true,
      "enabledStatus": true,
      "isactive": true,
      "joinedUsers": [
      ],
      "toss": true,
      "isLocal": true,
      "createdBy": "6892f46cb250a4f6b1bedce7",
      "createdAt": "2025-08-29T08:53:34.384Z",
      "updatedAt": "2025-09-05T07:20:17.122Z",
      "__v": 0,
      "summary": "ML won by 0 wickets"
    },
    {
      "_id": "68b132e2593666342dd0f44c",
      "fixtureName": "Chennai Sharks vs MI Legends",
      "fixtureAPIId": 1756443362502,
      "fixtureDisplayName": "CS vs ML",
      "fixtureStartDate": "2025-08-29T18:30:00.000Z",
      "fixtureStatus": "Completed",
      "fixtureStatusType": 3,
      "fixtureVenue": "pl",
      "fixtureType": "OTHERS",
      "seriesName": "",
      "seriesShortName": "",
      "seriesAPIId": 0,
      "fixtureTeams": {
        "teamA": {
          "name": "Chennai Sharks",
          "shortName": "CS",
          "teamAPIId": 1755506184214,
          "logo": "https://scorecraze-production.s3.ap-south-1.amazonaws.com/1755506184214-1755506184214"
        },
        "teamB": {
          "name": "MI Legends",
          "shortName": "ML",
          "teamAPIId": 1755506194965,
          "logo": "https://scorecraze-production.s3.ap-south-1.amazonaws.com/1755506194965-1755506194965"
        }
      },
      "lineupsOut": true,
      "enabledStatus": true,
      "isactive": true,
      "joinedUsers": [
      ],
      "toss": true,
      "isLocal": true,
      "createdBy": "6892f46cb250a4f6b1bedce7",
      "__v": 0,
      "summary": ""
    },
    {
      "_id": "68b141d1593666342dd0f978",
      "fixtureName": "Chennai Sharks vs MI Legends",
      "fixtureAPIId": 1756447185095,
      "fixtureDisplayName": "CS vs ML",
      "fixtureStartDate": "2025-08-29T17:59:00.000Z",
      "fixtureStatus": "Completed",
      "fixtureStatusType": 3,
      "fixtureVenue": "guk",
      "fixtureType": "OTHERS",
      "seriesName": "",
      "seriesShortName": "",
      "seriesAPIId": 0,
      "fixtureTeams": {
        "teamA": {
          "name": "Chennai Sharks",
          "shortName": "CS",
          "teamAPIId": 1755506184214,
          "logo": "https://scorecraze-production.s3.ap-south-1.amazonaws.com/1755506184214-1755506184214"
        },
        "teamB": {
          "name": "MI Legends",
          "shortName": "ML",
          "teamAPIId": 1755506194965,
          "logo": "https://scorecraze-production.s3.ap-south-1.amazonaws.com/1755506194965-1755506194965"
        }
      },
      "lineupsOut": true,
      "enabledStatus": true,
      "isactive": true,
      "joinedUsers": [
      ],
      "toss": true,
      "isLocal": true,
      "createdBy": "6892f46cb250a4f6b1bedce7",
      "__v": 0,
      "summary": ""
    }
  ],
  "totalPage": 3,
  "currentPage": 1
}
 
22:25:38.410 [pool-2-thread-2] DEBUG org.apache.http.conn.ssl.SSLConnectionSocketFactory -- Enabled protocols: [TLSv1.3, TLSv1.2]
22:25:38.410 [pool-2-thread-2] DEBUG org.apache.http.conn.ssl.SSLConnectionSocketFactory -- Enabled cipher suites:[TLS_AES_256_GCM_SHA384, TLS_AES_128_GCM_SHA256, TLS_CHACHA20_POLY1305_SHA256, TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384, TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256, TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256, TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384, TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256, TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256, TLS_DHE_RSA_WITH_AES_256_GCM_SHA384, TLS_DHE_RSA_WITH_CHACHA20_POLY1305_SHA256, TLS_DHE_DSS_WITH_AES_256_GCM_SHA384, TLS_DHE_RSA_WITH_AES_128_GCM_SHA256, TLS_DHE_DSS_WITH_AES_128_GCM_SHA256, TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA384, TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384, TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256, TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256, TLS_DHE_RSA_WITH_AES_256_CBC_SHA256, TLS_DHE_DSS_WITH_AES_256_CBC_SHA256, TLS_DHE_RSA_WITH_AES_128_CBC_SHA256, TLS_DHE_DSS_WITH_AES_128_CBC_SHA256, TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA, TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA, TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA, TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA, TLS_DHE_RSA_WITH_AES_256_CBC_SHA, TLS_DHE_DSS_WITH_AES_256_CBC_SHA, TLS_DHE_RSA_WITH_AES_128_CBC_SHA, TLS_DHE_DSS_WITH_AES_128_CBC_SHA, TLS_RSA_WITH_AES_256_GCM_SHA384, TLS_RSA_WITH_AES_128_GCM_SHA256, TLS_RSA_WITH_AES_256_CBC_SHA256, TLS_RSA_WITH_AES_128_CBC_SHA256, TLS_RSA_WITH_AES_256_CBC_SHA, TLS_RSA_WITH_AES_128_CBC_SHA, TLS_EMPTY_RENEGOTIATION_INFO_SCSV]
22:25:38.410 [pool-2-thread-2] DEBUG org.apache.http.conn.ssl.SSLConnectionSocketFactory -- Starting handshake
22:25:38.469 [pool-2-thread-2] DEBUG org.apache.http.conn.ssl.SSLConnectionSocketFactory -- Secure session established
22:25:38.469 [pool-2-thread-2] DEBUG org.apache.http.conn.ssl.SSLConnectionSocketFactory --  negotiated protocol: TLSv1.3
22:25:38.469 [pool-2-thread-2] DEBUG org.apache.http.conn.ssl.SSLConnectionSocketFactory --  negotiated cipher suite: TLS_AES_256_GCM_SHA384
22:25:38.469 [pool-2-thread-2] DEBUG org.apache.http.conn.ssl.SSLConnectionSocketFactory --  peer principal: CN=dev.scorecraze.app
22:25:38.469 [pool-2-thread-2] DEBUG org.apache.http.conn.ssl.SSLConnectionSocketFactory --  peer alternative names: [dev.scorecraze.app]
22:25:38.469 [pool-2-thread-2] DEBUG org.apache.http.conn.ssl.SSLConnectionSocketFactory --  issuer principal: CN=E8, O=Let's Encrypt, C=US
22:25:38.469 [pool-2-thread-2] DEBUG org.apache.http.impl.conn.DefaultHttpClientConnectionOperator -- Connection established 172.20.10.11:49679<->13.233.24.118:443
22:25:38.469 [pool-2-thread-2] DEBUG org.apache.http.impl.conn.DefaultManagedHttpClientConnection -- http-outgoing-5: set socket timeout to 30000
22:25:38.470 [pool-2-thread-2] DEBUG org.apache.http.impl.execchain.MainClientExec -- Executing request POST /cricket/fixtures?page=6 HTTP/1.1
22:25:38.470 [pool-2-thread-2] DEBUG org.apache.http.impl.execchain.MainClientExec -- Target auth state: UNCHALLENGED
22:25:38.470 [pool-2-thread-2] DEBUG org.apache.http.impl.execchain.MainClientExec -- Proxy auth state: UNCHALLENGED
22:25:38.470 [pool-2-thread-2] DEBUG org.apache.http.headers -- http-outgoing-5 >> POST /cricket/fixtures?page=6 HTTP/1.1
22:25:38.470 [pool-2-thread-2] DEBUG org.apache.http.headers -- http-outgoing-5 >> Content-Type: application/json; charset=UTF-8
22:25:38.470 [pool-2-thread-2] DEBUG org.apache.http.headers -- http-outgoing-5 >> Content-Length: 51
22:25:38.470 [pool-2-thread-2] DEBUG org.apache.http.headers -- http-outgoing-5 >> Host: dev.scorecraze.app
22:25:38.470 [pool-2-thread-2] DEBUG org.apache.http.headers -- http-outgoing-5 >> Connection: Keep-Alive
22:25:38.470 [pool-2-thread-2] DEBUG org.apache.http.headers -- http-outgoing-5 >> User-Agent: Apache-HttpClient/4.5.14 (Java/11.0.27)
22:25:38.470 [pool-2-thread-2] DEBUG org.apache.http.headers -- http-outgoing-5 >> Accept-Encoding: gzip,deflate
22:25:38.471 [pool-2-thread-2] DEBUG org.apache.http.wire -- http-outgoing-5 >> "POST /cricket/fixtures?page=6 HTTP/1.1[\r][\n]"
22:25:38.471 [pool-2-thread-2] DEBUG org.apache.http.wire -- http-outgoing-5 >> "Content-Type: application/json; charset=UTF-8[\r][\n]"
22:25:38.471 [pool-2-thread-2] DEBUG org.apache.http.wire -- http-outgoing-5 >> "Content-Length: 51[\r][\n]"
22:25:38.471 [pool-2-thread-2] DEBUG org.apache.http.wire -- http-outgoing-5 >> "Host: dev.scorecraze.app[\r][\n]"
22:25:38.471 [pool-2-thread-2] DEBUG org.apache.http.wire -- http-outgoing-5 >> "Connection: Keep-Alive[\r][\n]"
22:25:38.471 [pool-2-thread-2] DEBUG org.apache.http.wire -- http-outgoing-5 >> "User-Agent: Apache-HttpClient/4.5.14 (Java/11.0.27)[\r][\n]"
22:25:38.471 [pool-2-thread-2] DEBUG org.apache.http.wire -- http-outgoing-5 >> "Accept-Encoding: gzip,deflate[\r][\n]"
22:25:38.471 [pool-2-thread-2] DEBUG org.apache.http.wire -- http-outgoing-5 >> "[\r][\n]"
22:25:38.471 [pool-2-thread-2] DEBUG org.apache.http.wire -- http-outgoing-5 >> "{"filter":{"seriesAPIId":0,"fixtureStatus":"Live"}}"
22:25:38.610 [pool-3-thread-1] DEBUG org.thymeleaf.TemplateEngine -- [THYMELEAF] INITIALIZING TEMPLATE ENGINE
22:25:38.787 [pool-2-thread-2] DEBUG org.apache.http.wire -- http-outgoing-5 << "HTTP/1.1 200 OK[\r][\n]"
22:25:38.787 [pool-2-thread-2] DEBUG org.apache.http.wire -- http-outgoing-5 << "Server: nginx/1.22.1[\r][\n]"
22:25:38.787 [pool-2-thread-2] DEBUG org.apache.http.wire -- http-outgoing-5 << "Date: Sat, 04 Oct 2025 16:55:37 GMT[\r][\n]"
22:25:38.787 [pool-2-thread-2] DEBUG org.apache.http.wire -- http-outgoing-5 << "Content-Type: application/json; charset=utf-8[\r][\n]"
22:25:38.787 [pool-2-thread-2] DEBUG org.apache.http.wire -- http-outgoing-5 << "Content-Length: 2608[\r][\n]"
22:25:38.787 [pool-2-thread-2] DEBUG org.apache.http.wire -- http-outgoing-5 << "Connection: keep-alive[\r][\n]"
22:25:38.787 [pool-2-thread-2] DEBUG org.apache.http.wire -- http-outgoing-5 << "X-Powered-By: Express[\r][\n]"
22:25:38.787 [pool-2-thread-2] DEBUG org.apache.http.wire -- http-outgoing-5 << "Access-Control-Allow-Origin: *[\r][\n]"
22:25:38.787 [pool-2-thread-2] DEBUG org.apache.http.wire -- http-outgoing-5 << "ETag: W/"a30-UHv6W107xzBNUfRdfJGEJfWHkmg"[\r][\n]"
22:25:38.787 [pool-2-thread-2] DEBUG org.apache.http.wire -- http-outgoing-5 << "[\r][\n]"
22:25:38.787 [pool-2-thread-2] DEBUG org.apache.http.wire -- http-outgoing-5 << "{"message":"Fixtures Listed successfully","data":[{"_id":"68a42727df63f97065477bf9","fixtureName":"LCU vs Marvel","fixtureAPIId":1755588391718,"fixtureDisplayName":"LCD vs ML","fixtureStartDate":"2025-08-19T08:26:22.000Z","fixtureStatus":"Live","fixtureStatusType":2,"fixtureVenue":"Pondicherry","fixtureType":"OTHERS","seriesName":"","seriesShortName":"","seriesAPIId":0,"fixtureTeams":{"teamA":{"name":"LCU","shortName":"LCD","teamAPIId":1755180914595,"logo":"https://scorecraze-production.s3.ap-south-1.amazonaws.com/1755180914595-1755180914595"},"teamB":{"name":"Marvel","shortName":"ML","teamAPIId":1755180942974,"logo":"https://scorecraze-production.s3.ap-south-1.amazonaws.com/1755180942974-1755180942974"}},"lineupsOut":true,"enabledStatus":true,"isactive":true,"joinedUsers":[],"toss":true,"isLocal":true,"createdBy":"689319ded6349d73f8ae2e93","__v":0,"summary":"ML won the toss and choose to bowl"},{"_id":"689ee02c7fe9653b333ef18d","fixtureName":"Sciflare Sharks vs Adengappa","fixtureAPIId":1755242540621,"fixtureDisplayName":"Shark vs 8Peru","fixtureStartDate":"2025-08-15T07:25:00.000Z","fixtureStatus":"Live","fixtureStatusType":2,"fixtureVenue":"Arena","fixtureType":"OTHERS","seriesName":"","seriesShortName":"","seriesAPIId":0,"fixtureTeams":{"teamA":{"name":"Sciflare Sharks","shortName":"Shark","teamAPIId":1755175168751,"logo":"https://scorecraze-production.s3.ap-south-1.amazonaws.com/1755175168751-1755175168751"},"teamB":{"name":"Adengappa","shortName":"8Peru","teamAPIId":1755175182342,"logo":"https://scorecraze-production.s3.ap-south-1.amazonaws.com/1755175182342-1755175182342"}},"lineupsOut":true,"enabledStatus":true,"isactive":true,"joinedUsers":[],"toss":true,"isLocal":true,"createdBy":"688379f60b12077007261044","__v":0,"updatedAt":"2025-09-15T13:02:44.335Z","summary":"Shark won the toss and choose to bat"},{"_id":"689ed5a54186572fdcb75cf0","fixtureName":"India vs Australia","fixtureAPIId":1755239845681,"fixtureDisplayName":"Ind vs AUS","fixtureStartDate":"2025-08-15T06:38:00.000Z","fixtureStatus":"Live","fixtureStatusType":2,"fixtureVenue":"Chr6","fixtureType":"OTHERS","seriesName":"","seriesShortName":"","seriesAPIId":0,"fixtureTeams":{"teamA":{"name":"India","shortName":"Ind","teamAPIId":1755239728500,"logo":""},"teamB":{"name":"Australia","shortName":"AUS","teamAPIId":1755239740170,"logo":""}},"lineupsOut":true,"enabledStatus":true,"isactive":true,"joinedUsers":[],"toss":true,"isLocal":true,"createdBy":"6891a17ed78c2da4a432f6b7","__v":0,"updatedAt":"2025-09-08T06:42:40.696Z","summary":"Ind won the toss and choose to bowl"}],"totalPage":6,"currentPage":6}"
22:25:38.787 [pool-2-thread-2] DEBUG org.apache.http.headers -- http-outgoing-5 << HTTP/1.1 200 OK
22:25:38.787 [pool-2-thread-2] DEBUG org.apache.http.headers -- http-outgoing-5 << Server: nginx/1.22.1
22:25:38.787 [pool-2-thread-2] DEBUG org.apache.http.headers -- http-outgoing-5 << Date: Sat, 04 Oct 2025 16:55:37 GMT
22:25:38.787 [pool-2-thread-2] DEBUG org.apache.http.headers -- http-outgoing-5 << Content-Type: application/json; charset=utf-8
22:25:38.787 [pool-2-thread-2] DEBUG org.apache.http.headers -- http-outgoing-5 << Content-Length: 2608
22:25:38.787 [pool-2-thread-2] DEBUG org.apache.http.headers -- http-outgoing-5 << Connection: keep-alive
22:25:38.787 [pool-2-thread-2] DEBUG org.apache.http.headers -- http-outgoing-5 << X-Powered-By: Express
22:25:38.787 [pool-2-thread-2] DEBUG org.apache.http.headers -- http-outgoing-5 << Access-Control-Allow-Origin: *
22:25:38.787 [pool-2-thread-2] DEBUG org.apache.http.headers -- http-outgoing-5 << ETag: W/"a30-UHv6W107xzBNUfRdfJGEJfWHkmg"
22:25:38.787 [pool-2-thread-2] DEBUG org.apache.http.impl.execchain.MainClientExec -- Connection can be kept alive indefinitely
22:25:38.787 [pool-2-thread-2] DEBUG org.apache.http.impl.conn.PoolingHttpClientConnectionManager -- Connection [id: 5][route: {s}->https://dev.scorecraze.app:443] can be kept alive indefinitely
22:25:38.787 [pool-2-thread-2] DEBUG org.apache.http.impl.conn.DefaultManagedHttpClientConnection -- http-outgoing-5: set socket timeout to 0
22:25:38.787 [pool-2-thread-2] DEBUG org.apache.http.impl.conn.PoolingHttpClientConnectionManager -- Connection released: [id: 5][route: {s}->https://dev.scorecraze.app:443][total available: 1; route allocated: 1 of 5; total allocated: 1 of 10]
22:25:38.787 [pool-2-thread-2] DEBUG org.apache.http.impl.conn.PoolingHttpClientConnectionManager -- Connection manager is shutting down
22:25:38.787 [pool-2-thread-2] DEBUG org.apache.http.impl.conn.DefaultManagedHttpClientConnection -- http-outgoing-5: Close connection
22:25:38.787 [pool-2-thread-2] DEBUG org.apache.http.impl.conn.PoolingHttpClientConnectionManager -- Connection manager shut down
22:25:38.787 [pool-2-thread-2] DEBUG com.intuit.karate -- response time in milliseconds: 427
1 < 200
1 < Server: nginx/1.22.1
1 < Date: Sat, 04 Oct 2025 16:55:37 GMT
1 < Content-Type: application/json; charset=utf-8
1 < Content-Length: 2608
1 < Connection: keep-alive
1 < X-Powered-By: Express
1 < Access-Control-Allow-Origin: *
1 < ETag: W/"a30-UHv6W107xzBNUfRdfJGEJfWHkmg"
{"message":"Fixtures Listed successfully","data":[{"_id":"68a42727df63f97065477bf9","fixtureName":"LCU vs Marvel","fixtureAPIId":1755588391718,"fixtureDisplayName":"LCD vs ML","fixtureStartDate":"2025-08-19T08:26:22.000Z","fixtureStatus":"Live","fixtureStatusType":2,"fixtureVenue":"Pondicherry","fixtureType":"OTHERS","seriesName":"","seriesShortName":"","seriesAPIId":0,"fixtureTeams":{"teamA":{"name":"LCU","shortName":"LCD","teamAPIId":1755180914595,"logo":"https://scorecraze-production.s3.ap-south-1.amazonaws.com/1755180914595-1755180914595"},"teamB":{"name":"Marvel","shortName":"ML","teamAPIId":1755180942974,"logo":"https://scorecraze-production.s3.ap-south-1.amazonaws.com/1755180942974-1755180942974"}},"lineupsOut":true,"enabledStatus":true,"isactive":true,"joinedUsers":[],"toss":true,"isLocal":true,"createdBy":"689319ded6349d73f8ae2e93","__v":0,"summary":"ML won the toss and choose to bowl"},{"_id":"689ee02c7fe9653b333ef18d","fixtureName":"Sciflare Sharks vs Adengappa","fixtureAPIId":1755242540621,"fixtureDisplayName":"Shark vs 8Peru","fixtureStartDate":"2025-08-15T07:25:00.000Z","fixtureStatus":"Live","fixtureStatusType":2,"fixtureVenue":"Arena","fixtureType":"OTHERS","seriesName":"","seriesShortName":"","seriesAPIId":0,"fixtureTeams":{"teamA":{"name":"Sciflare Sharks","shortName":"Shark","teamAPIId":1755175168751,"logo":"https://scorecraze-production.s3.ap-south-1.amazonaws.com/1755175168751-1755175168751"},"teamB":{"name":"Adengappa","shortName":"8Peru","teamAPIId":1755175182342,"logo":"https://scorecraze-production.s3.ap-south-1.amazonaws.com/1755175182342-1755175182342"}},"lineupsOut":true,"enabledStatus":true,"isactive":true,"joinedUsers":[],"toss":true,"isLocal":true,"createdBy":"688379f60b12077007261044","__v":0,"updatedAt":"2025-09-15T13:02:44.335Z","summary":"Shark won the toss and choose to bat"},{"_id":"689ed5a54186572fdcb75cf0","fixtureName":"India vs Australia","fixtureAPIId":1755239845681,"fixtureDisplayName":"Ind vs AUS","fixtureStartDate":"2025-08-15T06:38:00.000Z","fixtureStatus":"Live","fixtureStatusType":2,"fixtureVenue":"Chr6","fixtureType":"OTHERS","seriesName":"","seriesShortName":"","seriesAPIId":0,"fixtureTeams":{"teamA":{"name":"India","shortName":"Ind","teamAPIId":1755239728500,"logo":""},"teamB":{"name":"Australia","shortName":"AUS","teamAPIId":1755239740170,"logo":""}},"lineupsOut":true,"enabledStatus":true,"isactive":true,"joinedUsers":[],"toss":true,"isLocal":true,"createdBy":"6891a17ed78c2da4a432f6b7","__v":0,"updatedAt":"2025-09-08T06:42:40.696Z","summary":"Ind won the toss and choose to bowl"}],"totalPage":6,"currentPage":6}

22:25:38.789 [pool-2-thread-2] INFO com.intuit.karate -- [print] {
  "message": "Fixtures Listed successfully",
  "data": [
    {
      "_id": "68a42727df63f97065477bf9",
      "fixtureName": "LCU vs Marvel",
      "fixtureAPIId": 1755588391718,
      "fixtureDisplayName": "LCD vs ML",
      "fixtureStartDate": "2025-08-19T08:26:22.000Z",
      "fixtureStatus": "Live",
      "fixtureStatusType": 2,
      "fixtureVenue": "Pondicherry",
      "fixtureType": "OTHERS",
      "seriesName": "",
      "seriesShortName": "",
      "seriesAPIId": 0,
      "fixtureTeams": {
        "teamA": {
          "name": "LCU",
          "shortName": "LCD",
          "teamAPIId": 1755180914595,
          "logo": "https://scorecraze-production.s3.ap-south-1.amazonaws.com/1755180914595-1755180914595"
        },
        "teamB": {
          "name": "Marvel",
          "shortName": "ML",
          "teamAPIId": 1755180942974,
          "logo": "https://scorecraze-production.s3.ap-south-1.amazonaws.com/1755180942974-1755180942974"
        }
      },
      "lineupsOut": true,
      "enabledStatus": true,
      "isactive": true,
      "joinedUsers": [
      ],
      "toss": true,
      "isLocal": true,
      "createdBy": "689319ded6349d73f8ae2e93",
      "__v": 0,
      "summary": "ML won the toss and choose to bowl"
    },
    {
      "_id": "689ee02c7fe9653b333ef18d",
      "fixtureName": "Sciflare Sharks vs Adengappa",
      "fixtureAPIId": 1755242540621,
      "fixtureDisplayName": "Shark vs 8Peru",
      "fixtureStartDate": "2025-08-15T07:25:00.000Z",
      "fixtureStatus": "Live",
      "fixtureStatusType": 2,
      "fixtureVenue": "Arena",
      "fixtureType": "OTHERS",
      "seriesName": "",
      "seriesShortName": "",
      "seriesAPIId": 0,
      "fixtureTeams": {
        "teamA": {
          "name": "Sciflare Sharks",
          "shortName": "Shark",
          "teamAPIId": 1755175168751,
          "logo": "https://scorecraze-production.s3.ap-south-1.amazonaws.com/1755175168751-1755175168751"
        },
        "teamB": {
          "name": "Adengappa",
          "shortName": "8Peru",
          "teamAPIId": 1755175182342,
          "logo": "https://scorecraze-production.s3.ap-south-1.amazonaws.com/1755175182342-1755175182342"
        }
      },
      "lineupsOut": true,
      "enabledStatus": true,
      "isactive": true,
      "joinedUsers": [
      ],
      "toss": true,
      "isLocal": true,
      "createdBy": "688379f60b12077007261044",
      "__v": 0,
      "updatedAt": "2025-09-15T13:02:44.335Z",
      "summary": "Shark won the toss and choose to bat"
    },
    {
      "_id": "689ed5a54186572fdcb75cf0",
      "fixtureName": "India vs Australia",
      "fixtureAPIId": 1755239845681,
      "fixtureDisplayName": "Ind vs AUS",
      "fixtureStartDate": "2025-08-15T06:38:00.000Z",
      "fixtureStatus": "Live",
      "fixtureStatusType": 2,
      "fixtureVenue": "Chr6",
      "fixtureType": "OTHERS",
      "seriesName": "",
      "seriesShortName": "",
      "seriesAPIId": 0,
      "fixtureTeams": {
        "teamA": {
          "name": "India",
          "shortName": "Ind",
          "teamAPIId": 1755239728500,
          "logo": ""
        },
        "teamB": {
          "name": "Australia",
          "shortName": "AUS",
          "teamAPIId": 1755239740170,
          "logo": ""
        }
      },
      "lineupsOut": true,
      "enabledStatus": true,
      "isactive": true,
      "joinedUsers": [
      ],
      "toss": true,
      "isLocal": true,
      "createdBy": "6891a17ed78c2da4a432f6b7",
      "__v": 0,
      "updatedAt": "2025-09-08T06:42:40.696Z",
      "summary": "Ind won the toss and choose to bowl"
    }
  ],
  "totalPage": 6,
  "currentPage": 6
}
 
22:25:39.111 [pool-3-thread-1] DEBUG org.thymeleaf.TemplateEngine.CONFIG -- Initializing Thymeleaf Template engine configuration...
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Thymeleaf version: 3.1.2.RELEASE (built 2023-07-30T19:25:50+0000)
[THYMELEAF] * Cache Manager implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template resolvers:
[THYMELEAF]     * [1] com.intuit.karate.template.ResourceHtmlTemplateResolver
[THYMELEAF] * Message resolvers:
[THYMELEAF]     * org.thymeleaf.messageresolver.StandardMessageResolver
[THYMELEAF] * Link builders:
[THYMELEAF]     * org.thymeleaf.linkbuilder.StandardLinkBuilder
[THYMELEAF] * Dialect [1 of 2]: Standard (com.intuit.karate.template.KarateStandardDialect)
[THYMELEAF]     * Prefix: "th"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include,data-th-include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert,data-th-insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace,data-th-replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each,data-th-each}] [200]: com.intuit.karate.template.KarateEachTagProcessor
[THYMELEAF]             * [* {th:switch,data-th-switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case,data-th-case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if,data-th-if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless,data-th-unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object,data-th-object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with,data-th-with}] [600]: com.intuit.karate.template.KarateWithTagProcessor
[THYMELEAF]             * [* {th:attr,data-th-attr}] [700]: com.intuit.karate.template.KarateAttributeTagProcessor.KarateAttrTagProcessor
[THYMELEAF]             * [* {th:attrappend,data-th-attrappend}] [900]: com.intuit.karate.template.KarateAttributeTagProcessor.KarateAttrappendTagProcessor
[THYMELEAF]             * [* {th:attrprepend,data-th-attrprepend}] [900]: com.intuit.karate.template.KarateAttributeTagProcessor.KarateAttrprependTagProcessor
[THYMELEAF]             * [* {th:alt-title,data-th-alt-title}] [990]: org.thymeleaf.standard.processor.StandardAltTitleTagProcessor
[THYMELEAF]             * [* {th:lang-xmllang,data-th-lang-xmllang}] [990]: org.thymeleaf.standard.processor.StandardLangXmlLangTagProcessor
[THYMELEAF]             * [* {th:action,data-th-action}] [1000]: org.thymeleaf.standard.processor.StandardActionTagProcessor
[THYMELEAF]             * [* {th:autofocus,data-th-autofocus}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:scoped,data-th-scoped}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:reversed,data-th-reversed}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:required,data-th-required}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:ismap,data-th-ismap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:disabled,data-th-disabled}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:checked,data-th-checked}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:declare,data-th-declare}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:defer,data-th-defer}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autoplay,data-th-autoplay}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:loop,data-th-loop}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:novalidate,data-th-novalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:readonly,data-th-readonly}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:multiple,data-th-multiple}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:seamless,data-th-seamless}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:async,data-th-async}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:formnovalidate,data-th-formnovalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:nowrap,data-th-nowrap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:controls,data-th-controls}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:open,data-th-open}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:hidden,data-th-hidden}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:default,data-th-default}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:selected,data-th-selected}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:pubdate,data-th-pubdate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:onerror,data-th-onerror}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ononline,data-th-ononline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragleave,data-th-ondragleave}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragstart,data-th-ondragstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeking,data-th-onseeking}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadstart,data-th-onloadstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeyup,data-th-onkeyup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onredo,data-th-onredo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeked,data-th-onseeked}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onwaiting,data-th-onwaiting}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onprogress,data-th-onprogress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadedmetadata,data-th-onloadedmetadata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninvalid,data-th-oninvalid}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onundo,data-th-onundo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragenter,data-th-ondragenter}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplaythrough,data-th-oncanplaythrough}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreset,data-th-onreset}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplay,data-th-oncanplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeypress,data-th-onkeypress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragend,data-th-ondragend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onload,data-th-onload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncontextmenu,data-th-oncontextmenu}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onchange,data-th-onchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpause,data-th-onpause}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplaying,data-th-onplaying}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onabort,data-th-onabort}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseover,data-th-onmouseover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninput,data-th-oninput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onforminput,data-th-onforminput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondblclick,data-th-ondblclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onclick,data-th-onclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeydown,data-th-onkeydown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onselect,data-th-onselect}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragover,data-th-ondragover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onoffline,data-th-onoffline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmessage,data-th-onmessage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onfocus,data-th-onfocus}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseup,data-th-onmouseup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrag,data-th-ondrag}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeprint,data-th-onbeforeprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreadystatechange,data-th-onreadystatechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onvolumechange,data-th-onvolumechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onformchange,data-th-onformchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onunload,data-th-onunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onresize,data-th-onresize}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstorage,data-th-onstorage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onratechange,data-th-onratechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onblur,data-th-onblur}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousewheel,data-th-onmousewheel}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstalled,data-th-onstalled}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onscroll,data-th-onscroll}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onshow,data-th-onshow}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousedown,data-th-onmousedown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onemptied,data-th-onemptied}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onended,data-th-onended}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpopstate,data-th-onpopstate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeunload,data-th-onbeforeunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplay,data-th-onplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseout,data-th-onmouseout}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrop,data-th-ondrop}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadeddata,data-th-onloadeddata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsuspend,data-th-onsuspend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsubmit,data-th-onsubmit}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onhashchange,data-th-onhashchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ontimeupdate,data-th-ontimeupdate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondurationchange,data-th-ondurationchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousemove,data-th-onmousemove}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onafterprint,data-th-onafterprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:href,data-th-href}] [1000]: org.thymeleaf.standard.processor.StandardHrefTagProcessor
[THYMELEAF]             * [* {th:inline,data-th-inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineHTMLTagProcessor
[THYMELEAF]             * [* {th:method,data-th-method}] [1000]: org.thymeleaf.standard.processor.StandardMethodTagProcessor
[THYMELEAF]             * [* {th:type,data-th-type}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:name,data-th-name}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rev,data-th-rev}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rules,data-th-rules}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:radiogroup,data-th-radiogroup}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formaction,data-th-formaction}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellpadding,data-th-cellpadding}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:longdesc,data-th-longdesc}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:standby,data-th-standby}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:pattern,data-th-pattern}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:autocomplete,data-th-autocomplete}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codebase,data-th-codebase}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sizes,data-th-sizes}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:data,data-th-data}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:list,data-th-list}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginwidth,data-th-marginwidth}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:lang,data-th-lang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:size,data-th-size}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:align,data-th-align}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accesskey,data-th-accesskey}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:width,data-th-width}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formmethod,data-th-formmethod}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:srclang,data-th-srclang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:title,data-th-title}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cite,data-th-cite}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:style,data-th-style}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellspacing,data-th-cellspacing}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:class,data-th-class}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:span,data-th-span}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rowspan,data-th-rowspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:keytype,data-th-keytype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:media,data-th-media}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:tabindex,data-th-tabindex}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:bgcolor,data-th-bgcolor}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:border,data-th-border}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:summary,data-th-summary}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:step,data-th-step}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frameborder,data-th-frameborder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept-charset,data-th-accept-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:alt,data-th-alt}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept,data-th-accept}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:target,data-th-target}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:audio,data-th-audio}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:kind,data-th-kind}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:id,data-th-id}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:background,data-th-background}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:archive,data-th-archive}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formenctype,data-th-formenctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:datetime,data-th-datetime}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rows,data-th-rows}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:headers,data-th-headers}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:poster,data-th-poster}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sandbox,data-th-sandbox}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:draggable,data-th-draggable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:axis,data-th-axis}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formtarget,data-th-formtarget}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cols,data-th-cols}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scrolling,data-th-scrolling}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rel,data-th-rel}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:start,data-th-start}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scope,data-th-scope}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contenteditable,data-th-contenteditable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:classid,data-th-classid}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:label,data-th-label}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:spellcheck,data-th-spellcheck}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:compact,data-th-compact}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:content,data-th-content}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frame,data-th-frame}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:valuetype,data-th-valuetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:optimum,data-th-optimum}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hspace,data-th-hspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:height,data-th-height}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contextmenu,data-th-contextmenu}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:manifest,data-th-manifest}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:vspace,data-th-vspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:abbr,data-th-abbr}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:form,data-th-form}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hreflang,data-th-hreflang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:low,data-th-low}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginheight,data-th-marginheight}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:high,data-th-high}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:preload,data-th-preload}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:placeholder,data-th-placeholder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:colspan,data-th-colspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:max,data-th-max}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:http-equiv,data-th-http-equiv}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dir,data-th-dir}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codetype,data-th-codetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:wrap,data-th-wrap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:challenge,data-th-challenge}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dropzone,data-th-dropzone}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:icon,data-th-icon}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scheme,data-th-scheme}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:for,data-th-for}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:charset,data-th-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:min,data-th-min}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:maxlength,data-th-maxlength}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:usemap,data-th-usemap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:enctype,data-th-enctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:src,data-th-src}] [1000]: org.thymeleaf.standard.processor.StandardSrcTagProcessor
[THYMELEAF]             * [* {th:value,data-th-value}] [1000]: org.thymeleaf.standard.processor.StandardValueTagProcessor
[THYMELEAF]             * [* {th:xmlbase,data-th-xmlbase}] [1000]: org.thymeleaf.standard.processor.StandardXmlBaseTagProcessor
[THYMELEAF]             * [* {th:xmllang,data-th-xmllang}] [1000]: org.thymeleaf.standard.processor.StandardXmlLangTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:xmlspace,data-th-xmlspace}] [1000]: org.thymeleaf.standard.processor.StandardXmlSpaceTagProcessor
[THYMELEAF]             * [* {th:classappend,data-th-classappend}] [1100]: org.thymeleaf.standard.processor.StandardClassappendTagProcessor
[THYMELEAF]             * [* {th:styleappend,data-th-styleappend}] [1100]: org.thymeleaf.standard.processor.StandardStyleappendTagProcessor
[THYMELEAF]             * [* {th:text,data-th-text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext,data-th-utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment,data-th-fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert,data-th-assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove,data-th-remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:ref,data-th-ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block,th-block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * DOCTYPE Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardTranslationDocTypeProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]             * [1100]: org.thymeleaf.standard.processor.StandardConditionalCommentProcessor
[THYMELEAF]     * Processors for Template Mode: XML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: com.intuit.karate.template.KarateEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: com.intuit.karate.template.KarateWithTagProcessor
[THYMELEAF]             * [* {th:attr}] [700]: com.intuit.karate.template.KarateAttributeTagProcessor.KarateAttrTagProcessor
[THYMELEAF]             * [* {th:attrappend}] [900]: com.intuit.karate.template.KarateAttributeTagProcessor.KarateAttrappendTagProcessor
[THYMELEAF]             * [* {th:attrprepend}] [900]: com.intuit.karate.template.KarateAttributeTagProcessor.KarateAttrprependTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineXMLTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]     * Processors for Template Mode: TEXT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: com.intuit.karate.template.KarateEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: com.intuit.karate.template.KarateWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: JAVASCRIPT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: com.intuit.karate.template.KarateEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: com.intuit.karate.template.KarateWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: CSS
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: com.intuit.karate.template.KarateEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: com.intuit.karate.template.KarateWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #ctx
[THYMELEAF]         * #root
[THYMELEAF]         * #vars
[THYMELEAF]         * #object
[THYMELEAF]         * #locale
[THYMELEAF]         * #conversions
[THYMELEAF]         * #uris
[THYMELEAF]         * #temporals
[THYMELEAF]         * #calendars
[THYMELEAF]         * #dates
[THYMELEAF]         * #bools
[THYMELEAF]         * #numbers
[THYMELEAF]         * #objects
[THYMELEAF]         * #strings
[THYMELEAF]         * #arrays
[THYMELEAF]         * #lists
[THYMELEAF]         * #sets
[THYMELEAF]         * #maps
[THYMELEAF]         * #aggregates
[THYMELEAF]         * #messages
[THYMELEAF]         * #ids
[THYMELEAF]         * #execInfo
[THYMELEAF]         * #request
[THYMELEAF]         * #response
[THYMELEAF]         * #session
[THYMELEAF]         * #servletContext
[THYMELEAF]     * Execution Attributes:
[THYMELEAF]         * "StandardExpressionParser": com.intuit.karate.template.KarateStandardDialect@621dda1a
[THYMELEAF]         * "StandardJavaScriptSerializer": org.thymeleaf.standard.serializer.StandardJavaScriptSerializer@506c94d1
[THYMELEAF]         * "StandardCSSSerializer": org.thymeleaf.standard.serializer.StandardCSSSerializer@3461d33c
[THYMELEAF]         * "StandardVariableExpressionEvaluator": com.intuit.karate.template.KarateStandardDialect@621dda1a
[THYMELEAF]         * "StandardConversionService": org.thymeleaf.standard.expression.StandardConversionService@142a43f8
[THYMELEAF] * Dialect [2 of 2]: karate (com.intuit.karate.template.KarateScriptDialect)
[THYMELEAF]     * Prefix: "ka"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {src}] [1000]: com.intuit.karate.template.KaScriptAttrProcessor
[THYMELEAF]         * Element Model Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [{script} {ka:scope,data-ka-scope}] [1000]: com.intuit.karate.template.KaScriptElemProcessor
[THYMELEAF]             * [* {ka:set,data-ka-set}] [1000]: com.intuit.karate.template.KaSetElemProcessor
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
22:25:39.112 [pool-3-thread-1] DEBUG org.thymeleaf.TemplateEngine -- [THYMELEAF] TEMPLATE ENGINE INITIALIZED
---------------------------------------------------------
feature: classpath:features/withLogin/Login.feature
scenarios:  5 | passed:  5 | failed:  0 | time: 9.1048
---------------------------------------------------------

22:25:41.881 [pool-3-thread-1] INFO com.intuit.karate.Suite -- <<pass>> feature 1 of 2 (1 remaining) classpath:features/withLogin/Login.feature
22:25:41.898 [pool-3-thread-1] DEBUG org.thymeleaf.TemplateEngine -- [THYMELEAF] INITIALIZING TEMPLATE ENGINE
22:25:41.943 [pool-3-thread-1] DEBUG org.thymeleaf.TemplateEngine.CONFIG -- Initializing Thymeleaf Template engine configuration...
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Thymeleaf version: 3.1.2.RELEASE (built 2023-07-30T19:25:50+0000)
[THYMELEAF] * Cache Manager implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template resolvers:
[THYMELEAF]     * [1] com.intuit.karate.template.ResourceHtmlTemplateResolver
[THYMELEAF] * Message resolvers:
[THYMELEAF]     * org.thymeleaf.messageresolver.StandardMessageResolver
[THYMELEAF] * Link builders:
[THYMELEAF]     * org.thymeleaf.linkbuilder.StandardLinkBuilder
[THYMELEAF] * Dialect [1 of 2]: Standard (com.intuit.karate.template.KarateStandardDialect)
[THYMELEAF]     * Prefix: "th"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include,data-th-include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert,data-th-insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace,data-th-replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each,data-th-each}] [200]: com.intuit.karate.template.KarateEachTagProcessor
[THYMELEAF]             * [* {th:switch,data-th-switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case,data-th-case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if,data-th-if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless,data-th-unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object,data-th-object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with,data-th-with}] [600]: com.intuit.karate.template.KarateWithTagProcessor
[THYMELEAF]             * [* {th:attr,data-th-attr}] [700]: com.intuit.karate.template.KarateAttributeTagProcessor.KarateAttrTagProcessor
[THYMELEAF]             * [* {th:attrappend,data-th-attrappend}] [900]: com.intuit.karate.template.KarateAttributeTagProcessor.KarateAttrappendTagProcessor
[THYMELEAF]             * [* {th:attrprepend,data-th-attrprepend}] [900]: com.intuit.karate.template.KarateAttributeTagProcessor.KarateAttrprependTagProcessor
[THYMELEAF]             * [* {th:alt-title,data-th-alt-title}] [990]: org.thymeleaf.standard.processor.StandardAltTitleTagProcessor
[THYMELEAF]             * [* {th:lang-xmllang,data-th-lang-xmllang}] [990]: org.thymeleaf.standard.processor.StandardLangXmlLangTagProcessor
[THYMELEAF]             * [* {th:action,data-th-action}] [1000]: org.thymeleaf.standard.processor.StandardActionTagProcessor
[THYMELEAF]             * [* {th:required,data-th-required}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:nowrap,data-th-nowrap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autofocus,data-th-autofocus}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:selected,data-th-selected}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:open,data-th-open}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:controls,data-th-controls}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:pubdate,data-th-pubdate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:loop,data-th-loop}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:scoped,data-th-scoped}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:checked,data-th-checked}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:defer,data-th-defer}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:readonly,data-th-readonly}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:async,data-th-async}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:formnovalidate,data-th-formnovalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:disabled,data-th-disabled}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:ismap,data-th-ismap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:declare,data-th-declare}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:seamless,data-th-seamless}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:hidden,data-th-hidden}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:novalidate,data-th-novalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:multiple,data-th-multiple}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:default,data-th-default}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autoplay,data-th-autoplay}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:reversed,data-th-reversed}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:ondragover,data-th-ondragover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmessage,data-th-onmessage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstalled,data-th-onstalled}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onabort,data-th-onabort}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseup,data-th-onmouseup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousedown,data-th-onmousedown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragend,data-th-ondragend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrop,data-th-ondrop}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeking,data-th-onseeking}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onended,data-th-onended}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onunload,data-th-onunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragenter,data-th-ondragenter}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onfocus,data-th-onfocus}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeprint,data-th-onbeforeprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onprogress,data-th-onprogress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsuspend,data-th-onsuspend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplay,data-th-oncanplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseout,data-th-onmouseout}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsubmit,data-th-onsubmit}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onerror,data-th-onerror}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onundo,data-th-onundo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadedmetadata,data-th-onloadedmetadata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousewheel,data-th-onmousewheel}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onblur,data-th-onblur}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onselect,data-th-onselect}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpopstate,data-th-onpopstate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onshow,data-th-onshow}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstorage,data-th-onstorage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadeddata,data-th-onloadeddata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninput,data-th-oninput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreadystatechange,data-th-onreadystatechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrag,data-th-ondrag}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeked,data-th-onseeked}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragleave,data-th-ondragleave}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onresize,data-th-onresize}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onoffline,data-th-onoffline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onafterprint,data-th-onafterprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onscroll,data-th-onscroll}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onemptied,data-th-onemptied}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninvalid,data-th-oninvalid}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeypress,data-th-onkeypress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ontimeupdate,data-th-ontimeupdate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onload,data-th-onload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpause,data-th-onpause}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseover,data-th-onmouseover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onclick,data-th-onclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onchange,data-th-onchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ononline,data-th-ononline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousemove,data-th-onmousemove}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplaythrough,data-th-oncanplaythrough}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onformchange,data-th-onformchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onvolumechange,data-th-onvolumechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreset,data-th-onreset}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeyup,data-th-onkeyup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragstart,data-th-ondragstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncontextmenu,data-th-oncontextmenu}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondurationchange,data-th-ondurationchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeunload,data-th-onbeforeunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onratechange,data-th-onratechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onredo,data-th-onredo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onwaiting,data-th-onwaiting}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplay,data-th-onplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onhashchange,data-th-onhashchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplaying,data-th-onplaying}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondblclick,data-th-ondblclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeydown,data-th-onkeydown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadstart,data-th-onloadstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onforminput,data-th-onforminput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:href,data-th-href}] [1000]: org.thymeleaf.standard.processor.StandardHrefTagProcessor
[THYMELEAF]             * [* {th:inline,data-th-inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineHTMLTagProcessor
[THYMELEAF]             * [* {th:method,data-th-method}] [1000]: org.thymeleaf.standard.processor.StandardMethodTagProcessor
[THYMELEAF]             * [* {th:type,data-th-type}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:name,data-th-name}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:spellcheck,data-th-spellcheck}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:autocomplete,data-th-autocomplete}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:style,data-th-style}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:srclang,data-th-srclang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sandbox,data-th-sandbox}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:summary,data-th-summary}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frame,data-th-frame}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept,data-th-accept}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:wrap,data-th-wrap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dropzone,data-th-dropzone}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formtarget,data-th-formtarget}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:axis,data-th-axis}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contextmenu,data-th-contextmenu}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:http-equiv,data-th-http-equiv}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:placeholder,data-th-placeholder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formmethod,data-th-formmethod}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:target,data-th-target}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:pattern,data-th-pattern}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:border,data-th-border}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cols,data-th-cols}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:class,data-th-class}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contenteditable,data-th-contenteditable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:keytype,data-th-keytype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:compact,data-th-compact}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:draggable,data-th-draggable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:headers,data-th-headers}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cite,data-th-cite}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:max,data-th-max}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:form,data-th-form}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:optimum,data-th-optimum}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginwidth,data-th-marginwidth}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:datetime,data-th-datetime}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:longdesc,data-th-longdesc}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formaction,data-th-formaction}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:list,data-th-list}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rev,data-th-rev}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frameborder,data-th-frameborder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:align,data-th-align}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scheme,data-th-scheme}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accesskey,data-th-accesskey}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellspacing,data-th-cellspacing}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:content,data-th-content}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:title,data-th-title}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rel,data-th-rel}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codebase,data-th-codebase}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:manifest,data-th-manifest}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:enctype,data-th-enctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:icon,data-th-icon}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rows,data-th-rows}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:id,data-th-id}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:maxlength,data-th-maxlength}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:label,data-th-label}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:start,data-th-start}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:height,data-th-height}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginheight,data-th-marginheight}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellpadding,data-th-cellpadding}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:step,data-th-step}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:standby,data-th-standby}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rowspan,data-th-rowspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:challenge,data-th-challenge}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:media,data-th-media}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hreflang,data-th-hreflang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:data,data-th-data}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:archive,data-th-archive}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:span,data-th-span}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:min,data-th-min}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scrolling,data-th-scrolling}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:alt,data-th-alt}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:size,data-th-size}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:tabindex,data-th-tabindex}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:charset,data-th-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:for,data-th-for}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formenctype,data-th-formenctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept-charset,data-th-accept-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:usemap,data-th-usemap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:bgcolor,data-th-bgcolor}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rules,data-th-rules}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:colspan,data-th-colspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:poster,data-th-poster}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:vspace,data-th-vspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:low,data-th-low}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:radiogroup,data-th-radiogroup}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:high,data-th-high}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codetype,data-th-codetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:kind,data-th-kind}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sizes,data-th-sizes}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:classid,data-th-classid}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scope,data-th-scope}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:background,data-th-background}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:audio,data-th-audio}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:lang,data-th-lang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:valuetype,data-th-valuetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hspace,data-th-hspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:width,data-th-width}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dir,data-th-dir}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:preload,data-th-preload}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:abbr,data-th-abbr}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:src,data-th-src}] [1000]: org.thymeleaf.standard.processor.StandardSrcTagProcessor
[THYMELEAF]             * [* {th:value,data-th-value}] [1000]: org.thymeleaf.standard.processor.StandardValueTagProcessor
[THYMELEAF]             * [* {th:xmlbase,data-th-xmlbase}] [1000]: org.thymeleaf.standard.processor.StandardXmlBaseTagProcessor
[THYMELEAF]             * [* {th:xmllang,data-th-xmllang}] [1000]: org.thymeleaf.standard.processor.StandardXmlLangTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:xmlspace,data-th-xmlspace}] [1000]: org.thymeleaf.standard.processor.StandardXmlSpaceTagProcessor
[THYMELEAF]             * [* {th:classappend,data-th-classappend}] [1100]: org.thymeleaf.standard.processor.StandardClassappendTagProcessor
[THYMELEAF]             * [* {th:styleappend,data-th-styleappend}] [1100]: org.thymeleaf.standard.processor.StandardStyleappendTagProcessor
[THYMELEAF]             * [* {th:text,data-th-text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext,data-th-utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment,data-th-fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert,data-th-assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove,data-th-remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:ref,data-th-ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block,th-block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * DOCTYPE Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardTranslationDocTypeProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]             * [1100]: org.thymeleaf.standard.processor.StandardConditionalCommentProcessor
[THYMELEAF]     * Processors for Template Mode: XML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: com.intuit.karate.template.KarateEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: com.intuit.karate.template.KarateWithTagProcessor
[THYMELEAF]             * [* {th:attr}] [700]: com.intuit.karate.template.KarateAttributeTagProcessor.KarateAttrTagProcessor
[THYMELEAF]             * [* {th:attrappend}] [900]: com.intuit.karate.template.KarateAttributeTagProcessor.KarateAttrappendTagProcessor
[THYMELEAF]             * [* {th:attrprepend}] [900]: com.intuit.karate.template.KarateAttributeTagProcessor.KarateAttrprependTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineXMLTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]     * Processors for Template Mode: TEXT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: com.intuit.karate.template.KarateEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: com.intuit.karate.template.KarateWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: JAVASCRIPT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: com.intuit.karate.template.KarateEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: com.intuit.karate.template.KarateWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: CSS
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: com.intuit.karate.template.KarateEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: com.intuit.karate.template.KarateWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #ctx
[THYMELEAF]         * #root
[THYMELEAF]         * #vars
[THYMELEAF]         * #object
[THYMELEAF]         * #locale
[THYMELEAF]         * #conversions
[THYMELEAF]         * #uris
[THYMELEAF]         * #temporals
[THYMELEAF]         * #calendars
[THYMELEAF]         * #dates
[THYMELEAF]         * #bools
[THYMELEAF]         * #numbers
[THYMELEAF]         * #objects
[THYMELEAF]         * #strings
[THYMELEAF]         * #arrays
[THYMELEAF]         * #lists
[THYMELEAF]         * #sets
[THYMELEAF]         * #maps
[THYMELEAF]         * #aggregates
[THYMELEAF]         * #messages
[THYMELEAF]         * #ids
[THYMELEAF]         * #execInfo
[THYMELEAF]         * #request
[THYMELEAF]         * #response
[THYMELEAF]         * #session
[THYMELEAF]         * #servletContext
[THYMELEAF]     * Execution Attributes:
[THYMELEAF]         * "StandardExpressionParser": com.intuit.karate.template.KarateStandardDialect@3b085383
[THYMELEAF]         * "StandardJavaScriptSerializer": org.thymeleaf.standard.serializer.StandardJavaScriptSerializer@206ff93
[THYMELEAF]         * "StandardCSSSerializer": org.thymeleaf.standard.serializer.StandardCSSSerializer@2d5688a0
[THYMELEAF]         * "StandardVariableExpressionEvaluator": com.intuit.karate.template.KarateStandardDialect@3b085383
[THYMELEAF]         * "StandardConversionService": org.thymeleaf.standard.expression.StandardConversionService@57e8d362
[THYMELEAF] * Dialect [2 of 2]: karate (com.intuit.karate.template.KarateScriptDialect)
[THYMELEAF]     * Prefix: "ka"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {src}] [1000]: com.intuit.karate.template.KaScriptAttrProcessor
[THYMELEAF]         * Element Model Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [{script} {ka:scope,data-ka-scope}] [1000]: com.intuit.karate.template.KaScriptElemProcessor
[THYMELEAF]             * [* {ka:set,data-ka-set}] [1000]: com.intuit.karate.template.KaSetElemProcessor
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
22:25:41.944 [pool-3-thread-1] DEBUG org.thymeleaf.TemplateEngine -- [THYMELEAF] TEMPLATE ENGINE INITIALIZED
---------------------------------------------------------
feature: classpath:features/withoutLogin/SkipLogin.feature
scenarios:  1 | passed:  1 | failed:  0 | time: 0.4363
---------------------------------------------------------

22:25:42.017 [pool-3-thread-1] INFO com.intuit.karate.Suite -- <<pass>> feature 2 of 2 (0 remaining) classpath:features/withoutLogin/SkipLogin.feature
Karate version: 1.4.1
======================================================
elapsed:   6.76 | threads:    5 | thread time: 9.54 
features:     2 | skipped:    0 | efficiency: 0.28
scenarios:    6 | passed:     6 | failed: 0
======================================================
22:25:42.748 [main] DEBUG org.thymeleaf.TemplateEngine -- [THYMELEAF] INITIALIZING TEMPLATE ENGINE
22:25:42.790 [main] DEBUG org.thymeleaf.TemplateEngine.CONFIG -- Initializing Thymeleaf Template engine configuration...
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Thymeleaf version: 3.1.2.RELEASE (built 2023-07-30T19:25:50+0000)
[THYMELEAF] * Cache Manager implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template resolvers:
[THYMELEAF]     * [1] com.intuit.karate.template.ResourceHtmlTemplateResolver
[THYMELEAF] * Message resolvers:
[THYMELEAF]     * org.thymeleaf.messageresolver.StandardMessageResolver
[THYMELEAF] * Link builders:
[THYMELEAF]     * org.thymeleaf.linkbuilder.StandardLinkBuilder
[THYMELEAF] * Dialect [1 of 2]: Standard (com.intuit.karate.template.KarateStandardDialect)
[THYMELEAF]     * Prefix: "th"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include,data-th-include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert,data-th-insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace,data-th-replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each,data-th-each}] [200]: com.intuit.karate.template.KarateEachTagProcessor
[THYMELEAF]             * [* {th:switch,data-th-switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case,data-th-case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if,data-th-if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless,data-th-unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object,data-th-object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with,data-th-with}] [600]: com.intuit.karate.template.KarateWithTagProcessor
[THYMELEAF]             * [* {th:attr,data-th-attr}] [700]: com.intuit.karate.template.KarateAttributeTagProcessor.KarateAttrTagProcessor
[THYMELEAF]             * [* {th:attrappend,data-th-attrappend}] [900]: com.intuit.karate.template.KarateAttributeTagProcessor.KarateAttrappendTagProcessor
[THYMELEAF]             * [* {th:attrprepend,data-th-attrprepend}] [900]: com.intuit.karate.template.KarateAttributeTagProcessor.KarateAttrprependTagProcessor
[THYMELEAF]             * [* {th:alt-title,data-th-alt-title}] [990]: org.thymeleaf.standard.processor.StandardAltTitleTagProcessor
[THYMELEAF]             * [* {th:lang-xmllang,data-th-lang-xmllang}] [990]: org.thymeleaf.standard.processor.StandardLangXmlLangTagProcessor
[THYMELEAF]             * [* {th:action,data-th-action}] [1000]: org.thymeleaf.standard.processor.StandardActionTagProcessor
[THYMELEAF]             * [* {th:selected,data-th-selected}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:open,data-th-open}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:novalidate,data-th-novalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autoplay,data-th-autoplay}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:defer,data-th-defer}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:async,data-th-async}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:declare,data-th-declare}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:controls,data-th-controls}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:pubdate,data-th-pubdate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:loop,data-th-loop}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:checked,data-th-checked}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:required,data-th-required}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:reversed,data-th-reversed}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:multiple,data-th-multiple}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:nowrap,data-th-nowrap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:readonly,data-th-readonly}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:seamless,data-th-seamless}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:default,data-th-default}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:ismap,data-th-ismap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:formnovalidate,data-th-formnovalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autofocus,data-th-autofocus}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:disabled,data-th-disabled}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:scoped,data-th-scoped}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:hidden,data-th-hidden}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:onended,data-th-onended}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninput,data-th-oninput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmessage,data-th-onmessage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragleave,data-th-ondragleave}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadstart,data-th-onloadstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onvolumechange,data-th-onvolumechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseover,data-th-onmouseover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeprint,data-th-onbeforeprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadeddata,data-th-onloadeddata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragenter,data-th-ondragenter}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadedmetadata,data-th-onloadedmetadata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ontimeupdate,data-th-ontimeupdate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onscroll,data-th-onscroll}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onforminput,data-th-onforminput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplaythrough,data-th-oncanplaythrough}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onchange,data-th-onchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onerror,data-th-onerror}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeking,data-th-onseeking}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreadystatechange,data-th-onreadystatechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onundo,data-th-onundo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousemove,data-th-onmousemove}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onload,data-th-onload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onformchange,data-th-onformchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onwaiting,data-th-onwaiting}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrop,data-th-ondrop}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstalled,data-th-onstalled}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onunload,data-th-onunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseout,data-th-onmouseout}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplay,data-th-onplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpopstate,data-th-onpopstate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondurationchange,data-th-ondurationchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragend,data-th-ondragend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onshow,data-th-onshow}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onclick,data-th-onclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ononline,data-th-ononline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onabort,data-th-onabort}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeunload,data-th-onbeforeunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onresize,data-th-onresize}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplay,data-th-oncanplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsuspend,data-th-onsuspend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onemptied,data-th-onemptied}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpause,data-th-onpause}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onprogress,data-th-onprogress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onfocus,data-th-onfocus}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstorage,data-th-onstorage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondblclick,data-th-ondblclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onoffline,data-th-onoffline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onratechange,data-th-onratechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreset,data-th-onreset}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeypress,data-th-onkeypress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousewheel,data-th-onmousewheel}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeydown,data-th-onkeydown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeyup,data-th-onkeyup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onafterprint,data-th-onafterprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onselect,data-th-onselect}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncontextmenu,data-th-oncontextmenu}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseup,data-th-onmouseup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplaying,data-th-onplaying}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragstart,data-th-ondragstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousedown,data-th-onmousedown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrag,data-th-ondrag}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragover,data-th-ondragover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onhashchange,data-th-onhashchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsubmit,data-th-onsubmit}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onredo,data-th-onredo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeked,data-th-onseeked}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onblur,data-th-onblur}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninvalid,data-th-oninvalid}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:href,data-th-href}] [1000]: org.thymeleaf.standard.processor.StandardHrefTagProcessor
[THYMELEAF]             * [* {th:inline,data-th-inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineHTMLTagProcessor
[THYMELEAF]             * [* {th:method,data-th-method}] [1000]: org.thymeleaf.standard.processor.StandardMethodTagProcessor
[THYMELEAF]             * [* {th:name,data-th-name}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:type,data-th-type}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rel,data-th-rel}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:content,data-th-content}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:abbr,data-th-abbr}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginwidth,data-th-marginwidth}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contextmenu,data-th-contextmenu}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginheight,data-th-marginheight}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:icon,data-th-icon}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:data,data-th-data}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:label,data-th-label}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cite,data-th-cite}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:border,data-th-border}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:radiogroup,data-th-radiogroup}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:poster,data-th-poster}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:placeholder,data-th-placeholder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sizes,data-th-sizes}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:low,data-th-low}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accesskey,data-th-accesskey}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:manifest,data-th-manifest}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:title,data-th-title}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:valuetype,data-th-valuetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dropzone,data-th-dropzone}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:autocomplete,data-th-autocomplete}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:kind,data-th-kind}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:archive,data-th-archive}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:datetime,data-th-datetime}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rev,data-th-rev}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:size,data-th-size}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:challenge,data-th-challenge}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:background,data-th-background}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:audio,data-th-audio}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rowspan,data-th-rowspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frameborder,data-th-frameborder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:step,data-th-step}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:optimum,data-th-optimum}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dir,data-th-dir}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:high,data-th-high}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cols,data-th-cols}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:spellcheck,data-th-spellcheck}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:draggable,data-th-draggable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:compact,data-th-compact}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellspacing,data-th-cellspacing}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:media,data-th-media}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formmethod,data-th-formmethod}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:preload,data-th-preload}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:maxlength,data-th-maxlength}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:http-equiv,data-th-http-equiv}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:align,data-th-align}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:tabindex,data-th-tabindex}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rules,data-th-rules}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:vspace,data-th-vspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:colspan,data-th-colspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rows,data-th-rows}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:height,data-th-height}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept,data-th-accept}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:axis,data-th-axis}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:pattern,data-th-pattern}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scrolling,data-th-scrolling}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hreflang,data-th-hreflang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:wrap,data-th-wrap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:for,data-th-for}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:list,data-th-list}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:lang,data-th-lang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellpadding,data-th-cellpadding}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:span,data-th-span}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:form,data-th-form}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sandbox,data-th-sandbox}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frame,data-th-frame}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:srclang,data-th-srclang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:headers,data-th-headers}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:alt,data-th-alt}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formtarget,data-th-formtarget}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hspace,data-th-hspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:bgcolor,data-th-bgcolor}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:class,data-th-class}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codetype,data-th-codetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:classid,data-th-classid}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:usemap,data-th-usemap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:target,data-th-target}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:width,data-th-width}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:min,data-th-min}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scheme,data-th-scheme}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:id,data-th-id}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:start,data-th-start}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formaction,data-th-formaction}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept-charset,data-th-accept-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:summary,data-th-summary}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formenctype,data-th-formenctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codebase,data-th-codebase}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:enctype,data-th-enctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scope,data-th-scope}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:charset,data-th-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:style,data-th-style}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:longdesc,data-th-longdesc}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:max,data-th-max}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contenteditable,data-th-contenteditable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:standby,data-th-standby}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:keytype,data-th-keytype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:src,data-th-src}] [1000]: org.thymeleaf.standard.processor.StandardSrcTagProcessor
[THYMELEAF]             * [* {th:value,data-th-value}] [1000]: org.thymeleaf.standard.processor.StandardValueTagProcessor
[THYMELEAF]             * [* {th:xmlbase,data-th-xmlbase}] [1000]: org.thymeleaf.standard.processor.StandardXmlBaseTagProcessor
[THYMELEAF]             * [* {th:xmllang,data-th-xmllang}] [1000]: org.thymeleaf.standard.processor.StandardXmlLangTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:xmlspace,data-th-xmlspace}] [1000]: org.thymeleaf.standard.processor.StandardXmlSpaceTagProcessor
[THYMELEAF]             * [* {th:classappend,data-th-classappend}] [1100]: org.thymeleaf.standard.processor.StandardClassappendTagProcessor
[THYMELEAF]             * [* {th:styleappend,data-th-styleappend}] [1100]: org.thymeleaf.standard.processor.StandardStyleappendTagProcessor
[THYMELEAF]             * [* {th:text,data-th-text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext,data-th-utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment,data-th-fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert,data-th-assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove,data-th-remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:ref,data-th-ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block,th-block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * DOCTYPE Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardTranslationDocTypeProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]             * [1100]: org.thymeleaf.standard.processor.StandardConditionalCommentProcessor
[THYMELEAF]     * Processors for Template Mode: XML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: com.intuit.karate.template.KarateEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: com.intuit.karate.template.KarateWithTagProcessor
[THYMELEAF]             * [* {th:attr}] [700]: com.intuit.karate.template.KarateAttributeTagProcessor.KarateAttrTagProcessor
[THYMELEAF]             * [* {th:attrappend}] [900]: com.intuit.karate.template.KarateAttributeTagProcessor.KarateAttrappendTagProcessor
[THYMELEAF]             * [* {th:attrprepend}] [900]: com.intuit.karate.template.KarateAttributeTagProcessor.KarateAttrprependTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineXMLTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]     * Processors for Template Mode: TEXT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: com.intuit.karate.template.KarateEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: com.intuit.karate.template.KarateWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: JAVASCRIPT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: com.intuit.karate.template.KarateEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: com.intuit.karate.template.KarateWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: CSS
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: com.intuit.karate.template.KarateEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: com.intuit.karate.template.KarateWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #ctx
[THYMELEAF]         * #root
[THYMELEAF]         * #vars
[THYMELEAF]         * #object
[THYMELEAF]         * #locale
[THYMELEAF]         * #conversions
[THYMELEAF]         * #uris
[THYMELEAF]         * #temporals
[THYMELEAF]         * #calendars
[THYMELEAF]         * #dates
[THYMELEAF]         * #bools
[THYMELEAF]         * #numbers
[THYMELEAF]         * #objects
[THYMELEAF]         * #strings
[THYMELEAF]         * #arrays
[THYMELEAF]         * #lists
[THYMELEAF]         * #sets
[THYMELEAF]         * #maps
[THYMELEAF]         * #aggregates
[THYMELEAF]         * #messages
[THYMELEAF]         * #ids
[THYMELEAF]         * #execInfo
[THYMELEAF]         * #request
[THYMELEAF]         * #response
[THYMELEAF]         * #session
[THYMELEAF]         * #servletContext
[THYMELEAF]     * Execution Attributes:
[THYMELEAF]         * "StandardExpressionParser": com.intuit.karate.template.KarateStandardDialect@2c95ac9e
[THYMELEAF]         * "StandardJavaScriptSerializer": org.thymeleaf.standard.serializer.StandardJavaScriptSerializer@772485dd
[THYMELEAF]         * "StandardCSSSerializer": org.thymeleaf.standard.serializer.StandardCSSSerializer@5a12c728
[THYMELEAF]         * "StandardVariableExpressionEvaluator": com.intuit.karate.template.KarateStandardDialect@2c95ac9e
[THYMELEAF]         * "StandardConversionService": org.thymeleaf.standard.expression.StandardConversionService@79ab3a71
[THYMELEAF] * Dialect [2 of 2]: karate (com.intuit.karate.template.KarateScriptDialect)
[THYMELEAF]     * Prefix: "ka"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {src}] [1000]: com.intuit.karate.template.KaScriptAttrProcessor
[THYMELEAF]         * Element Model Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [{script} {ka:scope,data-ka-scope}] [1000]: com.intuit.karate.template.KaScriptElemProcessor
[THYMELEAF]             * [* {ka:set,data-ka-set}] [1000]: com.intuit.karate.template.KaSetElemProcessor
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
22:25:42.791 [main] DEBUG org.thymeleaf.TemplateEngine -- [THYMELEAF] TEMPLATE ENGINE INITIALIZED
22:25:42.808 [main] DEBUG org.thymeleaf.TemplateEngine -- [THYMELEAF] INITIALIZING TEMPLATE ENGINE
22:25:42.837 [main] DEBUG org.thymeleaf.TemplateEngine.CONFIG -- Initializing Thymeleaf Template engine configuration...
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Thymeleaf version: 3.1.2.RELEASE (built 2023-07-30T19:25:50+0000)
[THYMELEAF] * Cache Manager implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template resolvers:
[THYMELEAF]     * [1] com.intuit.karate.template.ResourceHtmlTemplateResolver
[THYMELEAF] * Message resolvers:
[THYMELEAF]     * org.thymeleaf.messageresolver.StandardMessageResolver
[THYMELEAF] * Link builders:
[THYMELEAF]     * org.thymeleaf.linkbuilder.StandardLinkBuilder
[THYMELEAF] * Dialect [1 of 2]: Standard (com.intuit.karate.template.KarateStandardDialect)
[THYMELEAF]     * Prefix: "th"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include,data-th-include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert,data-th-insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace,data-th-replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each,data-th-each}] [200]: com.intuit.karate.template.KarateEachTagProcessor
[THYMELEAF]             * [* {th:switch,data-th-switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case,data-th-case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if,data-th-if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless,data-th-unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object,data-th-object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with,data-th-with}] [600]: com.intuit.karate.template.KarateWithTagProcessor
[THYMELEAF]             * [* {th:attr,data-th-attr}] [700]: com.intuit.karate.template.KarateAttributeTagProcessor.KarateAttrTagProcessor
[THYMELEAF]             * [* {th:attrappend,data-th-attrappend}] [900]: com.intuit.karate.template.KarateAttributeTagProcessor.KarateAttrappendTagProcessor
[THYMELEAF]             * [* {th:attrprepend,data-th-attrprepend}] [900]: com.intuit.karate.template.KarateAttributeTagProcessor.KarateAttrprependTagProcessor
[THYMELEAF]             * [* {th:alt-title,data-th-alt-title}] [990]: org.thymeleaf.standard.processor.StandardAltTitleTagProcessor
[THYMELEAF]             * [* {th:lang-xmllang,data-th-lang-xmllang}] [990]: org.thymeleaf.standard.processor.StandardLangXmlLangTagProcessor
[THYMELEAF]             * [* {th:action,data-th-action}] [1000]: org.thymeleaf.standard.processor.StandardActionTagProcessor
[THYMELEAF]             * [* {th:readonly,data-th-readonly}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autofocus,data-th-autofocus}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:nowrap,data-th-nowrap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:open,data-th-open}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:loop,data-th-loop}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:declare,data-th-declare}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:novalidate,data-th-novalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:checked,data-th-checked}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:selected,data-th-selected}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:pubdate,data-th-pubdate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:hidden,data-th-hidden}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:disabled,data-th-disabled}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:scoped,data-th-scoped}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:controls,data-th-controls}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:seamless,data-th-seamless}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:formnovalidate,data-th-formnovalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:defer,data-th-defer}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:default,data-th-default}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:reversed,data-th-reversed}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:required,data-th-required}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:ismap,data-th-ismap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autoplay,data-th-autoplay}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:multiple,data-th-multiple}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:async,data-th-async}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:onselect,data-th-onselect}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragleave,data-th-ondragleave}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeyup,data-th-onkeyup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsubmit,data-th-onsubmit}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onformchange,data-th-onformchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ononline,data-th-ononline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrop,data-th-ondrop}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeypress,data-th-onkeypress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplaythrough,data-th-oncanplaythrough}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstorage,data-th-onstorage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onerror,data-th-onerror}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplaying,data-th-onplaying}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadeddata,data-th-onloadeddata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onoffline,data-th-onoffline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeprint,data-th-onbeforeprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmessage,data-th-onmessage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onforminput,data-th-onforminput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondblclick,data-th-ondblclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeunload,data-th-onbeforeunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onload,data-th-onload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onprogress,data-th-onprogress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreadystatechange,data-th-onreadystatechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onblur,data-th-onblur}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousedown,data-th-onmousedown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondurationchange,data-th-ondurationchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onundo,data-th-onundo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onhashchange,data-th-onhashchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onended,data-th-onended}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadedmetadata,data-th-onloadedmetadata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousemove,data-th-onmousemove}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ontimeupdate,data-th-ontimeupdate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onredo,data-th-onredo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragstart,data-th-ondragstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onvolumechange,data-th-onvolumechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragenter,data-th-ondragenter}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onchange,data-th-onchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onclick,data-th-onclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onresize,data-th-onresize}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstalled,data-th-onstalled}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onratechange,data-th-onratechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseover,data-th-onmouseover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onabort,data-th-onabort}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onfocus,data-th-onfocus}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplay,data-th-onplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreset,data-th-onreset}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousewheel,data-th-onmousewheel}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadstart,data-th-onloadstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeydown,data-th-onkeydown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplay,data-th-oncanplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncontextmenu,data-th-oncontextmenu}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeking,data-th-onseeking}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onafterprint,data-th-onafterprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onshow,data-th-onshow}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseout,data-th-onmouseout}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onunload,data-th-onunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsuspend,data-th-onsuspend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseup,data-th-onmouseup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpause,data-th-onpause}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpopstate,data-th-onpopstate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrag,data-th-ondrag}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onemptied,data-th-onemptied}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onscroll,data-th-onscroll}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninput,data-th-oninput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeked,data-th-onseeked}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninvalid,data-th-oninvalid}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onwaiting,data-th-onwaiting}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragover,data-th-ondragover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragend,data-th-ondragend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:href,data-th-href}] [1000]: org.thymeleaf.standard.processor.StandardHrefTagProcessor
[THYMELEAF]             * [* {th:inline,data-th-inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineHTMLTagProcessor
[THYMELEAF]             * [* {th:method,data-th-method}] [1000]: org.thymeleaf.standard.processor.StandardMethodTagProcessor
[THYMELEAF]             * [* {th:name,data-th-name}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:type,data-th-type}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:form,data-th-form}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rows,data-th-rows}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept,data-th-accept}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:draggable,data-th-draggable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:usemap,data-th-usemap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sizes,data-th-sizes}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rules,data-th-rules}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellspacing,data-th-cellspacing}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:title,data-th-title}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:step,data-th-step}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:icon,data-th-icon}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:enctype,data-th-enctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:radiogroup,data-th-radiogroup}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:style,data-th-style}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:spellcheck,data-th-spellcheck}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:summary,data-th-summary}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:bgcolor,data-th-bgcolor}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formmethod,data-th-formmethod}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginwidth,data-th-marginwidth}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rev,data-th-rev}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:keytype,data-th-keytype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:charset,data-th-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:optimum,data-th-optimum}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hreflang,data-th-hreflang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:height,data-th-height}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dir,data-th-dir}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formtarget,data-th-formtarget}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:align,data-th-align}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codetype,data-th-codetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:wrap,data-th-wrap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:background,data-th-background}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept-charset,data-th-accept-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:tabindex,data-th-tabindex}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:manifest,data-th-manifest}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formenctype,data-th-formenctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:high,data-th-high}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cite,data-th-cite}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frame,data-th-frame}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:longdesc,data-th-longdesc}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:datetime,data-th-datetime}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:min,data-th-min}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:abbr,data-th-abbr}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:size,data-th-size}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:challenge,data-th-challenge}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:start,data-th-start}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scope,data-th-scope}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:vspace,data-th-vspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:alt,data-th-alt}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:lang,data-th-lang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:data,data-th-data}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:standby,data-th-standby}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contextmenu,data-th-contextmenu}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:headers,data-th-headers}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:media,data-th-media}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accesskey,data-th-accesskey}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:span,data-th-span}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:border,data-th-border}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:classid,data-th-classid}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frameborder,data-th-frameborder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:low,data-th-low}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:colspan,data-th-colspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginheight,data-th-marginheight}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:audio,data-th-audio}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:target,data-th-target}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:class,data-th-class}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:compact,data-th-compact}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:list,data-th-list}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contenteditable,data-th-contenteditable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rowspan,data-th-rowspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:autocomplete,data-th-autocomplete}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:http-equiv,data-th-http-equiv}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:poster,data-th-poster}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:id,data-th-id}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formaction,data-th-formaction}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:valuetype,data-th-valuetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dropzone,data-th-dropzone}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hspace,data-th-hspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:preload,data-th-preload}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cols,data-th-cols}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:content,data-th-content}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:maxlength,data-th-maxlength}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scrolling,data-th-scrolling}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rel,data-th-rel}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:srclang,data-th-srclang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:archive,data-th-archive}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:kind,data-th-kind}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:width,data-th-width}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scheme,data-th-scheme}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:max,data-th-max}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sandbox,data-th-sandbox}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellpadding,data-th-cellpadding}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codebase,data-th-codebase}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:placeholder,data-th-placeholder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:label,data-th-label}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:for,data-th-for}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:pattern,data-th-pattern}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:axis,data-th-axis}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:src,data-th-src}] [1000]: org.thymeleaf.standard.processor.StandardSrcTagProcessor
[THYMELEAF]             * [* {th:value,data-th-value}] [1000]: org.thymeleaf.standard.processor.StandardValueTagProcessor
[THYMELEAF]             * [* {th:xmlbase,data-th-xmlbase}] [1000]: org.thymeleaf.standard.processor.StandardXmlBaseTagProcessor
[THYMELEAF]             * [* {th:xmllang,data-th-xmllang}] [1000]: org.thymeleaf.standard.processor.StandardXmlLangTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:xmlspace,data-th-xmlspace}] [1000]: org.thymeleaf.standard.processor.StandardXmlSpaceTagProcessor
[THYMELEAF]             * [* {th:classappend,data-th-classappend}] [1100]: org.thymeleaf.standard.processor.StandardClassappendTagProcessor
[THYMELEAF]             * [* {th:styleappend,data-th-styleappend}] [1100]: org.thymeleaf.standard.processor.StandardStyleappendTagProcessor
[THYMELEAF]             * [* {th:text,data-th-text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext,data-th-utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment,data-th-fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert,data-th-assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove,data-th-remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:ref,data-th-ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block,th-block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * DOCTYPE Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardTranslationDocTypeProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]             * [1100]: org.thymeleaf.standard.processor.StandardConditionalCommentProcessor
[THYMELEAF]     * Processors for Template Mode: XML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: com.intuit.karate.template.KarateEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: com.intuit.karate.template.KarateWithTagProcessor
[THYMELEAF]             * [* {th:attr}] [700]: com.intuit.karate.template.KarateAttributeTagProcessor.KarateAttrTagProcessor
[THYMELEAF]             * [* {th:attrappend}] [900]: com.intuit.karate.template.KarateAttributeTagProcessor.KarateAttrappendTagProcessor
[THYMELEAF]             * [* {th:attrprepend}] [900]: com.intuit.karate.template.KarateAttributeTagProcessor.KarateAttrprependTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineXMLTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]     * Processors for Template Mode: TEXT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: com.intuit.karate.template.KarateEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: com.intuit.karate.template.KarateWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: JAVASCRIPT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: com.intuit.karate.template.KarateEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: com.intuit.karate.template.KarateWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: CSS
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: com.intuit.karate.template.KarateEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: com.intuit.karate.template.KarateWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #ctx
[THYMELEAF]         * #root
[THYMELEAF]         * #vars
[THYMELEAF]         * #object
[THYMELEAF]         * #locale
[THYMELEAF]         * #conversions
[THYMELEAF]         * #uris
[THYMELEAF]         * #temporals
[THYMELEAF]         * #calendars
[THYMELEAF]         * #dates
[THYMELEAF]         * #bools
[THYMELEAF]         * #numbers
[THYMELEAF]         * #objects
[THYMELEAF]         * #strings
[THYMELEAF]         * #arrays
[THYMELEAF]         * #lists
[THYMELEAF]         * #sets
[THYMELEAF]         * #maps
[THYMELEAF]         * #aggregates
[THYMELEAF]         * #messages
[THYMELEAF]         * #ids
[THYMELEAF]         * #execInfo
[THYMELEAF]         * #request
[THYMELEAF]         * #response
[THYMELEAF]         * #session
[THYMELEAF]         * #servletContext
[THYMELEAF]     * Execution Attributes:
[THYMELEAF]         * "StandardExpressionParser": com.intuit.karate.template.KarateStandardDialect@2577d6c8
[THYMELEAF]         * "StandardJavaScriptSerializer": org.thymeleaf.standard.serializer.StandardJavaScriptSerializer@5c20ffa8
[THYMELEAF]         * "StandardCSSSerializer": org.thymeleaf.standard.serializer.StandardCSSSerializer@7fedfe27
[THYMELEAF]         * "StandardVariableExpressionEvaluator": com.intuit.karate.template.KarateStandardDialect@2577d6c8
[THYMELEAF]         * "StandardConversionService": org.thymeleaf.standard.expression.StandardConversionService@2f879bab
[THYMELEAF] * Dialect [2 of 2]: karate (com.intuit.karate.template.KarateScriptDialect)
[THYMELEAF]     * Prefix: "ka"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {src}] [1000]: com.intuit.karate.template.KaScriptAttrProcessor
[THYMELEAF]         * Element Model Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [{script} {ka:scope,data-ka-scope}] [1000]: com.intuit.karate.template.KaScriptElemProcessor
[THYMELEAF]             * [* {ka:set,data-ka-set}] [1000]: com.intuit.karate.template.KaSetElemProcessor
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
22:25:42.839 [main] DEBUG org.thymeleaf.TemplateEngine -- [THYMELEAF] TEMPLATE ENGINE INITIALIZED
22:25:42.905 [main] DEBUG org.thymeleaf.TemplateEngine -- [THYMELEAF] INITIALIZING TEMPLATE ENGINE
22:25:42.933 [main] DEBUG org.thymeleaf.TemplateEngine.CONFIG -- Initializing Thymeleaf Template engine configuration...
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Thymeleaf version: 3.1.2.RELEASE (built 2023-07-30T19:25:50+0000)
[THYMELEAF] * Cache Manager implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template resolvers:
[THYMELEAF]     * [1] com.intuit.karate.template.ResourceHtmlTemplateResolver
[THYMELEAF] * Message resolvers:
[THYMELEAF]     * org.thymeleaf.messageresolver.StandardMessageResolver
[THYMELEAF] * Link builders:
[THYMELEAF]     * org.thymeleaf.linkbuilder.StandardLinkBuilder
[THYMELEAF] * Dialect [1 of 2]: Standard (com.intuit.karate.template.KarateStandardDialect)
[THYMELEAF]     * Prefix: "th"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include,data-th-include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert,data-th-insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace,data-th-replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each,data-th-each}] [200]: com.intuit.karate.template.KarateEachTagProcessor
[THYMELEAF]             * [* {th:switch,data-th-switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case,data-th-case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if,data-th-if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless,data-th-unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object,data-th-object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with,data-th-with}] [600]: com.intuit.karate.template.KarateWithTagProcessor
[THYMELEAF]             * [* {th:attr,data-th-attr}] [700]: com.intuit.karate.template.KarateAttributeTagProcessor.KarateAttrTagProcessor
[THYMELEAF]             * [* {th:attrappend,data-th-attrappend}] [900]: com.intuit.karate.template.KarateAttributeTagProcessor.KarateAttrappendTagProcessor
[THYMELEAF]             * [* {th:attrprepend,data-th-attrprepend}] [900]: com.intuit.karate.template.KarateAttributeTagProcessor.KarateAttrprependTagProcessor
[THYMELEAF]             * [* {th:alt-title,data-th-alt-title}] [990]: org.thymeleaf.standard.processor.StandardAltTitleTagProcessor
[THYMELEAF]             * [* {th:lang-xmllang,data-th-lang-xmllang}] [990]: org.thymeleaf.standard.processor.StandardLangXmlLangTagProcessor
[THYMELEAF]             * [* {th:action,data-th-action}] [1000]: org.thymeleaf.standard.processor.StandardActionTagProcessor
[THYMELEAF]             * [* {th:readonly,data-th-readonly}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:novalidate,data-th-novalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:pubdate,data-th-pubdate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:declare,data-th-declare}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:scoped,data-th-scoped}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:nowrap,data-th-nowrap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:open,data-th-open}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autofocus,data-th-autofocus}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:multiple,data-th-multiple}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:reversed,data-th-reversed}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:disabled,data-th-disabled}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:checked,data-th-checked}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:ismap,data-th-ismap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:hidden,data-th-hidden}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:loop,data-th-loop}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:controls,data-th-controls}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autoplay,data-th-autoplay}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:defer,data-th-defer}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:async,data-th-async}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:formnovalidate,data-th-formnovalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:default,data-th-default}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:seamless,data-th-seamless}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:required,data-th-required}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:selected,data-th-selected}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:ononline,data-th-ononline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpause,data-th-onpause}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousewheel,data-th-onmousewheel}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onblur,data-th-onblur}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onshow,data-th-onshow}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeprint,data-th-onbeforeprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ontimeupdate,data-th-ontimeupdate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreadystatechange,data-th-onreadystatechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninput,data-th-oninput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onprogress,data-th-onprogress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onunload,data-th-onunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeyup,data-th-onkeyup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpopstate,data-th-onpopstate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragenter,data-th-ondragenter}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstalled,data-th-onstalled}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrop,data-th-ondrop}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondblclick,data-th-ondblclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onerror,data-th-onerror}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeked,data-th-onseeked}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onfocus,data-th-onfocus}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondurationchange,data-th-ondurationchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstorage,data-th-onstorage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseout,data-th-onmouseout}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onforminput,data-th-onforminput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onundo,data-th-onundo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onscroll,data-th-onscroll}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onratechange,data-th-onratechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseover,data-th-onmouseover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousedown,data-th-onmousedown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeydown,data-th-onkeydown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninvalid,data-th-oninvalid}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplaythrough,data-th-oncanplaythrough}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeypress,data-th-onkeypress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplay,data-th-oncanplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onvolumechange,data-th-onvolumechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsubmit,data-th-onsubmit}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplay,data-th-onplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragover,data-th-ondragover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onabort,data-th-onabort}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmessage,data-th-onmessage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeking,data-th-onseeking}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onhashchange,data-th-onhashchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onformchange,data-th-onformchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrag,data-th-ondrag}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onended,data-th-onended}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplaying,data-th-onplaying}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onresize,data-th-onresize}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onemptied,data-th-onemptied}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onload,data-th-onload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeunload,data-th-onbeforeunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadeddata,data-th-onloadeddata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousemove,data-th-onmousemove}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreset,data-th-onreset}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onwaiting,data-th-onwaiting}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onselect,data-th-onselect}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadedmetadata,data-th-onloadedmetadata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsuspend,data-th-onsuspend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncontextmenu,data-th-oncontextmenu}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragend,data-th-ondragend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onredo,data-th-onredo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragstart,data-th-ondragstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadstart,data-th-onloadstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragleave,data-th-ondragleave}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onafterprint,data-th-onafterprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onoffline,data-th-onoffline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseup,data-th-onmouseup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onclick,data-th-onclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onchange,data-th-onchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:href,data-th-href}] [1000]: org.thymeleaf.standard.processor.StandardHrefTagProcessor
[THYMELEAF]             * [* {th:inline,data-th-inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineHTMLTagProcessor
[THYMELEAF]             * [* {th:method,data-th-method}] [1000]: org.thymeleaf.standard.processor.StandardMethodTagProcessor
[THYMELEAF]             * [* {th:type,data-th-type}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:name,data-th-name}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:data,data-th-data}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:archive,data-th-archive}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rel,data-th-rel}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scheme,data-th-scheme}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scrolling,data-th-scrolling}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:manifest,data-th-manifest}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formenctype,data-th-formenctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:vspace,data-th-vspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scope,data-th-scope}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:http-equiv,data-th-http-equiv}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:colspan,data-th-colspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cols,data-th-cols}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:kind,data-th-kind}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:classid,data-th-classid}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:compact,data-th-compact}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:id,data-th-id}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:valuetype,data-th-valuetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:draggable,data-th-draggable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:border,data-th-border}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:step,data-th-step}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:align,data-th-align}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:list,data-th-list}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:maxlength,data-th-maxlength}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:label,data-th-label}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:wrap,data-th-wrap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cite,data-th-cite}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginheight,data-th-marginheight}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:radiogroup,data-th-radiogroup}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rules,data-th-rules}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:form,data-th-form}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codebase,data-th-codebase}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:span,data-th-span}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:placeholder,data-th-placeholder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formaction,data-th-formaction}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:spellcheck,data-th-spellcheck}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frame,data-th-frame}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sizes,data-th-sizes}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:max,data-th-max}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:lang,data-th-lang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:challenge,data-th-challenge}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frameborder,data-th-frameborder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellspacing,data-th-cellspacing}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:title,data-th-title}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:class,data-th-class}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:high,data-th-high}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:icon,data-th-icon}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rows,data-th-rows}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:preload,data-th-preload}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:poster,data-th-poster}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:summary,data-th-summary}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:headers,data-th-headers}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:bgcolor,data-th-bgcolor}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:datetime,data-th-datetime}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dropzone,data-th-dropzone}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contextmenu,data-th-contextmenu}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:style,data-th-style}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hreflang,data-th-hreflang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contenteditable,data-th-contenteditable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sandbox,data-th-sandbox}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:keytype,data-th-keytype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formtarget,data-th-formtarget}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:for,data-th-for}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formmethod,data-th-formmethod}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:min,data-th-min}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hspace,data-th-hspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dir,data-th-dir}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginwidth,data-th-marginwidth}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:charset,data-th-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:longdesc,data-th-longdesc}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept-charset,data-th-accept-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:abbr,data-th-abbr}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:usemap,data-th-usemap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellpadding,data-th-cellpadding}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:content,data-th-content}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:low,data-th-low}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:tabindex,data-th-tabindex}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:srclang,data-th-srclang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codetype,data-th-codetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rowspan,data-th-rowspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:size,data-th-size}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:media,data-th-media}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:audio,data-th-audio}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:background,data-th-background}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:standby,data-th-standby}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:start,data-th-start}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:width,data-th-width}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:target,data-th-target}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:axis,data-th-axis}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rev,data-th-rev}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:pattern,data-th-pattern}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept,data-th-accept}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:height,data-th-height}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:autocomplete,data-th-autocomplete}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:enctype,data-th-enctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:alt,data-th-alt}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:optimum,data-th-optimum}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accesskey,data-th-accesskey}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:src,data-th-src}] [1000]: org.thymeleaf.standard.processor.StandardSrcTagProcessor
[THYMELEAF]             * [* {th:value,data-th-value}] [1000]: org.thymeleaf.standard.processor.StandardValueTagProcessor
[THYMELEAF]             * [* {th:xmlbase,data-th-xmlbase}] [1000]: org.thymeleaf.standard.processor.StandardXmlBaseTagProcessor
[THYMELEAF]             * [* {th:xmllang,data-th-xmllang}] [1000]: org.thymeleaf.standard.processor.StandardXmlLangTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:xmlspace,data-th-xmlspace}] [1000]: org.thymeleaf.standard.processor.StandardXmlSpaceTagProcessor
[THYMELEAF]             * [* {th:classappend,data-th-classappend}] [1100]: org.thymeleaf.standard.processor.StandardClassappendTagProcessor
[THYMELEAF]             * [* {th:styleappend,data-th-styleappend}] [1100]: org.thymeleaf.standard.processor.StandardStyleappendTagProcessor
[THYMELEAF]             * [* {th:text,data-th-text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext,data-th-utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment,data-th-fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert,data-th-assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove,data-th-remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:ref,data-th-ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block,th-block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * DOCTYPE Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardTranslationDocTypeProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]             * [1100]: org.thymeleaf.standard.processor.StandardConditionalCommentProcessor
[THYMELEAF]     * Processors for Template Mode: XML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: com.intuit.karate.template.KarateEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: com.intuit.karate.template.KarateWithTagProcessor
[THYMELEAF]             * [* {th:attr}] [700]: com.intuit.karate.template.KarateAttributeTagProcessor.KarateAttrTagProcessor
[THYMELEAF]             * [* {th:attrappend}] [900]: com.intuit.karate.template.KarateAttributeTagProcessor.KarateAttrappendTagProcessor
[THYMELEAF]             * [* {th:attrprepend}] [900]: com.intuit.karate.template.KarateAttributeTagProcessor.KarateAttrprependTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineXMLTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]     * Processors for Template Mode: TEXT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: com.intuit.karate.template.KarateEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: com.intuit.karate.template.KarateWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: JAVASCRIPT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: com.intuit.karate.template.KarateEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: com.intuit.karate.template.KarateWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: CSS
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: com.intuit.karate.template.KarateEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: com.intuit.karate.template.KarateWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #ctx
[THYMELEAF]         * #root
[THYMELEAF]         * #vars
[THYMELEAF]         * #object
[THYMELEAF]         * #locale
[THYMELEAF]         * #conversions
[THYMELEAF]         * #uris
[THYMELEAF]         * #temporals
[THYMELEAF]         * #calendars
[THYMELEAF]         * #dates
[THYMELEAF]         * #bools
[THYMELEAF]         * #numbers
[THYMELEAF]         * #objects
[THYMELEAF]         * #strings
[THYMELEAF]         * #arrays
[THYMELEAF]         * #lists
[THYMELEAF]         * #sets
[THYMELEAF]         * #maps
[THYMELEAF]         * #aggregates
[THYMELEAF]         * #messages
[THYMELEAF]         * #ids
[THYMELEAF]         * #execInfo
[THYMELEAF]         * #request
[THYMELEAF]         * #response
[THYMELEAF]         * #session
[THYMELEAF]         * #servletContext
[THYMELEAF]     * Execution Attributes:
[THYMELEAF]         * "StandardExpressionParser": com.intuit.karate.template.KarateStandardDialect@4abf3f0
[THYMELEAF]         * "StandardJavaScriptSerializer": org.thymeleaf.standard.serializer.StandardJavaScriptSerializer@76c52298
[THYMELEAF]         * "StandardCSSSerializer": org.thymeleaf.standard.serializer.StandardCSSSerializer@bb9ab64
[THYMELEAF]         * "StandardVariableExpressionEvaluator": com.intuit.karate.template.KarateStandardDialect@4abf3f0
[THYMELEAF]         * "StandardConversionService": org.thymeleaf.standard.expression.StandardConversionService@a52ca2e
[THYMELEAF] * Dialect [2 of 2]: karate (com.intuit.karate.template.KarateScriptDialect)
[THYMELEAF]     * Prefix: "ka"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {src}] [1000]: com.intuit.karate.template.KaScriptAttrProcessor
[THYMELEAF]         * Element Model Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [{script} {ka:scope,data-ka-scope}] [1000]: com.intuit.karate.template.KaScriptElemProcessor
[THYMELEAF]             * [* {ka:set,data-ka-set}] [1000]: com.intuit.karate.template.KaSetElemProcessor
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
22:25:42.934 [main] DEBUG org.thymeleaf.TemplateEngine -- [THYMELEAF] TEMPLATE ENGINE INITIALIZED

HTML report: (paste into browser to view) | Karate version: 1.4.1
file:///C:/Users/chand/SDET/Scorecraze(Karate)/target/karate-reports/karate-summary.html
===================================================================

Execution finished. Check target/karate-reports/karate-summary.html
]]></system-out>
  </testcase>
</testsuite>